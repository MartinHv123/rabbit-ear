const e=typeof window!=="undefined"&&typeof window.document!=="undefined";const t=typeof process!=="undefined"&&process.versions!=null&&process.versions.node!=null;const n={planarize:"graph could not planarize",manifold:"valid manifold required",graphCycle:"cycle not allowed",planarBoundary:"planar boundary detection error, bad graph",circularEdge:"circular edges not allowed",replaceModifyParam:"replace() index < value. indices parameter modified",replaceUndefined:"replace() generated undefined",flatFoldAngles:"foldAngles cannot be determined from flat-folded faces without an assignment",noWebGL:"WebGl not Supported",convexFace:"only convex faces are supported",window:"window not set; if using node/deno include package @xmldom/xmldom and set ear.window = xmldom",nonConvexTriangulation:"non-convex triangulation requires vertices_coords",backendStylesheet:"svgToFold found <style> in <svg>. rendering will be incomplete unless run in a major browser.",noLayerSolution:"LayerSolver bad input. no solution possible"};const s={window:undefined};const r=e=>(new e.DOMParser).parseFromString("<!DOCTYPE html><title>.</title>","text/html");const o=e=>{if(!e.document){e.document=r(e)}s.window=e;return s.window};if(e){s.window=window}const c=()=>{if(s.window===undefined){throw new Error(n.window)}return s.window};const a=1e-6;const i=180/Math.PI;const f=Math.PI/180;const l=Math.PI*2;const d=Object.freeze({__proto__:null,D2R:f,EPSILON:a,R2D:i,TWO_PI:l});const u=(e,t)=>e+(t||0);const m=e=>Math.sqrt(e.map((e=>e*e)).reduce(u,0));const g=e=>Math.sqrt(e[0]*e[0]+e[1]*e[1]);const p=e=>Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);const _=e=>e.map((e=>e*e)).reduce(u,0);const h=e=>{const t=m(e);return t===0?e:e.map((e=>e/t))};const v=e=>{const t=g(e);return t===0?e:[e[0]/t,e[1]/t]};const b=e=>{const t=p(e);return t===0?e:[e[0]/t,e[1]/t,e[2]/t]};const y=(e,t)=>e.map((e=>e*t));const E=(e,t)=>[e[0]*t,e[1]*t];const x=(e,t)=>[e[0]*t,e[1]*t,e[2]*t];const A=(e,t)=>e.map(((e,n)=>e+(t[n]||0)));const M=(e,t)=>[e[0]+t[0],e[1]+t[1]];const k=(e,t)=>[e[0]+t[0],e[1]+t[1],e[2]+t[2]];const w=(e,t)=>e.map(((e,n)=>e-(t[n]||0)));const O=(e,t)=>[e[0]-t[0],e[1]-t[1]];const j=(e,t)=>[e[0]-t[0],e[1]-t[1],e[2]-t[2]];const F=(e,t)=>e.map(((n,s)=>e[s]*t[s])).reduce(u,0);const C=(e,t)=>e[0]*t[0]+e[1]*t[1];const S=(e,t)=>e[0]*t[0]+e[1]*t[1]+e[2]*t[2];const P=(e,t)=>e.map(((e,n)=>(e+t[n])/2));const N=(e,t)=>E(M(e,t),.5);const V=(e,t)=>x(k(e,t),.5);const z=function(){if(arguments.length===0){return undefined}const e=arguments[0].length>0?arguments[0].length:0;const t=Array(e).fill(0);Array.from(arguments).forEach((e=>t.forEach(((n,s)=>{t[s]+=e[s]||0}))));return t.map((e=>e/arguments.length))};const T=(...e)=>{if(!e||!e.length){return undefined}const t=1/e.length;return e.reduce(((e,t)=>M(e,t)),[0,0]).map((e=>e*t))};const $=(e,t,n)=>{const s=1-n;return e.map(((e,r)=>e*s+(t[r]||0)*n))};const B=(e,t)=>e[0]*t[1]-e[1]*t[0];const L=(e,t)=>[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]];const I=(e,t)=>Math.sqrt(e.map(((n,s)=>(e[s]-t[s])**2)).reduce(u,0));const U=(e,t)=>{const n=e[0]-t[0];const s=e[1]-t[1];return Math.sqrt(n*n+s*s)};const R=(e,t)=>{const n=e[0]-t[0];const s=e[1]-t[1];const r=e[2]-t[2];return Math.sqrt(n*n+s*s+r*r)};const q=e=>e.map((e=>-e));const D=e=>[-e[1],e[0]];const W=e=>[e[1],-e[0]];const G=(e,t=a)=>e.map((e=>Math.abs(e))).reduce(u,0)<t;const H=(e,t,n=a)=>1-Math.abs(F(e,t))<n;const J=(e,t,n=a)=>H(h(e),h(t),n);const Q=(e,t,n=a)=>Math.abs(B(e,t))<n;const Z=(e,t)=>t.length===e?t:Array(e).fill(0).map(((e,n)=>t[n]?t[n]:e));const Y=(e,t)=>[e,t].map((n=>Z(Math.max(e.length,t.length),n)));const X=(e=[1,0])=>{const t=v(e);return[t,D(t)]};const K=(e=[1,0,0])=>{const t=b(e);const n=[[1,0,0],[0,1,0],[0,0,1]].map((e=>L(e,t)));const s=n.map(p).map(((e,t)=>({n:e,i:t}))).sort(((e,t)=>t.n-e.n)).map((e=>e.i)).shift();const r=b(n[s]);return[t,r,L(t,r)]};const ee=e=>e.length===2?X(e):K(e);const te=Object.freeze({__proto__:null,add:A,add2:M,add3:k,average:z,average2:T,basisVectors:ee,basisVectors2:X,basisVectors3:K,cross2:B,cross3:L,degenerate:G,distance:I,distance2:U,distance3:R,dot:F,dot2:C,dot3:S,flip:q,lerp:$,magSquared:_,magnitude:m,magnitude2:g,magnitude3:p,midpoint:P,midpoint2:N,midpoint3:V,normalize:h,normalize2:v,normalize3:b,parallel:J,parallel2:Q,parallelNormalized:H,resize:Z,resizeUp:Y,rotate270:W,rotate90:D,scale:y,scale2:E,scale3:x,subtract:w,subtract2:O,subtract3:j});const ne=[1,0,0,1];const se=ne.concat(0,0);const re=(e,t)=>[e[0]*t[0]+e[2]*t[1]+e[4],e[1]*t[0]+e[3]*t[1]+e[5]];const oe=(e,t,n)=>({vector:[e[0]*t[0]+e[2]*t[1],e[1]*t[0]+e[3]*t[1]],origin:[e[0]*n[0]+e[2]*n[1]+e[4],e[1]*n[0]+e[3]*n[1]+e[5]]});const ce=(e,t)=>[e[0]*t[0]+e[2]*t[1],e[1]*t[0]+e[3]*t[1],e[0]*t[2]+e[2]*t[3],e[1]*t[2]+e[3]*t[3],e[0]*t[4]+e[2]*t[5]+e[4],e[1]*t[4]+e[3]*t[5]+e[5]];const ae=e=>e[0]*e[3]-e[1]*e[2];const ie=e=>{const t=ae(e);if(Math.abs(t)<1e-12||Number.isNaN(t)||!Number.isFinite(e[4])||!Number.isFinite(e[5])){return undefined}return[e[3]/t,-e[1]/t,-e[2]/t,e[0]/t,(e[2]*e[5]-e[3]*e[4])/t,(e[1]*e[4]-e[0]*e[5])/t]};const fe=(e=0,t=0)=>ne.concat(e,t);const le=(e=[1,1],t=[0,0])=>[e[0],0,0,e[1],e[0]*-t[0]+t[0],e[1]*-t[1]+t[1]];const de=(e=1,t=[0,0])=>le([e,e],t);const ue=(e,t=[0,0])=>{const n=Math.cos(e);const s=Math.sin(e);return[n,s,-s,n,t[0],t[1]]};const me=(e,t=[0,0])=>{const n=Math.atan2(e[1],e[0]);const s=Math.cos(n);const r=Math.sin(n);const o=Math.cos(-n);const c=Math.sin(-n);const a=s*o+r*c;const i=s*-c+r*o;const f=r*o+-s*c;const l=r*-c+-s*o;const d=t[0]+a*-t[0]+-t[1]*f;const u=t[1]+i*-t[0]+-t[1]*l;return[a,i,f,l,d,u]};const ge=Object.freeze({__proto__:null,determinant2:ae,identity2x2:ne,identity2x3:se,invertMatrix2:ie,makeMatrix2Reflect:me,makeMatrix2Rotate:ue,makeMatrix2Scale:le,makeMatrix2Translate:fe,makeMatrix2UniformScale:de,multiplyMatrices2:ce,multiplyMatrix2Line2:oe,multiplyMatrix2Vector2:re});const pe=Object.freeze([1,0,0,0,1,0,0,0,1]);const _e=Object.freeze(pe.concat(0,0,0));const he=e=>_e.map(((t,n)=>Math.abs(t-e[n])<a)).reduce(((e,t)=>e&&t),true);const ve=(e,t)=>[e[0]*t[0]+e[3]*t[1]+e[6]*t[2]+e[9],e[1]*t[0]+e[4]*t[1]+e[7]*t[2]+e[10],e[2]*t[0]+e[5]*t[1]+e[8]*t[2]+e[11]];const be=(e,t,n)=>({vector:[e[0]*t[0]+e[3]*t[1]+e[6]*t[2],e[1]*t[0]+e[4]*t[1]+e[7]*t[2],e[2]*t[0]+e[5]*t[1]+e[8]*t[2]],origin:[e[0]*n[0]+e[3]*n[1]+e[6]*n[2]+e[9],e[1]*n[0]+e[4]*n[1]+e[7]*n[2]+e[10],e[2]*n[0]+e[5]*n[1]+e[8]*n[2]+e[11]]});const ye=(e,t)=>[e[0]*t[0]+e[3]*t[1]+e[6]*t[2],e[1]*t[0]+e[4]*t[1]+e[7]*t[2],e[2]*t[0]+e[5]*t[1]+e[8]*t[2],e[0]*t[3]+e[3]*t[4]+e[6]*t[5],e[1]*t[3]+e[4]*t[4]+e[7]*t[5],e[2]*t[3]+e[5]*t[4]+e[8]*t[5],e[0]*t[6]+e[3]*t[7]+e[6]*t[8],e[1]*t[6]+e[4]*t[7]+e[7]*t[8],e[2]*t[6]+e[5]*t[7]+e[8]*t[8],e[0]*t[9]+e[3]*t[10]+e[6]*t[11]+e[9],e[1]*t[9]+e[4]*t[10]+e[7]*t[11]+e[10],e[2]*t[9]+e[5]*t[10]+e[8]*t[11]+e[11]];const Ee=e=>e[0]*e[4]*e[8]-e[0]*e[7]*e[5]-e[3]*e[1]*e[8]+e[3]*e[7]*e[2]+e[6]*e[1]*e[5]-e[6]*e[4]*e[2];const xe=e=>{const t=Ee(e);if(Math.abs(t)<1e-12||Number.isNaN(t)||!Number.isFinite(e[9])||!Number.isFinite(e[10])||!Number.isFinite(e[11])){return undefined}const n=[e[4]*e[8]-e[7]*e[5],-e[1]*e[8]+e[7]*e[2],e[1]*e[5]-e[4]*e[2],-e[3]*e[8]+e[6]*e[5],e[0]*e[8]-e[6]*e[2],-e[0]*e[5]+e[3]*e[2],e[3]*e[7]-e[6]*e[4],-e[0]*e[7]+e[6]*e[1],e[0]*e[4]-e[3]*e[1],-e[3]*e[7]*e[11]+e[3]*e[8]*e[10]+e[6]*e[4]*e[11]-e[6]*e[5]*e[10]-e[9]*e[4]*e[8]+e[9]*e[5]*e[7],e[0]*e[7]*e[11]-e[0]*e[8]*e[10]-e[6]*e[1]*e[11]+e[6]*e[2]*e[10]+e[9]*e[1]*e[8]-e[9]*e[2]*e[7],-e[0]*e[4]*e[11]+e[0]*e[5]*e[10]+e[3]*e[1]*e[11]-e[3]*e[2]*e[10]-e[9]*e[1]*e[5]+e[9]*e[2]*e[4]];const s=1/t;return n.map((e=>e*s))};const Ae=(e=0,t=0,n=0)=>pe.concat(e,t,n);const Me=(e,t,n,s,r)=>{const o=Math.cos(e);const c=Math.sin(e);const a=pe.concat([0,0,0]);a[n*3+n]=o;a[n*3+s]=(r?+1:-1)*c;a[s*3+n]=(r?-1:+1)*c;a[s*3+s]=o;const i=[0,1,2].map((e=>t[e]||0));const f=pe.concat(q(i));const l=pe.concat(i);return ye(l,ye(a,f))};const ke=(e,t=[0,0,0])=>Me(e,t,1,2,true);const we=(e,t=[0,0,0])=>Me(e,t,0,2,false);const Oe=(e,t=[0,0,0])=>Me(e,t,0,1,true);const je=(e,t=[0,0,1],n=[0,0,0])=>{const s=[0,1,2].map((e=>n[e]||0));const[r,o,c]=Z(3,h(t));const a=Math.cos(e);const i=Math.sin(e);const f=1-a;const l=pe.concat(-s[0],-s[1],-s[2]);const d=pe.concat(s[0],s[1],s[2]);return ye(d,ye([f*r*r+a,f*o*r+c*i,f*c*r-o*i,f*r*o-c*i,f*o*o+a,f*c*o+r*i,f*r*c+o*i,f*o*c-r*i,f*c*c+a,0,0,0],l))};const Fe=(e=[1,1,1],t=[0,0,0])=>[e[0],0,0,0,e[1],0,0,0,e[2],e[0]*-t[0]+t[0],e[1]*-t[1]+t[1],e[2]*-t[2]+t[2]];const Ce=(e=1,t=[0,0,0])=>Fe([e,e,e],t);const Se=(e,t=[0,0])=>{const n=me(e,t);return[n[0],n[1],0,n[2],n[3],0,0,0,1,n[4],n[5],0]};const Pe=Object.freeze({__proto__:null,determinant3:Ee,identity3x3:pe,identity3x4:_e,invertMatrix3:xe,isIdentity3x4:he,makeMatrix3ReflectZ:Se,makeMatrix3Rotate:je,makeMatrix3RotateX:ke,makeMatrix3RotateY:we,makeMatrix3RotateZ:Oe,makeMatrix3Scale:Fe,makeMatrix3Translate:Ae,makeMatrix3UniformScale:Ce,multiplyMatrices3:ye,multiplyMatrix3Line3:be,multiplyMatrix3Vector3:ve});const Ne=e=>e!=null&&typeof e[Symbol.iterator]==="function";const Ve=function(){switch(arguments.length){case 0:return Array.from(arguments);case 1:return Ne(arguments[0])&&typeof arguments[0]!=="string"?Ve(...arguments[0]):[arguments[0]];default:return Array.from(arguments).map((e=>Ne(e)?[...Ve(e)]:e))}};const ze=function(){switch(arguments.length){case 0:return Array.from(arguments);case 1:return Ne(arguments[0])&&typeof arguments[0]!=="string"?ze(...arguments[0]):[arguments[0]];default:return Array.from(arguments).map((e=>Ne(e)?[...ze(e)]:e)).flat()}};const Te=Object.freeze({__proto__:null,flattenArrays:ze,semiFlattenArrays:Ve});const $e=function(){let e=ze(arguments);const t=e[0];if(typeof t==="object"&&t!==null&&!Number.isNaN(t.x)){e=["x","y","z"].map((e=>t[e])).filter((e=>e!==undefined))}return e.filter((e=>typeof e==="number"))};const Be=function(){return Ve(arguments).map((e=>$e(e)))};const Le=function(){const e=Ve(arguments);return e.length===4?[[0,1],[2,3]].map((t=>t.map((t=>e[t])))):e.map((e=>$e(e)))};const Ie=(e,t=[])=>({vector:e,origin:t});const Ue=function(){const e=Ve(arguments);if(e.length===0||e[0]==null){return Ie([],[])}if(e[0].constructor===Object&&e[0].vector!==undefined){return Ie(e[0].vector,e[0].origin||[])}return typeof e[0]==="number"?Ie($e(e)):Ie(...e.map((e=>$e(e))))};const Re=Object.freeze({__proto__:null,getArrayOfVectors:Be,getLine:Ue,getSegment:Le,getVector:$e});const qe=e=>Array.from(Array(Math.floor(e))).map(((t,n)=>l*(n/e)));const De=(e,t)=>e.map((e=>[t*Math.cos(e),t*Math.sin(e)]));const We=(e=3,t=1)=>De(qe(e),t);const Ge=(e=3,t=1)=>{const n=Math.PI/e;const s=qe(e).map((e=>e+n));return De(s,t)};const He=(e=3,t=1)=>We(e,t/Math.cos(Math.PI/e));const Je=(e=3,t=1)=>Ge(e,t/Math.cos(Math.PI/e));const Qe=(e=3,t=1)=>We(e,t/2/Math.sin(Math.PI/e));const Ze=(e=3,t=1)=>Ge(e,t/2/Math.sin(Math.PI/e));const Ye=(e,t=a)=>{const n=e.map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>w(e[1],e[0])));const s=n.map(((e,t,n)=>[e,n[(t+n.length-1)%n.length]])).map((e=>!J(e[1],e[0],t)));return e.filter(((e,t)=>s[t]))};const Xe=(e,t,n)=>{const s=t[0]-e[0];const r=t[1]-e[1];const o=n[0]-e[0];const c=n[1]-e[1];const i=s*(e[0]+t[0])+r*(e[1]+t[1]);const f=o*(e[0]+n[0])+c*(e[1]+n[1]);const l=2*(s*(n[1]-t[1])-r*(n[0]-t[0]));if(Math.abs(l)<a){const s=Math.min(e[0],t[0],n[0]);const r=Math.min(e[1],t[1],n[1]);const o=(Math.max(e[0],t[0],n[0])-s)*.5;const c=(Math.max(e[1],t[1],n[1])-r)*.5;return{origin:[s+o,r+c],radius:Math.sqrt(o*o+c*c)}}const d=[(c*i-r*f)/l,(s*f-o*i)/l];const u=d[0]-e[0];const m=d[1]-e[1];return{origin:d,radius:Math.sqrt(u*u+m*m)}};const Ke=e=>.5*e.map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>B(...e))).reduce(((e,t)=>e+t),0);const et=e=>{const t=1/(6*Ke(e));return e.map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>E(M(...e),B(...e)))).reduce(((e,t)=>M(e,t)),[0,0]).map((e=>e*t))};const tt=(e,t=0)=>{if(!e||!e.length){return undefined}const n=Array(e[0].length).fill(Infinity);const s=Array(e[0].length).fill(-Infinity);e.forEach((e=>e.forEach(((e,r)=>{if(e<n[r]){n[r]=e-t}if(e>s[r]){s[r]=e+t}}))));const r=s.map(((e,t)=>e-n[t]));return{min:n,max:s,span:r}};const nt=Object.freeze({__proto__:null,boundingBox:tt,centroid:et,circumcircle:Xe,makePolygonCircumradius:We,makePolygonCircumradiusSide:Ge,makePolygonInradius:He,makePolygonInradiusSide:Je,makePolygonNonCollinear:Ye,makePolygonSideLength:Qe,makePolygonSideLengthSide:Ze,signedArea:Ke});const st=(e,t,n=a)=>Math.abs(e-t)<n;const rt=(e,t,n=a)=>st(e,t,n)?0:Math.sign(t-e);const ot=(e,t,n=a)=>{for(let s=0;s<Math.max(e.length,t.length);s+=1){if(!st(e[s]||0,t[s]||0,n)){return false}}return true};const ct=(e,t=a)=>e>-t;const at=(e,t=a)=>e>t;const it=()=>true;const ft=()=>true;const lt=ct;const dt=at;const ut=(e,t=a)=>e>-t&&e<1+t;const mt=(e,t=a)=>e>t&&e<1-t;const gt=e=>e;const pt=e=>e<-a?0:e;const _t=e=>{if(e<-a){return 0}if(e>1+a){return 1}return e};const ht=Object.freeze({__proto__:null,clampLine:gt,clampRay:pt,clampSegment:_t,epsilonCompare:rt,epsilonEqual:st,epsilonEqualVectors:ot,exclude:at,excludeL:ft,excludeR:dt,excludeS:mt,include:ct,includeL:it,includeR:lt,includeS:ut});const vt={file:["file_spec","file_creator","file_author","file_title","file_description","file_classes","file_frames"],frame:["frame_author","frame_title","frame_description","frame_attributes","frame_classes","frame_unit","frame_parent","frame_inherit"],graph:["vertices_coords","vertices_vertices","vertices_faces","edges_vertices","edges_faces","edges_assignment","edges_foldAngle","edges_length","faces_vertices","faces_edges","vertices_edges","edges_edges","faces_faces"],orders:["edgeOrders","faceOrders"]};const bt=["singleModel","multiModel","animation","diagrams"];const yt=["creasePattern","foldedForm","graph","linkage"];const Et=["2D","3D","abstract","manifold","nonManifold","orientable","nonOrientable","selfTouching","nonSelfTouching","selfIntersecting","nonSelfIntersecting"];const xt=Object.freeze({__proto__:null,foldFileClasses:bt,foldFrameAttributes:Et,foldFrameClasses:yt,foldKeys:vt});const At={vertices:"vertex",edges:"edge",faces:"face"};const Mt={vertex:"vertices",edge:"edges",face:"faces"};const kt=Array.from("BbMmVvFfJjCcUu");const wt={b:"boundary",m:"mountain",v:"valley",f:"flat",j:"join",c:"cut",u:"unassigned"};Object.keys(wt).forEach((e=>{wt[e.toUpperCase()]=wt[e]}));const Ot={B:0,b:0,M:-180,m:-180,V:180,v:180,F:0,f:0,J:0,j:0,C:0,c:0,U:0,u:0};const jt={B:false,b:false,M:true,m:true,V:true,v:true,F:false,f:false,J:false,j:false,C:false,c:false,U:true,u:true};const Ft={B:true,b:true,M:false,m:false,V:false,v:false,F:false,f:false,J:false,j:false,C:true,c:true,U:false,u:false};const Ct=e=>Ot[e]||0;const St=e=>{if(e>a){return"V"}if(e<-a){return"M"}return"U"};const Pt=e=>st(0,e)||st(-180,e)||st(180,e);const Nt=({edges_foldAngle:e})=>{if(!e){return true}for(let t=0;t<e.length;t+=1){if(!Pt(e[t])){return false}}return true};const Vt=(e,t)=>Object.keys(e).filter((e=>t(e)));const zt=(e,t)=>Vt(e,(e=>e.substring(0,t.length+1)===`${t}_`));const Tt=(e,t)=>Vt(e,(e=>e.substring(e.length-t.length-1,e.length)===`_${t}`));const $t=(e,t)=>{const n=zt(e,t);if(n.length===0){return[]}const s=Math.max(...n.map((t=>e[t].length)));const r=Array.from(Array(s)).map((()=>({})));n.forEach((t=>r.forEach(((n,s)=>{r[s][t]=e[t][s]}))));return r};const Bt=(e,t,n)=>{const s=zt(e,t);if(s.length===0){return undefined}const r={};s.forEach((t=>{r[t]=e[t][n]}));return r};const Lt=Object.freeze([].concat(vt.file).concat(vt.frame).concat(vt.graph).concat(vt.orders));const It=(e={})=>Object.keys(e).length===0?0:Lt.filter((t=>e[t])).length/Object.keys(e).length;const Ut=({frame_classes:e,file_classes:t})=>e&&e.includes("foldedForm")||t&&t.includes("foldedForm");const Rt=({vertices_coords:e})=>{if(e[0]!==undefined){return e[0].length}const t=e.filter((()=>true)).shift();if(!t){return undefined}return t.length};const qt=({edges_vertices:e,edges_foldAngle:t,edges_assignment:n})=>{if(n===undefined){return t===undefined?e.map((()=>true)):t.map((e=>e<-a||e>a))}return n.map((e=>jt[e]))};const Dt=e=>{const t={M:"V",m:"v",V:"M",v:"m"};if(e.edges_assignment){e.edges_assignment=e.edges_assignment.map((e=>t[e]?t[e]:e))}if(e.edges_foldAngle){e.edges_foldAngle=e.edges_foldAngle.map((e=>-e))}return e};const Wt=(e={})=>{const t={};vt.file.filter((e=>e!=="file_frames")).filter((t=>e[t]!==undefined)).forEach((n=>{t[n]=e[n]}));return t};const Gt=Object.freeze({__proto__:null,assignmentCanBeFolded:jt,assignmentFlatFoldAngle:Ot,assignmentIsBoundary:Ft,edgeAssignmentToFoldAngle:Ct,edgeFoldAngleIsFlat:Pt,edgeFoldAngleToAssignment:St,edgesAssignmentNames:wt,edgesAssignmentValues:kt,edgesFoldAngleAreAllFlat:Nt,filterKeysWithPrefix:zt,filterKeysWithSuffix:Tt,getDimension:Rt,getFileMetadata:Wt,invertAssignments:Dt,isFoldObject:It,isFoldedForm:Ut,makeEdgesIsFolded:qt,pluralize:Mt,singularize:At,transposeGraphArrayAtIndex:Bt,transposeGraphArrays:$t});const Ht=function(e,t){Tt(e,"coords").forEach((n=>{e[n]=e[n].map((e=>Z(3,e))).map((e=>ve(t,e)))}));Tt(e,"matrix").forEach((n=>{e[n]=e[n].map((e=>ye(e,t)))}));return e};const Jt=(e,...t)=>{const n=t.flat();const s=n.length===1?[n[0],n[0],n[0]]:[1,1,1].map(((e,t)=>n[t]===undefined?e:n[t]));const r=Fe(s);return Ht(e,r)};const Qt=(e,...t)=>{const n=$e(...t);const s=Z(3,n);const r=Ae(...s);return Ht(e,r)};const Zt=(e,t,n,s)=>Ht(e,je(t,n,s));const Yt=(e,t,...n)=>{const s=$e(...n);const r=Z(3,s);const o=Oe(t,r);return Ht(e,o)};const Xt=function(e){if(!e.vertices_coords){return e}const t=tt(e.vertices_coords);const n=Math.max(...t.span);const s=n===0?1:1/n;const r=t.min;e.vertices_coords=e.vertices_coords.map((e=>w(e,r))).map((e=>e.map((e=>e*s))));return e};const Kt=Object.freeze({__proto__:null,rotate:Zt,rotateZ:Yt,scale:Jt,transform:Ht,translate:Qt,unitize:Xt});const en=({vertices_coords:e},t=a)=>{if(!e){return[]}const n=Rt({vertices_coords:e});const s=Array.from(Array(n));const r=[];const o=[];const c=e.map(((e,t)=>({i:t,d:e[0]}))).sort(((e,t)=>e.d-t.d)).map((e=>e.i));let i=0;const f=s.map((()=>[0,0]));const l=t=>s.map(((n,s)=>e[t][s]>f[s][0]&&e[t][s]<f[s][1])).reduce(((e,t)=>e&&t),true);const d=s=>{const r=s[s.length-1];while(e[r][0]-e[s[i]][0]>t){i+=1}const o=s.slice(i,s.length).map((t=>e[t]));f[0]=[o[0][0]-t,o[o.length-1][0]+t];for(let e=1;e<n;e+=1){const n=o.map((t=>t[e]));f[e]=[Math.min(...n)-t,Math.max(...n)+t]}};while(o.length!==e.length){const t=[];const n=c.shift();t.push(n);o.push(n);i=0;d(t);let s=0;while(s<c.length&&e[c[s]][0]<f[0][1]){if(l(c[s])){const e=c.splice(s,1).shift();t.push(e);o.push(e);d(t)}else{s+=1}}r.push(t)}return r};const tn=Object.freeze({__proto__:null,getVerticesClusters:en});const nn=(...e)=>Math.max(0,...e.filter((e=>e!==undefined)).map((e=>e.length)));const sn=(e,t)=>nn(...zt(e,t).map((t=>e[t])));sn.vertices=({vertices_coords:e,vertices_faces:t,vertices_vertices:n})=>nn(e,t,n);sn.edges=({edges_vertices:e,edges_edges:t,edges_faces:n})=>nn(e,t,n);sn.faces=({faces_vertices:e,faces_edges:t,faces_faces:n})=>nn(e,t,n);const rn=e=>Array.from(new Set(e));const on=e=>{const t={};e.forEach((e=>{if(t[e]===undefined){t[e]=0}t[e]+=1}));return e.filter((e=>t[e]>1))};const cn=e=>{const t={};e.forEach((e=>{t[e]=true}));return Object.keys(t).map(parseFloat)};const an=(e,t=a)=>{const n=e.slice().sort(((e,t)=>e-t));if(n.length<2){return n}const s=[true];for(let e=1;e<n.length;e+=1){s[e]=!st(n[e],n[e-1],t)}return n.filter(((e,t)=>s[t]))};const fn=(...e)=>{const t=[];e.forEach((e=>e.forEach(((e,n)=>{t[n]=e}))));return t};const ln=(e,t)=>{t.sort(((e,t)=>e-t));return[e.slice(t[1]).concat(e.slice(0,t[0]+1)),e.slice(t[0],t[1]+1)]};const dn=e=>{const t=[];const n=[];e.forEach(((e,s)=>e.forEach((e=>{if(s<e){n.push([s,e])}if(s===e&&!t[s]){t[s]=true;n.push([s,e])}}))));return n};const un=(e,t)=>{const n=e.map(((e,t)=>t));const s=[[n[0]]];for(let r=1;r<n.length;r+=1){const o=n[r];const c=s.length-1;const a=s[c][s[c].length-1];if(t(e[a],e[o])){s[c].push(o)}else{s.push([o])}}return s};const mn=(e,t=a)=>{const n=e.map(((e,t)=>({v:e,i:t}))).sort(((e,t)=>e.v-t.v)).map((e=>e.i));const s=n.map((t=>e[t]));const r=(e,n)=>Math.abs(e-n)<t;return un(s,r).map((e=>n[e]))};const gn=(e,t=a)=>{const n=e.map(((e,t)=>({v:e,i:t}))).sort(((e,t)=>e.v-t.v)).map((e=>e.i));const s=[[n[0]]];for(let r=1;r<n.length;r+=1){const o=n[r];const c=s.length-1;const a=s[c][s[c].length-1];if(Math.abs(e[a]-e[o])<t){s[c].push(o)}else{s.push([o])}}return s};const pn=(e,t=a)=>{const n=[[0]];for(let s=1;s<e.length;s+=1){let r=false;for(let o=0;o<n.length;o+=1){const c=n[o][0];if(J(e[s],e[c],t)){n[o].push(s);r=true;break}}if(!r){n.push([s])}}return n};const _n=e=>{const t=Array(e.length*(e.length-1)/2);let n=0;for(let s=0;s<e.length-1;s+=1){for(let r=s+1;r<e.length;r+=1,n+=1){t[n]=[e[s],e[r]]}}return t};const hn=Object.freeze({__proto__:null,chooseTwoPairs:_n,clusterParallelVectors:pn,clusterScalars:gn,clusterScalarsNew:mn,clusterSortedGeneric:un,epsilonUniqueSortedNumbers:an,flatSort:fn,nonUniqueElements:on,selfRelationalUniqueIndexPairs:dn,splitCircularArray:ln,uniqueElements:rn,uniqueSortedNumbers:cn});const vn=(e,t,s)=>{const r=sn(e,t);let o=false;Object.entries(s).filter((([e,t])=>e<t)).forEach((([e,t])=>{o=true;delete s[e];s[t]=e}));if(o){console.warn(n.replaceModifyParam)}const c=Object.keys(s).map((e=>parseInt(e,10)));const a=cn(c);const i=[];for(let e=0,t=0,o=0;e<r;e+=1,t+=1){while(e===a[o]){i[e]=i[s[a[o]]];if(i[e]===undefined){throw new Error(n.replaceUndefined)}e+=1;o+=1}if(e<r){i[e]=t}}Tt(e,t).forEach((t=>e[t].forEach(((n,s)=>e[t][s].forEach(((n,r)=>{e[t][s][r]=i[n]}))))));a.reverse();zt(e,t).forEach((t=>a.forEach((n=>e[t].splice(n,1)))));return i};const bn=(e,t)=>en(e,t).filter((e=>e.length>1));const yn=(e,t=a)=>{const n=[];const s=[];const r=en(e,t).filter((e=>e.length>1));r.forEach((e=>{if(Math.min(...e)!==e[0]){e.sort(((e,t)=>e-t))}for(let t=1;t<e.length;t+=1){n[e[t]]=e[0];s.push(e[t])}}));r.map((t=>t.map((t=>e.vertices_coords[t])))).map((e=>z(...e))).forEach(((t,n)=>{e.vertices_coords[r[n][0]]=t}));return{map:vn(e,"vertices",n),remove:s}};const En=Object.freeze({__proto__:null,duplicateVertices:bn,removeDuplicateVertices:yn});const xn=(e,t,n)=>{const s=sn(e,t);const r=cn(n);const o=[];for(let e=0,t=0,n=0;e<s;e+=1,t+=1){while(e===r[n]){o[e]=undefined;e+=1;n+=1}if(e<s){o[e]=t}}Tt(e,t).forEach((t=>e[t].forEach(((n,s)=>e[t][s].forEach(((n,r)=>{e[t][s][r]=o[n]}))))));r.reverse();zt(e,t).forEach((t=>r.forEach((n=>e[t].splice(n,1)))));Tt(e,t).forEach((t=>e[t].forEach(((n,s)=>{e[t][s]=e[t][s].filter((e=>e!==undefined))}))));return o};const An=({vertices_coords:e,edges_vertices:t})=>{if(!e||!t){return[]}let n=e.length;const s=Array(n).fill(false);t.forEach((e=>{e.filter((e=>!s[e])).forEach((e=>{s[e]=true;n-=1}))}));return s.map(((e,t)=>e?undefined:t)).filter((e=>e!==undefined))};const Mn=({vertices_coords:e,faces_vertices:t})=>{if(!e||!t){return[]}let n=e.length;const s=Array(n).fill(false);t.forEach((e=>{e.filter((e=>!s[e])).forEach((e=>{s[e]=true;n-=1}))}));return s.map(((e,t)=>e?undefined:t)).filter((e=>e!==undefined))};const kn=({vertices_coords:e,edges_vertices:t,faces_vertices:n})=>{if(!e){return[]}let s=e.length;const r=Array(s).fill(false);if(t){t.forEach((e=>{e.filter((e=>!r[e])).forEach((e=>{r[e]=true;s-=1}))}))}if(n){n.forEach((e=>{e.filter((e=>!r[e])).forEach((e=>{r[e]=true;s-=1}))}))}return r.map(((e,t)=>e?undefined:t)).filter((e=>e!==undefined))};const wn=(e,t)=>{if(!t){t=kn(e)}return{map:xn(e,"vertices",t),remove:t}};const On=Object.freeze({__proto__:null,edgeIsolatedVertices:An,faceIsolatedVertices:Mn,isolatedVertices:kn,removeIsolatedVertices:wn});const jn=e=>Math.atan2(e[1],e[0]);const Fn=e=>[Math.cos(e),Math.sin(e)];const Cn=(...e)=>{const t=Be(...e);return{vector:w(t[1],t[0]),origin:t[0]}};const Sn=({vector:e,origin:t})=>{const n=m(e);const s=D(e);const r=F(t,s)/n;return{normal:y(s,1/n),distance:r}};const Pn=({normal:e,distance:t})=>({vector:W(e),origin:y(e,t)});const Nn=Object.freeze({__proto__:null,angleToVector:Fn,pointsToLine:Cn,uniqueLineToVecLine:Pn,vecLineToUniqueLine:Sn,vectorToAngle:jn});const Vn=(e,t,n)=>{while(n<t){n+=l}while(e>t){e-=l}while(e<t){e+=l}return e<n};const zn=(e,t)=>{while(e<0){e+=l}while(t<0){t+=l}while(e>l){e-=l}while(t>l){t-=l}const n=e-t;return n>=0?n:l-(t-e)};const Tn=(e,t)=>{while(e<0){e+=l}while(t<0){t+=l}while(e>l){e-=l}while(t>l){t-=l}const n=t-e;return n>=0?n:l-(e-t)};const $n=(e,t)=>{const n=t[0]*e[0]+t[1]*e[1];const s=t[0]*e[1]-t[1]*e[0];let r=Math.atan2(s,n);if(r<0){r+=l}return r};const Bn=(e,t)=>{const n=e[0]*t[0]+e[1]*t[1];const s=e[0]*t[1]-e[1]*t[0];let r=Math.atan2(s,n);if(r<0){r+=l}return r};const Ln=(e,t)=>Fn(jn(e)-$n(e,t)/2);const In=(e,t)=>Fn(jn(e)+Bn(e,t)/2);const Un=(e,t,n)=>{const s=zn(e,t)/n;return Array.from(Array(n-1)).map(((t,n)=>e+s*(n+1)))};const Rn=(e,t,n)=>{const s=Tn(e,t)/n;return Array.from(Array(n-1)).map(((t,n)=>e+s*(n+1)))};const qn=(e,t,n)=>{const s=Math.atan2(e[1],e[0]);const r=Math.atan2(t[1],t[0]);return Un(s,r,n).map(Fn)};const Dn=(e,t,n)=>{const s=Math.atan2(e[1],e[0]);const r=Math.atan2(t[1],t[0]);return Rn(s,r,n).map(Fn)};const Wn=e=>{const t=e.map(((e,t)=>t)).sort(((t,n)=>e[t]-e[n]));return t.slice(t.indexOf(0),t.length).concat(t.slice(0,t.indexOf(0)))};const Gn=e=>Wn(e.map(jn));const Hn=e=>Wn(e).map((t=>e[t])).map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>Tn(e[0],e[1])));const Jn=e=>Hn(e.map(jn));const Qn=(e,t,n,s=a)=>{const r=v(O(t,e));const o=v(O(n,e));const c=B(r,o);if(!st(c,0,s)){return Math.sign(c)}return st(U(e,t)+U(t,n),U(e,n))?0:undefined};const Zn=Object.freeze({__proto__:null,clockwiseAngle2:$n,clockwiseAngleRadians:zn,clockwiseBisect2:Ln,clockwiseSubsect2:qn,clockwiseSubsectRadians:Un,counterClockwiseAngle2:Bn,counterClockwiseAngleRadians:Tn,counterClockwiseBisect2:In,counterClockwiseOrder2:Gn,counterClockwiseOrderRadians:Wn,counterClockwiseSectors2:Jn,counterClockwiseSectorsRadians:Hn,counterClockwiseSubsect2:Dn,counterClockwiseSubsectRadians:Rn,isCounterClockwiseBetween:Vn,threePointTurnDirection:Qn});const Yn=e=>{let t=-1;e.filter((e=>e!==undefined)).forEach((e=>e.forEach((e=>e.forEach((e=>{if(e>t){t=e}}))))));return t};const Xn=e=>{let t=-1;e.forEach((e=>{if(e[0]>t){t=e[0]}if(e[1]>t){t=e[1]}}));return t};const Kn={edges:"edgeOrders",faces:"faceOrders"};const es=(e,t)=>Math.max(Yn(Tt(e,t).map((t=>e[t]))),e[Kn[t]]?Xn(e[Kn[t]]):-1)+1;es.vertices=e=>es(e,"vertices");es.edges=e=>es(e,"edges");es.faces=e=>es(e,"faces");const ts=({vertices_vertices:e,vertices_sectors:t},n,s,r={})=>{const o={};const c={vertices:[n],edges:[],angles:[]};let a=n;let i=s;while(true){const n=e[i];const s=n.indexOf(a);const f=(s+n.length-1)%n.length;const l=n[f];const d=`${i} ${l}`;if(o[d]){Object.assign(r,o);c.vertices.pop();return c}o[d]=true;if(r[d]){return undefined}c.vertices.push(i);c.edges.push(d);if(t){c.angles.push(t[i][f])}a=i;i=l}};const ns=({vertices_vertices:e,vertices_sectors:t})=>{const n={vertices_vertices:e,vertices_sectors:t};const s={};return e.map(((e,t)=>e.map((e=>ts(n,t,e,s))).filter((e=>e!==undefined)))).flat()};const ss=e=>e.filter((e=>e.angles.map((e=>Math.PI-e)).reduce(((e,t)=>e+t),0)>0));const rs=Object.freeze({__proto__:null,counterClockwiseWalk:ts,filterWalkedBoundaryFace:ss,planarVertexWalk:ns});const os=(e,t=[1,0,0],n=[0,0,0])=>{const s=Z(3,e);const r=j(s,Z(3,n));const o=b(Z(3,t));const c=S(o,r);const a=x(o,c);return j(s,a)};const cs=Object.freeze({__proto__:null,projectPointOnPlane:os});const as=(e,t,n)=>{const s=e.map(((e,s)=>({i:s,d:n(t,e)})));let r;let o=Infinity;for(let e=0;e<s.length;e+=1){if(s[e].d<o){r=e;o=s[e].d}}return r};const is=(e,t,n,s)=>{let r=[0];for(let o=1;o<e.length;o+=1){switch(n(e[o][t],e[r[0]][t],s)){case 0:r.push(o);break;case 1:r=[o];break}}return r};const fs=(e,t=a)=>{if(!e||!e.length){return undefined}const n=is(e,0,rt,t);let s=0;for(let t=1;t<n.length;t+=1){if(e[n[t]][1]<e[n[s]][1]){s=t}}return n[s]};const ls=Object.freeze({__proto__:null,minimum2DPointIndex:fs,smallestComparisonSearch:as});const ds=(e,t,n)=>e.map(((e,s)=>({i:s,n:n(e,t)}))).sort(((e,t)=>e.n-t.n)).map((e=>e.i));const us=(e,t)=>ds(e,t,F);const ms=(e,t=a)=>{const n=[[0]];let s=0;for(let r=1;r<e.length;r+=1){if(st(e[r],e[r-1],t)){n[s].push(r)}else{s=n.length;n.push([r])}}return n};const gs=(e,t=a)=>{const n=fs(e,t);if(n===undefined){return[]}const s=e.map((t=>O(t,e[n]))).map((e=>v(e))).map((e=>C([0,1],e)));const r=s.map(((e,t)=>({a:e,i:t}))).sort(((e,t)=>e.a-t.a)).map((e=>e.i)).filter((e=>e!==n));return[[n]].concat(ms(r.map((e=>s[e])),t).map((e=>e.map((e=>r[e])))).map((t=>t.length===1?t:t.map((t=>({i:t,len:U(e[t],e[n])}))).sort(((e,t)=>e.len-t.len)).map((e=>e.i)))))};const ps=e=>{const t=[e=>e[0]>=0&&e[1]>=0,e=>e[0]<0&&e[1]>=0,e=>e[0]<0&&e[1]<0,e=>e[0]>=0&&e[1]<0];const n=[(t,n)=>e[n][0]-e[t][0],(t,n)=>e[n][0]-e[t][0],(t,n)=>e[t][0]-e[n][0],(t,n)=>e[t][0]-e[n][0]];const s=e.map((e=>t.map(((t,n)=>t(e)?n:undefined)).filter((e=>e!==undefined)).shift()));const r=[[],[],[],[]];s.forEach(((e,t)=>{r[e].push(t)}));return r.flatMap(((e,t)=>e.sort(n[t])))};const _s=(e,t=[1,0,0],n=[0,0,0])=>{const s=K(t);const r=[s[1],s[2],s[0]];const o=e.map((e=>os(e,t,n)));const c=o.map((e=>w(e,n)));const a=c.map((e=>[F(e,r[0]),F(e,r[1])]));const i=a.map(v);return ps(i)};const hs=Object.freeze({__proto__:null,clusterIndicesOfSortedNumbers:ms,radialSortPointIndices2:gs,radialSortPointIndices3:_s,radialSortUnitVectors2:ps,sortAgainstItem:ds,sortPointsAlongVector:us});const vs=({vertices_coords:e},t,n)=>t.map((t=>e[t])).map((t=>w(t,e[n]))).map((e=>Math.atan2(e[1],e[0]))).map((e=>e>-a?e:e+Math.PI*2)).map(((e,t)=>({a:e,i:t}))).sort(((e,t)=>e.a-t.a)).map((e=>e.i)).map((e=>t[e]));const bs=({vertices_coords:e},t,n)=>us(t.map((t=>e[t])),n).map((e=>t[e]));const ys=Object.freeze({__proto__:null,sortVerticesAlongVector:bs,sortVerticesCounterClockwise:vs});const Es=({vertices_coords:e,faces_vertices:t})=>t.map((t=>t.map((t=>e[t])))).map((e=>{let t;let n;let s=0;do{t=w(e[(s+1)%e.length],e[s]);n=w(e[(s+2)%e.length],e[s]);s+=1}while(s<e.length&&J(t,n));return b(L(Z(3,t),Z(3,n)))}));const xs=({vertices_coords:e,faces_vertices:t,faces_normal:n})=>{const s=(e,t)=>{e[0]+=t[0];e[1]+=t[1];e[2]+=t[2]};if(!n){n=Es({vertices_coords:e,faces_vertices:t})}const r=e.map((()=>[0,0,0]));t.forEach(((e,t)=>e.forEach((e=>s(r[e],n[t])))));return r.map((e=>b(e)))};const As=Object.freeze({__proto__:null,makeFacesNormal:Es,makeVerticesNormal:xs});const Ms=({edges_vertices:e})=>{const t=[];e.forEach(((e,n)=>e.forEach((e=>{if(t[e]===undefined){t[e]=[]}t[e].push(n)}))));return t};const ks=({edges_vertices:e,vertices_vertices:t})=>{const n=Ps({edges_vertices:e});return t.map(((e,t)=>e.map((e=>n[`${t} ${e}`]))))};const ws=({vertices_coords:e,vertices_edges:t,edges_vertices:n})=>{if(!t){t=Ms({edges_vertices:n})}const s=t.map(((e,t)=>e.map((e=>n[e].filter((e=>e!==t)))).reduce(((e,t)=>e.concat(t)),[])));return e===undefined?s:s.map(((t,n)=>vs({vertices_coords:e},t,n)))};const Os=({vertices_coords:e,vertices_faces:t,faces_vertices:n})=>{if(!t){t=Cs({vertices_coords:e,faces_vertices:n})}const s=t.map((e=>e.map((e=>n[e]))));const r=s.map(((e,t)=>e.map((e=>e.indexOf(t)))));const o=s.map(((e,t)=>e.map(((e,n)=>[(r[t][n]+e.length-1)%e.length,r[t][n],(r[t][n]+1)%e.length]))));const c=o.map(((e,t)=>e.map(((e,n)=>e.map((e=>s[t][n][e]))))));const a=c.map((e=>{const t=e.map((e=>[[0,1],[1,2]].map((t=>t.map((t=>e[t])).join(" ")))));const n={};const s={};t.forEach(((e,t)=>{n[e[0]]=t;s[e[1]]=t}));return{facesVerts:t,to:s,from:n}}));return a.map((e=>{const t=Object.keys(e.to);const n=t.map((e=>e.split(" ").reverse().join(" ")));const s=t.filter(((t,s)=>!(n[s]in e.from)));if(s.length>2){console.warn("vertices_vertices found an unsolvable vertex");return[]}const r=s.length?s:[t[0]];const o=[];const c={};for(let t=0;t<r.length;t+=1){const n=r[t];const s=[n];c[n]=true;let a=false;do{const t=s[s.length-1];const n=e.to[t];if(!(n in e.facesVerts)){break}let r;if(e.facesVerts[n][0]===t){r=e.facesVerts[n][1]}if(e.facesVerts[n][1]===t){r=e.facesVerts[n][0]}if(r===undefined){return"not found"}const o=r.split(" ").reverse().join(" ");s.push(r);a=o in c;if(!a){s.push(o)}c[r]=true;c[o]=true}while(!a);const i=s.filter(((e,t)=>t%2===0)).map((e=>e.split(" ")[1])).map((e=>parseInt(e,10)));o.push(...i)}return o}))};const js=e=>{if(!e.vertices_coords||!e.vertices_coords.length){return[]}const t=e.vertices_coords.filter((()=>true)).shift().length;switch(t){case 3:return Os(e);default:return ws(e)}};const Fs=({vertices_edges:e,edges_vertices:t})=>{if(!e){e=Ms({edges_vertices:t})}return e.map(((e,n)=>e.flatMap((e=>t[e].filter((e=>e!==n))))))};const Cs=({vertices_coords:e,vertices_edges:t,faces_vertices:n})=>{const s=e||t;if(!n){return(s||[]).map((()=>[]))}const r=s!==undefined?s.map((()=>[])):Array.from(Array(es.vertices({faces_vertices:n}))).map((()=>[]));n.forEach(((e,t)=>{const n=[];e.forEach((e=>{n[e]=t}));n.forEach(((e,t)=>r[t].push(e)))}));return r};const Ss=({vertices_coords:e,vertices_vertices:t,faces_vertices:n})=>{if(!n){return e.map((()=>[]))}if(!t){return Cs({vertices_coords:e,faces_vertices:n})}const s=Vs({faces_vertices:n});return t.map(((e,t)=>e.map(((e,n,s)=>[s[(n+1)%s.length],t,e].join(" "))))).map((e=>e.map((e=>s[e]))))};const Ps=({edges_vertices:e})=>{const t={};e.map((e=>e.join(" "))).forEach(((e,n)=>{t[e]=n}));e.map((e=>`${e[1]} ${e[0]}`)).forEach(((e,n)=>{t[e]=n}));return t};const Ns=({edges_vertices:e})=>{const t={};e.map((e=>e.join(" "))).forEach(((e,n)=>{t[e]=n}));return t};const Vs=({faces_vertices:e})=>{const t={};e.forEach(((e,n)=>e.map(((t,n)=>[0,1,2].map((t=>(n+t)%e.length)).map((t=>e[t])).join(" "))).forEach((e=>{t[e]=n}))));return t};const zs=({vertices_coords:e,vertices_vertices:t,edges_vertices:n,edges_vector:s})=>{if(!s){s=Gs({vertices_coords:e,edges_vertices:n})}const r=Ns({edges_vertices:n});return t.map(((e,n)=>t[n].map((e=>{const t=r[`${n} ${e}`];const o=r[`${e} ${n}`];if(t!==undefined){return s[t]}if(o!==undefined){return q(s[o])}}))))};const Ts=({vertices_coords:e,vertices_vertices:t,edges_vertices:n,edges_vector:s})=>zs({vertices_coords:e,vertices_vertices:t,edges_vertices:n,edges_vector:s}).map((e=>e.length===1?[l]:Jn(e)));const $s=({edges_vertices:e,vertices_edges:t})=>e.map(((e,n)=>{const s=t[e[0]].filter((e=>e!==n));const r=t[e[1]].filter((e=>e!==n));return s.concat(r)}));const Bs=({edges_vertices:e,faces_edges:t})=>{const n=e!==undefined?e.map((()=>[])):Array.from(Array(es.edges({faces_edges:t}))).map((()=>[]));t.forEach(((e,t)=>{const s=[];e.forEach((e=>{s[e]=t}));s.forEach(((e,t)=>n[t].push(e)))}));return n};const Ls=({vertices_coords:e,edges_vertices:t,edges_vector:n,faces_vertices:s,faces_edges:r,faces_center:o})=>{if(!t||!s&&!r){return Bs({faces_edges:r})}if(!s){s=Zs({edges_vertices:t,faces_edges:r})}if(!r){r=Ys({edges_vertices:t,faces_vertices:s})}if(!n){n=Gs({vertices_coords:e,edges_vertices:t})}const c=t.map((t=>e[t[0]]));if(!o){o=nr({vertices_coords:e,faces_vertices:s})}const a=t.map((()=>[]));r.forEach(((e,t)=>{const n=[];e.forEach((e=>{n[e]=t}));n.forEach(((e,t)=>a[t].push(e)))}));a.forEach(((e,t)=>{const s=e.map((e=>o[e])).map((e=>O(e,c[t]))).map((e=>B(e,n[t])));e.sort(((e,t)=>s[e]-s[t]))}));return a};const Is={M:-180,m:-180,V:180,v:180};const Us=({edges_foldAngle:e})=>e.map((e=>{if(e===0){return"F"}return e<0?"M":"V"}));const Rs=({edges_vertices:e,edges_foldAngle:t,edges_faces:n,faces_vertices:s,faces_edges:r})=>{if(!n){if(!r){r=Ys({edges_vertices:e,faces_vertices:s})}n=Bs({edges_vertices:e,faces_edges:r})}return t.map(((e,t)=>{if(n[t].length<2){return"B"}if(e===0){return"F"}return e<0?"M":"V"}))};const qs=({edges_assignment:e})=>e.map((e=>Is[e]||0));const Ds=({vertices_coords:e,edges_vertices:t,edges_faces:s,edges_assignment:r,faces_vertices:o,faces_edges:c,faces_normal:a,faces_center:i})=>{if(!s){if(!c){c=Ys({edges_vertices:t,faces_vertices:o})}s=Bs({edges_vertices:t,faces_edges:c})}if(!a){a=Es({vertices_coords:e,faces_vertices:o})}if(!i){i=nr({vertices_coords:e,faces_vertices:o})}return s.map(((e,t)=>{if(e.length>2){throw new Error(n.manifold)}if(e.length<2){return 0}const s=a[e[0]];const o=a[e[1]];const c=h(w(i[e[1]],i[e[0]]));let f=Math.sign(F(s,c));if(f===0){if(r&&r[t]){if(r[t]==="F"||r[t]==="F"){f=0}if(r[t]==="M"||r[t]==="m"){f=-1}if(r[t]==="V"||r[t]==="v"){f=1}}else{throw new Error(n.flatFoldAngles)}}return Math.acos(F(s,o))*(180/Math.PI)*f}))};const Ws=({vertices_coords:e,edges_vertices:t})=>t.map((t=>t.map((t=>e[t]))));const Gs=({vertices_coords:e,edges_vertices:t})=>Ws({vertices_coords:e,edges_vertices:t}).map((e=>w(e[1],e[0])));const Hs=({vertices_coords:e,edges_vertices:t})=>Gs({vertices_coords:e,edges_vertices:t}).map((e=>m(e)));const Js=({vertices_coords:e,edges_vertices:t,edges_coords:n},s=0)=>{if(!n){n=Ws({vertices_coords:e,edges_vertices:t})}return n.map((e=>tt(e,s)))};const Qs=({vertices_coords:e,vertices_vertices:t,vertices_edges:n,vertices_sectors:s,edges_vertices:r,edges_vector:o})=>{if(!t){t=js({vertices_coords:e,edges_vertices:r,vertices_edges:n})}if(!s){s=Ts({vertices_coords:e,vertices_vertices:t,edges_vertices:r,edges_vector:o})}const c=Ps({edges_vertices:r});const a=ss(ns({vertices_vertices:t,vertices_sectors:s})).map((e=>({...e,edges:e.edges.map((e=>c[e]))})));return{faces_vertices:a.map((e=>e.vertices)),faces_edges:a.map((e=>e.edges)),faces_sectors:a.map((e=>e.angles))}};const Zs=({edges_vertices:e,faces_edges:t})=>t.map((t=>t.map((t=>e[t])).map(((e,t,n)=>{const s=n[(t+1)%n.length];return e[0]===s[0]||e[0]===s[1]?e[1]:e[0]}))));const Ys=({edges_vertices:e,faces_vertices:t})=>{const n=Ps({edges_vertices:e});return t.map((e=>e.map(((e,t,n)=>[e,n[(t+1)%n.length]].join(" "))))).map((e=>e.map((e=>n[e]))))};const Xs=({faces_vertices:e})=>{const t=e.map((()=>[]));const n={};e.forEach(((e,t)=>e.forEach(((s,r,o)=>{let c=o[(r+1)%e.length];if(c<s){[s,c]=[c,s]}const a=`${s} ${c}`;if(n[a]===undefined){n[a]={}}n[a][t]=true}))));Object.values(n).map((e=>Object.keys(e))).filter((e=>e.length>1)).forEach((e=>{t[e[0]].push(parseInt(e[1],10));t[e[1]].push(parseInt(e[0],10))}));return t};const Ks=({vertices_coords:e,faces_vertices:t},n)=>t.map((t=>t.map((t=>e[t])))).map((e=>Ye(e,n)));const er=({vertices_coords:e,faces_vertices:t})=>t.map((t=>t.map((t=>e[t]))));const tr=({vertices_coords:e,faces_vertices:t})=>t.map((t=>t.map((t=>e[t])))).map((e=>et(e)));const nr=({vertices_coords:e,faces_vertices:t})=>{const n=e.filter((()=>true)).shift();if(!n){return t.map((()=>[]))}const s=n.length;return t.map((t=>t.map((t=>e[t])).reduce(((e,t)=>A(e,t)),Array(s).fill(0)).map((e=>e/t.length))))};const sr=Object.freeze({__proto__:null,makeEdgesAssignment:Rs,makeEdgesAssignmentSimple:Us,makeEdgesBoundingBox:Js,makeEdgesCoords:Ws,makeEdgesEdges:$s,makeEdgesFaces:Ls,makeEdgesFacesUnsorted:Bs,makeEdgesFoldAngle:qs,makeEdgesFoldAngleFromFaces:Ds,makeEdgesLength:Hs,makeEdgesVector:Gs,makeFacesCenter2D:tr,makeFacesConvexCenter:nr,makeFacesEdgesFromVertices:Ys,makeFacesFaces:Xs,makeFacesPolygon:Ks,makeFacesPolygonQuick:er,makeFacesVerticesFromEdges:Zs,makePlanarFaces:Qs,makeVerticesEdges:ks,makeVerticesEdgesUnsorted:Ms,makeVerticesFaces:Ss,makeVerticesFacesUnsorted:Cs,makeVerticesSectors:Ts,makeVerticesToEdge:Ns,makeVerticesToEdgeBidirectional:Ps,makeVerticesToFace:Vs,makeVerticesVertices:js,makeVerticesVertices2D:ws,makeVerticesVerticesFromFaces:Os,makeVerticesVerticesUnsorted:Fs,makeVerticesVerticesVector:zs});const rr=({edges_vertices:e})=>{if(!e){return[]}const t=[];const n={};for(let s=0;s<e.length;s+=1){const r=`${e[s][0]} ${e[s][1]}`;const o=`${e[s][1]} ${e[s][0]}`;if(n[r]!==undefined){t[s]=n[r]}else{n[r]=s;n[o]=s}}return t};const or=(e,t)=>{if(!t){t=rr(e)}const n=Object.keys(t).map((e=>parseInt(e,10)));const s=vn(e,"edges",t);if(n.length){if(e.vertices_edges||e.vertices_vertices||e.vertices_faces){e.vertices_edges=Ms(e);e.vertices_vertices=js(e);e.vertices_edges=ks(e);e.vertices_faces=Ss(e)}}return{map:s,remove:n}};const cr=Object.freeze({__proto__:null,duplicateEdges:rr,removeDuplicateEdges:or});const ar=({edges_vertices:e})=>{if(!e){return[]}const t=[];for(let n=0;n<e.length;n+=1){if(e[n][0]===e[n][1]){t.push(n)}}return t};const ir=(e,t,n)=>{const s={};n.forEach((e=>{s[e]=true}));Tt(e,t).forEach((t=>e[t].forEach(((n,r)=>{for(let o=n.length-1;o>=0;o-=1){if(s[n[o]]===true){e[t][r].splice(o,1)}}}))))};const fr=(e,t)=>{if(!t){t=ar(e)}if(t.length){ir(e,"edges",t)}return{map:xn(e,"edges",t),remove:t}};const lr=Object.freeze({__proto__:null,circularEdges:ar,removeCircularEdges:fr});const dr=(...e)=>{if(e.length===0){return[]}const t=e[0].map(((e,t)=>t));e.forEach((e=>t.forEach(((n,s)=>{t[s]=e[n]}))));return t};const ur=(...e)=>{if(e.length===0){return[]}const t=e[0].map(((e,t)=>[t]));e.forEach((e=>{t.forEach(((n,s)=>n.forEach(((n,r)=>{t[s][r]=e[n]}))));t.forEach(((e,n)=>{t[n]=e.reduce(((e,t)=>e.concat(t)),[]).filter((e=>e!==undefined))}))}));return t};const mr=(...e)=>{if(e.length===0){return[]}let t=e[0].map(((e,t)=>t));e.forEach((e=>{const n=e.map((e=>t[e]));t=n}));return t};const gr=(...e)=>{if(e.length===0){return[]}let t=e[0].reduce(((e,t)=>e.concat(t)),[]).map(((e,t)=>[t]));e.forEach((e=>{const n=[];e.forEach(((e,s)=>{if(typeof e==="number"){n[s]=t[e]}else{n[s]=e.map((e=>t[e])).reduce(((e,t)=>e.concat(t)),[])}}));t=n}));return t};const pr=e=>{const t=[];const n=(e,n)=>{if(t[e]!==undefined){if(typeof t[e]==="number"){t[e]=[t[e],n]}else{t[e].push(n)}}else{t[e]=n}};e.forEach(((e,t)=>{if(e==null){return}if(typeof e==="number"){n(e,t)}if(e.constructor===Array){e.forEach((e=>n(e,t)))}}));return t};const _r=e=>{const t=[];const n=(e,n)=>{if(t[e]===undefined){t[e]=[]}t[e].push(n)};e.forEach(((e,t)=>{if(e==null){return}if(typeof e==="number"){n(e,t)}if(e.constructor===Array){e.forEach((e=>n(e,t)))}}));return t};const hr=e=>{const t=[];e.forEach(((e,n)=>{t[e]=n}));return t};const vr=Object.freeze({__proto__:null,invertMap:pr,invertMapArray:_r,invertSimpleMap:hr,mergeBackmaps:gr,mergeNextmaps:ur,mergeSimpleBackmaps:mr,mergeSimpleNextmaps:dr});const br=(e,t)=>{const n=yn(e,t);const s=fr(e);const r=or(e);const o=wn(e);const c=hr(n.map);const a=o.remove.map((e=>c[e]));const i=hr(s.map);const f=r.remove.map((e=>i[e]));return{vertices:{map:dr(n.map,o.map),remove:n.remove.concat(a)},edges:{map:dr(s.map,r.map),remove:s.remove.concat(f)}}};const yr=function(e){let t;let n;if(typeof e!=="object"){return e}if(!e){return e}if(Object.prototype.toString.apply(e)==="[object Array]"){t=[];for(n=0;n<e.length;n+=1){t[n]=yr(e[n])}return t}t={};for(n in e){if(e.hasOwnProperty(n)){t[n]=yr(e[n])}}return t};const Er=e=>{if(!e.faces_vertices){return{}}const t=e.faces_edges?e.faces_edges:Ys(e);const n=e.faces_vertices.flatMap((e=>e));const s=t.flatMap((e=>e));let r=0;let o=0;let c=0;e.faces_vertices=e.faces_vertices.map((e=>e.map((()=>r++))));e.faces_edges=e.faces_edges.map((e=>e.map((()=>o++))));e.edges_vertices=e.faces_edges.flatMap((e=>e.map(((e,t,n)=>{const s=t===n.length-1?[c,c+1-n.length]:[c,c+1];c+=1;return s}))));if(e.vertices_coords){e.vertices_coords=yr(n.map((t=>e.vertices_coords[t])))}if(e.edges_assignment){e.edges_assignment=yr(s.map((t=>e.edges_assignment[t])))}if(e.edges_foldAngle){e.edges_foldAngle=yr(s.map((t=>e.edges_foldAngle[t])))}if(e.vertices_vertices){delete e.vertices_vertices}if(e.vertices_edges){delete e.vertices_edges}if(e.vertices_faces){delete e.vertices_faces}if(e.edges_edges){delete e.edges_edges}if(e.edges_faces){delete e.edges_faces}if(e.faces_faces){delete e.faces_faces}return{vertices:{map:n},edges:{map:s}}};const xr=e=>{const t=e.faces_vertices.flatMap((t=>t.map((t=>e.vertices_coords[t]))));let n=0;const s=e.faces_vertices.map((e=>e.map((()=>n++))));return{vertices_coords:JSON.parse(JSON.stringify(t)),faces_vertices:s}};const Ar=e=>{const t=e.edges_vertices.flatMap((t=>t.map((t=>e.vertices_coords[t]))));let n=0;const s=e.edges_vertices.map((e=>e.map((()=>n++))));return{vertices_coords:JSON.parse(JSON.stringify(t)),edges_vertices:s}};const Mr=Object.freeze({__proto__:null,explode:Er,explodeEdges:Ar,explodeFaces:xr});const kr=(e,t)=>{const n=as(e,t,U);return n===undefined?undefined:e[n]};const wr=(e,t)=>{const n=as(e,t,I);return n===undefined?undefined:e[n]};const Or=({vector:e,origin:t},n,s=gt,r=a)=>{t=Z(e.length,t);n=Z(e.length,n);const o=_(e);const c=w(n,t);const i=F(e,c);const f=i/o;const l=s(f,r);return A(t,y(e,l))};const jr=(e,t)=>e.map(((e,t,n)=>w(n[(t+1)%n.length],e))).map(((t,n)=>({vector:t,origin:e[n]}))).map((e=>Or(e,t,_t))).map(((e,n)=>({point:e,edge:n,distance:I(e,t)}))).sort(((e,t)=>e.distance-t.distance)).shift();const Fr=({radius:e,origin:t},n)=>A(t,y(h(w(n,t)),e));const Cr=Object.freeze({__proto__:null,nearestPoint:wr,nearestPoint2:kr,nearestPointOnCircle:Fr,nearestPointOnLine:Or,nearestPointOnPolygon:jr});const Sr=({vector:e,origin:t},n,s=it,r=a)=>{const o=O(n,t);const c=_(e);const i=Math.sqrt(c);if(i<r){return false}const f=B(o,e.map((e=>e/i)));const l=C(o,e)/c;return Math.abs(f)<r&&s(l,r/i)};const Pr=(e,t,n=it,s=it,r=a)=>{const o=B(e.vector,t.vector);const c=-o;const i=O(t.origin,e.origin);const f=[-i[0],-i[1]];if(Math.abs(o)<r){if(Math.abs(B(i,e.vector))>r){return false}const o=f;const c=M(o,e.vector);const a=N(o,c);const l=i;const d=M(l,t.vector);const u=N(l,d);const m=C(e.vector,e.vector);const g=C(t.vector,t.vector);const p=C(o,t.vector)/g;const _=C(c,t.vector)/g;const h=C(a,t.vector)/g;const v=C(l,e.vector)/m;const b=C(d,e.vector)/m;const y=C(u,e.vector)/m;return n(v,r)||n(b,r)||s(p,r)||s(_,r)||n(y,r)||s(h,r)}const l=B(i,t.vector)/o;const d=B(f,e.vector)/c;return n(l,r/g(e.vector))&&s(d,r/g(t.vector))};const Nr=({radius:e,origin:t},n,s=at,r=a)=>s(e-U(t,n),r);const Vr=(e,t,n=at,s=a)=>e.map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>B(v(O(e[1],e[0])),O(t,e[0])))).map((e=>n(e,s))).map(((e,t,n)=>e===n[0])).reduce(((e,t)=>e&&t),true);const zr=(e,t,n=a)=>{for(let s=0;s<2;s+=1){const r=s===0?e:t;const o=s===0?t:e;for(let e=0;e<r.length;e+=1){const t=r[e];const s=D(O(r[(e+1)%r.length],r[e]));const c=o.map((e=>O(e,t))).map((e=>C(s,e)));const a=r[(e+2)%r.length];const i=C(s,O(a,t));const f=i>0;const l=c.map((e=>f?e<n:e>-n)).reduce(((e,t)=>e&&t),true);if(l){return false}}}return true};const Tr=(e,t,n=a)=>{const s=Math.min(e.min.length,t.min.length);for(let r=0;r<s;r+=1){if(e.min[r]>t.max[r]+n||e.max[r]<t.min[r]-n){return false}}return true};const $r=Object.freeze({__proto__:null,overlapBoundingBoxes:Tr,overlapCirclePoint:Nr,overlapConvexPolygonPoint:Vr,overlapConvexPolygons:zr,overlapLineLine:Pr,overlapLinePoint:Sr});const Br=({vertices_coords:e},t)=>{if(!e){return undefined}const n=Rt({vertices_coords:e});if(n===undefined){return undefined}const s=Z(n,t);const r=e.map(((e,t)=>({d:I(s,e),i:t}))).sort(((e,t)=>e.d-t.d)).shift();return r?r.i:undefined};const Lr=({vertices_coords:e,edges_vertices:t},n)=>{if(!e||!t){return undefined}const s=t.map((t=>t.map((t=>e[t])))).map((e=>Or({vector:w(e[1],e[0]),origin:e[0]},n,_t)));return as(s,n,I)};const Ir=({vertices_coords:e,faces_vertices:t},n)=>!e||!t?[]:t.map(((t,n)=>({face:t.map((t=>e[t])),i:n}))).filter((e=>Vr(e.face,n))).map((e=>e.i));const Ur=({vertices_coords:e,faces_vertices:t},n)=>{const s=Ir({vertices_coords:e,faces_vertices:t},n);return s.length?s.shift():undefined};const Rr=(e,t)=>{const n=Ur(e,t);if(n!==undefined){return n}if(e.edges_faces){const n=Lr(e,t);if(n===undefined){return undefined}const s=e.edges_faces[n];if(s.length===1){return s[0]}if(s.length>1){const n=nr({vertices_coords:e.vertices_coords,faces_vertices:s.map((t=>e.faces_vertices[t]))});const r=n.map((e=>I(e,t)));let o=0;for(let e=0;e<r.length;e+=1){if(r[e]<r[o]){o=e}}return s[o]}}return undefined};const qr=(e,...t)=>{const n={vertices:Br,edges:Lr,faces:Rr};const s=$e(...t);const r=Object.create(null);["vertices","edges","faces"].forEach((t=>{Object.defineProperty(r,At[t],{enumerable:true,get:()=>n[t](e,s)});zt(e,t).forEach((n=>Object.defineProperty(r,n,{enumerable:true,get:()=>e[n][r[At[t]]]})))}));return r};const Dr=Object.freeze({__proto__:null,faceContainingPoint:Ur,facesContainingPoint:Ir,nearest:qr,nearestEdge:Lr,nearestFace:Rr,nearestVertex:Br});const Wr=({vertices_coords:e,faces_vertices:t},n=0)=>t.map((t=>[t.reduce(((t,s)=>e[t][n]<e[s][n]?t:s)),t.reduce(((t,s)=>e[t][n]>e[s][n]?t:s))]));const Gr=({vertices_coords:e},t=0,n=a)=>gn(e.map((e=>e[t])),n).map((n=>({vertices:n,t:n.reduce(((n,s)=>n+e[s][t]),0)/n.length})));const Hr=(e,{edges_vertices:t,vertices_edges:n},s=a)=>{if(!n){n=Ms({edges_vertices:t})}const r=t.map((t=>t.map((t=>e[t]))));const o=r.map((e=>st(...e,s)));const c=r.map((([e,t])=>Math.sign(e-t)));const i=t.map((([e,t],n)=>o[n]?{[e]:0,[t]:0}:{[e]:c[n],[t]:-c[n]}));return gn(e,s).map((e=>e.filter((e=>n[e])))).filter((e=>e.length)).map((t=>({vertices:t,t:t.reduce(((t,n)=>t+e[n]),0)/t.length,start:rn(t.flatMap((e=>n[e].filter((t=>i[t][e]<=0))))),end:rn(t.flatMap((e=>n[e].filter((t=>i[t][e]>=0)))))})))};const Jr=({vertices_coords:e,edges_vertices:t,vertices_edges:n},s=0,r=a)=>Hr(e.map((e=>e[s])),{edges_vertices:t,vertices_edges:n},r);const Qr=({vertices_coords:e,faces_vertices:t},n=0,s=a)=>Hr(e.map((e=>e[n])),{edges_vertices:Wr({vertices_coords:e,faces_vertices:t},n)},s);const Zr=({vertices_coords:e,edges_vertices:t,faces_vertices:n},s=0,r=a)=>{const o=e.map((e=>e[s]));const c=Wr({vertices_coords:e,faces_vertices:n},s);const i=Ms({edges_vertices:t});const f=Ms({edges_vertices:c});const l=t.map((e=>e.map((e=>o[e]))));const d=c.map((e=>e.map((e=>o[e]))));const u=l.map((e=>st(...e,r)));const m=d.map((e=>st(...e,r)));const g=l.map((([e,t])=>Math.sign(e-t)));const p=d.map((([e,t])=>Math.sign(e-t)));const _=t.map((([e,t],n)=>u[n]?{[e]:0,[t]:0}:{[e]:g[n],[t]:-g[n]}));const h=n.map((([e,t],n)=>m[n]?{[e]:0,[t]:0}:{[e]:p[n],[t]:-p[n]}));return gn(o,r).map((e=>({vertices:e,t:e.reduce(((e,t)=>e+o[t]),0)/e.length,edges:{start:rn(e.filter((e=>i[e]!==undefined)).flatMap((e=>i[e].filter((t=>_[t][e]<=0))))),end:rn(e.filter((e=>i[e]!==undefined)).flatMap((e=>i[e].filter((t=>_[t][e]>=0)))))},faces:{start:rn(e.filter((e=>f[e]!==undefined)).flatMap((e=>f[e].filter((t=>h[t][e]<=0))))),end:rn(e.filter((e=>f[e]!==undefined)).flatMap((e=>f[e].filter((t=>h[t][e]>=0)))))}})))};const Yr=Object.freeze({__proto__:null,sweep:Zr,sweepEdges:Jr,sweepFaces:Qr,sweepValues:Hr,sweepVertices:Gr});const Xr=(e,t,n,s=false,r=a)=>{const o=[e,n].map((e=>ot(t,e,r))).reduce(((e,t)=>e||t),false);if(o){return s}const c=[[e,t],[t,n]].map((e=>w(e[1],e[0]))).map((e=>h(e)));return st(1,F(...c),a)};const Kr=(e,t,n)=>{const s=$(e.vector,t.vector,n);const r=$(e.origin,t.origin,n);return{vector:s,origin:r}};const eo=(e,t,n,s=a)=>{const r=F(e.vector,t.vector);const o=B(e.vector,t.vector);const c=B(O(t.origin,e.origin),t.vector);const i=c/o;const f=[e.vector,t.vector].map((e=>h(e)));const l=o>-s?[[e.vector,t.vector],[q(t.vector),e.vector]]:[[t.vector,e.vector],[q(e.vector),t.vector]];const d=l.map((e=>Dn(e[0],e[1],n)));const u=Math.abs(B(...f))<s;const m=u?undefined:M(e.origin,E(e.vector,i));const g=Array.from(Array(n-1));const p=u?g.map(((s,r)=>$(e.origin,t.origin,(r+1)/n))):g.map((()=>m));const _=d.map((e=>e.map(((e,t)=>({vector:e,origin:[...p[t]]})))));if(u){_[r>-s?1:0]=[]}return _};const to=(e,t,n=a)=>{const s=eo(e,t,2,n).map((e=>e[0]));s.forEach(((e,t)=>{if(e===undefined){delete s[t]}}));return s};const no=Object.freeze({__proto__:null,bisectLines2:to,collinearBetween:Xr,lerpLines:Kr,pleat:eo});const so=({vertices_edges:e},t,n)=>{const s=new Set(e[t]);return e[n].filter((e=>s.has(e))).shift()};const ro=({edges_vertices:e},t,n)=>n.map((n=>e[n][0]===t?e[n][1]:e[n][0]));const oo=Object.freeze({__proto__:null,getEdgeBetweenVertices:so,getOtherVerticesInEdges:ro});const co=({vertices_coords:e,vertices_edges:t,edges_vertices:n},s,r=a)=>{if(!e||!n){return false}if(!t){t=Ms({edges_vertices:n})}const o=t[s];if(o===undefined||o.length!==2){return false}const c=ro({edges_vertices:n},s,o);const i=[c[0],s,c[1]].map((t=>e[t]));return Xr(...i,false,r)};const ao=Object.freeze({__proto__:null,isVertexCollinear:co});const io=({vertices_coords:e,edges_vertices:t},n=a)=>{if(!e||!t||!t.length){return{edges_line:[],lines:[]}}const s=Ws({vertices_coords:e,edges_vertices:t});const r=s.map((e=>w(e[1],e[0]))).map(h);const o=r.map(((e,t)=>({vector:e,origin:s[t][0]})));const c=o.map((e=>Or(e,[0,0,0],gt,n)));const i=c.map((e=>m(e)));const f=gn(i,n);const l=f.map((e=>e.map((e=>r[e])))).map((e=>pn(e,n))).map(((e,t)=>e.map((e=>e.map((e=>f[t][e]))))));const d=l.map((s=>s.map((s=>{if(Math.abs(i[s[0]])<n){return[s]}const r=o[s[0]].vector;const c=s.map((n=>e[t[n][0]])).map((e=>os(e,r)));const a=_s(c,r);const f=(e,t)=>ot(c[e],c[t],n);const l=e=>e.map((e=>a[e])).map((e=>s[e]));const d=un(a,f);if(d.length===1){return d.map(l)}const u=d[0][0];const m=d[d.length-1];const g=m[m.length-1];const p=[u,g].map((e=>a[e]));if(f(...p)){const e=d.pop();d[0]=e.concat(d[0])}return d.map(l)}))));const u=d.flatMap((e=>e.flatMap((e=>e.map((e=>e[0])).map((e=>({vector:r[e],origin:c[e]})))))));const g=[];let p=0;d.forEach((e=>e.forEach((e=>e.forEach((e=>{e.forEach((e=>{g[e]=p}));p+=1}))))));return{lines:u,edges_line:g}};const fo=Object.freeze({__proto__:null,getEdgesLine:io});const lo=(e,t,n=a)=>{const s=B(e.vector,t.vector);if(Math.abs(s)<n){return undefined}const r=-s;const o=O(t.origin,e.origin);const c=[-o[0],-o[1]];return[B(o,t.vector)/s,B(c,e.vector)/r]};const uo=(e,t,n=a)=>{const s=(e,t)=>e>t[0]-n&&e<t[1]+n;const r=e.map((()=>[]));for(let o=0;o<e.length-1;o+=1){for(let c=o+1;c<e.length;c+=1){const a=lo(e[o],e[c],n);if(a===undefined){continue}const[i,f]=a;if(!s(i,t[o])||!s(f,t[c])){continue}r[o].push(i);r[c].push(f)}}return r};const mo=(e,t,n=a)=>{const s=[];let r=0;let o=0;while(r<e.length&&o<t.length){if(st(e[r],t[o],n)){r+=1;continue}if(e[r]>t[o]){o+=1;continue}if(t[o]>e[r]){s.push(e[r]);r+=1;continue}}return s};const go=({edges_vertices:e,vertices_edges:t},n)=>{const s=t[n].sort(((e,t)=>e-t));const r=s.flatMap((t=>e[t])).filter((e=>e!==n)).slice(0,2);e[s[0]]=r;e[s[1]]=undefined;r.forEach((e=>{const n=t[e].indexOf(s[1]);if(n===-1){return}t[e][n]=s[0]}));return s[1]};const po=({vertices_coords:e,edges_vertices:t,edges_assignment:n,edges_foldAngle:s},r=a)=>{const{lines:o,edges_line:c}=io({vertices_coords:e,edges_vertices:t});const i=pr(c).map((e=>e.constructor===Array?e:[e]));const f=t.map((t=>t.map((t=>e[t])))).map(((e,t)=>e.map((e=>C(O(e,o[c[t]].origin),o[c[t]].vector)))));const l=i.map((e=>e.flatMap((e=>f[e])))).map((e=>an(e,r)));const d=l.map((e=>[e[0],e[e.length-1]]));const u=uo(o,d,r).map((e=>an(e,r))).map(((e,t)=>mo(e,l[t],r)));const m=i.map((e=>e.flatMap((e=>f[e]))));const g=i.map((e=>{const t=[];e.forEach(((e,n)=>{t[e]=[n*2,n*2+1]}));return t}));const p=i.map(((e,t)=>Hr(m[t],{edges_vertices:g[t]},r)));const _=p.map((e=>e.map((e=>e.t))));const h=p.map((e=>{const t={};const n=e.map((e=>{e.start.forEach((e=>{t[e]=true}));e.end.forEach((e=>{delete t[e]}));return Object.keys(t).map((e=>parseInt(e,10)))}));n.pop();return n}));u.forEach(((e,t)=>{const n=_[t];const s=h[t];let o=0;let c=0;while(o<e.length&&c<n.length-1){if(st(n[c],e[o],r)){throw new Error("bad algorithm")}if(e[o]>n[c+1]){c+=1;continue}n.splice(c+1,0,e[o]);s.splice(c+1,0,s[c]);o+=1}}));const v=_.flatMap(((e,t)=>e.map((e=>M(o[t].origin,E(o[t].vector,e))))));let b=0;const y=h.map((e=>{const t=e.map((()=>[b,++b]));b+=1;return t})).flatMap(((e,t)=>e.filter(((e,n)=>h[t][n].length))));const x={vertices_coords:v,edges_vertices:y};if(n||s){const e=h.flatMap((e=>e.filter((e=>e.length))));if(n){x.edges_assignment=e.map((e=>n[e[0]]))}if(s){x.edges_foldAngle=e.map((e=>s[e[0]]))}}wn(x,An(x));yn(x,r*2);fr(x);x.vertices_edges=Ms(x);const A=x.vertices_edges.map(((e,t)=>e.length===2?t:undefined)).filter((e=>e!==undefined)).filter((e=>co(x,e,r))).reverse();const k=A.map((e=>go(x,e)));xn(x,"edges",k);xn(x,"vertices",A);const w=rr(x);if(w.length){or(x,w)}if(ar(x).length){console.error("planarize: found circular edges. place 3.")}delete x.vertices_edges;return x};const _o=e=>{const t=e.edges_vertices.length;if(!e.edges_assignment){e.edges_assignment=[]}if(!e.edges_foldAngle){e.edges_foldAngle=[]}if(e.edges_assignment.length>e.edges_foldAngle.length){for(let t=e.edges_foldAngle.length;t<e.edges_assignment.length;t+=1){e.edges_foldAngle[t]=Ct(e.edges_assignment[t])}}if(e.edges_foldAngle.length>e.edges_assignment.length){for(let t=e.edges_assignment.length;t<e.edges_foldAngle.length;t+=1){e.edges_assignment[t]=St(e.edges_foldAngle[t])}}for(let n=e.edges_assignment.length;n<t;n+=1){e.edges_assignment[n]="U";e.edges_foldAngle[n]=0}};const ho=(e,t)=>{if(t===undefined&&!e.faces_vertices&&!e.faces_edges){t=true}if(t&&e.vertices_coords){const t=Qs(e);e.faces_vertices=t.faces_vertices;e.faces_edges=t.faces_edges;return}if(e.faces_vertices&&e.faces_edges){return}if(e.faces_vertices&&!e.faces_edges){e.faces_edges=Ys(e)}else if(e.faces_edges&&!e.faces_vertices){e.faces_vertices=Zs(e)}else{e.faces_vertices=[];e.faces_edges=[]}};const vo=(e,t)=>{if(typeof e!=="object"){return e}if(!e.edges_vertices){return e}e.vertices_edges=Ms(e);e.vertices_vertices=js(e);e.vertices_edges=ks(e);_o(e);ho(e,t);e.vertices_faces=Ss(e);e.edges_faces=Bs(e);e.faces_faces=Xs(e);return e};const bo=({vertices_vertices:e},t,n)=>{if(!e){return}e[t]=[...n];n.forEach(((n,s,r)=>{const o=r[(s+1)%r.length];const c=e[n].indexOf(o);e[n][c]=t}))};const yo=({vertices_coords:e,vertices_vertices:t,vertices_sectors:n},s)=>{if(!n){return}n[s]=t[s].length===1?[l]:Jn(t[s].map((t=>O(e[t],e[s]))))};const Eo=({vertices_edges:e},t,n,s,r)=>{if(!e){return}e[n]=[...r];s.map((n=>e[n].indexOf(t))).forEach(((t,n)=>{e[s[n]][t]=r[n]}))};const xo=({vertices_faces:e},t,n)=>{if(!e){return}e[t]=[...n]};const Ao=({edges_faces:e},t,n)=>{if(!e){return}t.forEach((t=>{e[t]=[...n]}))};const Mo=({faces_vertices:e},t,n,s)=>{if(!e){return}s.map((t=>e[t])).forEach((e=>e.map(((e,t,s)=>{const r=(t+1)%s.length;return e===n[0]&&s[r]===n[1]||e===n[1]&&s[r]===n[0]?r:undefined})).filter((e=>e!==undefined)).sort(((e,t)=>t-e)).forEach((n=>e.splice(n,0,t)))))};const ko=({edges_vertices:e,faces_vertices:t,faces_edges:n},s)=>{const r=Ps({edges_vertices:e});s.map((e=>t[e].map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>r[e.join(" ")])))).forEach(((e,t)=>{n[s[t]]=e}))};const wo=({vertices_faces:e,edges_vertices:t,edges_faces:n,faces_edges:s,faces_vertices:r},o)=>{if(n&&n[o]){return n[o]}const c=t[o];if(e!==undefined){const t=[];for(let n=0;n<e[c[0]].length;n+=1){for(let s=0;s<e[c[1]].length;s+=1){if(e[c[0]][n]===e[c[1]][s]){if(e[c[0]][n]===undefined){continue}t.push(e[c[0]][n])}}}return t}if(s){const e=[];for(let t=0;t<s.length;t+=1){for(let n=0;n<s[t].length;n+=1){if(s[t][n]===o){e.push(t)}}}return e}if(r){console.warn("todo: findAdjacentFacesToEdge")}};const Oo=(e,t,n)=>{const s=e.edges_vertices[t];const r=[{edges_vertices:[s[0],n]},{edges_vertices:[n,s[1]]}];r.forEach((n=>["edges_assignment","edges_foldAngle"].filter((n=>e[n]&&e[n][t]!==undefined)).forEach((s=>{n[s]=e[s][t]}))));return r};const jo=(e,t,n,s=a)=>{if(e.edges_vertices.length<t){return{}}const r=e.edges_vertices[t];if(!n){n=P(...r.map((t=>e.vertices_coords[t])))}const o=r.map((t=>e.vertices_coords[t])).map((e=>I(e,n)<s));if(o[0]){return{vertex:r[0],edges:{}}}if(o[1]){return{vertex:r[1],edges:{}}}const c=e.vertices_coords.length;e.vertices_coords[c]=n;const i=[0,1].map((t=>t+e.edges_vertices.length));Oo(e,t,c).forEach(((t,n)=>Object.keys(t).forEach((s=>{e[s][i[n]]=t[s]}))));bo(e,c,r);yo(e,c);Eo(e,t,c,r,i);const f=wo(e,t);if(f){xo(e,c,f);Ao(e,i,f);Mo(e,c,r,f);ko(e,f)}const l=xn(e,"edges",[t]);i.forEach(((e,t)=>{i[t]=l[i[t]]}));l.splice(-2);l[t]=i;return{vertex:c,edges:{map:l,new:i,remove:t}}};const Fo=({vertices_coords:e},t,n)=>{const s=t.map((t=>e[t])).reverse();return{edges_vertices:[...t],edges_foldAngle:0,edges_assignment:"U",edges_length:I(...s),edges_vector:w(...s),edges_faces:[n,n]}};const Co=(e,t,n)=>{const s=e.edges_vertices.length;const r=Fo(e,n,t);Object.keys(r).filter((t=>e[t]!==undefined)).forEach((t=>{e[t][s]=r[t]}));return s};const So=({edges_vertices:e,faces_vertices:t,faces_edges:n},s,r)=>{const o=r.map((e=>t[s].indexOf(e)));const c=ln(t[s],o).map((e=>({faces_vertices:e})));if(n){const t=Ps({edges_vertices:e});c.map((e=>e.faces_vertices.map(((e,t,n)=>`${e} ${n[(t+1)%n.length]}`)).map((e=>t[e])))).forEach(((e,t)=>{c[t].faces_edges=e}))}return c};const Po=(e,t,n)=>{const s=[0,1].map((t=>e.faces_vertices.length+t));So(e,t,n).forEach(((t,n)=>Object.keys(t).forEach((r=>{e[r][s[n]]=t[r]}))));return s};const No=(e,{vertices:t,edges:n})=>{let s;const r=n.map((t=>{const n=jo(e,s?s[t.edge]:t.edge,t.coords);s=s?ur(s,n.edges.map):n.edges.map;return n}));t.push(...r.map((e=>e.vertex)));let o;r.forEach((e=>{e.edges.remove=o?o[e.edges.remove]:e.edges.remove;const t=hr(e.edges.map);o=o?gr(o,t):t}));return{vertices:t,edges:{map:s,remove:r.map((e=>e.edges.remove))}}};const Vo=({vertices_coords:e,vertices_vertices:t,edges_vertices:n},s)=>{const r=n[s][0];const o=n[s][1];t[r]=vs({vertices_coords:e},t[r].concat(o),r);t[o]=vs({vertices_coords:e},t[o].concat(r),o)};const zo=({edges_vertices:e,vertices_edges:t,vertices_vertices:n},s)=>{if(!t||!n){return}const r=e[s];r.map((e=>n[e])).map(((e,t)=>e.indexOf(r[(t+1)%r.length]))).forEach(((e,n)=>t[r[n]].splice(e,0,s)))};const To=(e,t,s)=>{const r={};s.forEach((t=>e.faces_vertices[t].forEach((e=>{if(!r[e]){r[e]=[]}r[e].push(t)}))));e.faces_vertices[t].forEach((s=>{const o=e.vertices_faces[s].indexOf(t);const c=r[s];if(o===-1||!c){throw new Error(n.convexFace)}e.vertices_faces[s].splice(o,1,...c)}))};const $o=(e,t,s,r)=>{const o={};r.forEach((t=>e.faces_edges[t].forEach((e=>{if(!o[e]){o[e]=[]}o[e].push(t)}))));const c=[...e.faces_edges[t],s];c.forEach((s=>{const r=o[s];const c=[];for(let n=0;n<e.edges_faces[s].length;n+=1){if(e.edges_faces[s][n]===t){c.push(n)}}if(c.length===0||!r){throw new Error(n.convexFace)}c.reverse().forEach((t=>e.edges_faces[s].splice(t,1)));const a=c[c.length-1];e.edges_faces[s].splice(a,0,...r)}))};const Bo=({faces_vertices:e,faces_faces:t},n,s)=>{const r=t[n];const o=s.map((t=>e[t]));const c=r.map((t=>{const n=e[t];const r=[0,0];for(let e=0;e<o.length;e+=1){let t=0;for(let s=0;s<n.length;s+=1){if(o[e].indexOf(n[s])!==-1){t+=1}}r[e]=t}if(r[0]>=2){return s[0]}if(r[1]>=2){return s[1]}}));s.forEach(((e,n,r)=>{t[e]=[r[(n+1)%s.length]]}));r.forEach(((e,s)=>{for(let r=0;r<t[e].length;r+=1){if(t[e][r]===n){t[e][r]=c[s];t[c[s]].push(e)}}}))};const Lo=(e,t,n=it,s=it,r=a)=>{const o=B(v(e.vector),v(t.vector));if(Math.abs(o)<r){return undefined}const c=B(e.vector,t.vector);const i=-c;const f=[t.origin[0]-e.origin[0],t.origin[1]-e.origin[1]];const l=[-f[0],-f[1]];const d=B(f,t.vector)/c;const u=B(l,e.vector)/i;if(n(d,r/g(e.vector))&&s(u,r/g(t.vector))){return M(e.origin,E(e.vector,d))}return undefined};const Io=(e,t,n=ct,s=it,r=a)=>{const o=t.vector[0]**2+t.vector[1]**2;const c=Math.sqrt(o);const i=c===0?t.vector:t.vector.map((e=>e/c));const f=D(i);const l=O(t.origin,e.origin);const d=B(l,i);if(Math.abs(d)>e.radius+r){return undefined}const u=Math.sqrt(e.radius**2-d**2);const m=(t,n)=>e.origin[n]-f[n]*d+i[n]*t;const g=Math.abs(e.radius-Math.abs(d))<r?[u].map((e=>[e,e].map(m))):[-u,u].map((e=>[e,e].map(m)));const p=g.map((e=>e.map(((e,n)=>e-t.origin[n])))).map((e=>e[0]*t.vector[0]+t.vector[1]*e[1])).map((e=>e/o));return g.filter(((e,t)=>s(p[t],r)))};const Uo=e=>{if(e>=1)return 0;if(e<=-1)return Math.PI;return Math.acos(e)};const Ro=(e,t,n)=>{const s=t[0]-e[0];const r=t[1]-e[1];const o=s*Math.cos(n)+r*Math.sin(n);const c=r*Math.cos(n)-s*Math.sin(n);return[e[0]+o,e[1]+c]};const qo=(e,t,n=ct,s=ct,r=a)=>{const o=e.radius<t.radius?e.radius:t.radius;const c=e.radius<t.radius?t.radius:e.radius;const i=e.radius<t.radius?e.origin:t.origin;const f=e.radius<t.radius?t.origin:e.origin;const l=[i[0]-f[0],i[1]-f[1]];const d=Math.sqrt(l[0]**2+l[1]**2);if(d<r){return undefined}const u=l.map(((e,t)=>e/d*c+f[t]));if(Math.abs(c+o-d)<r||Math.abs(c-(o+d))<r){return[u]}if(d+o<c||c+o<d){return undefined}const m=Uo((o*o-d*d-c*c)/(-2*d*c));const g=Ro(f,u,+m);const p=Ro(f,u,-m);return[g,p]};const Do=e=>{for(let t=1;t<e.length;t+=1){if(!ot(e[0],e[t])){return[e[0],e[t]]}}return undefined};const Wo=(e,{vector:t,origin:n},s=ut,r=it,o=a)=>{const c=e.map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>Lo({vector:O(e[1],e[0]),origin:e[0]},{vector:t,origin:n},s,r,o))).filter((e=>e!==undefined));switch(c.length){case 0:return undefined;case 1:return[c];default:return Do(c)||[c[0]]}};const Go=(e,{vector:t,origin:n},s=ut,r=ft,o=a)=>{const c=Wo(e,{vector:t,origin:n},s,r,o);let i;switch(r){case dt:i=lt;break;case mt:i=ut;break;default:return c}const f=Wo(e,{vector:t,origin:n},ut,i,o);if(f===undefined){return undefined}const l=Do(f);if(l===undefined){switch(r){case dt:return Vr(e,n,at,o)?f:undefined;case mt:return Vr(e,M(n,t),at,o)||Vr(e,n,at,o)?f:undefined;case ft:return undefined;default:return undefined}}return Vr(e,N(...l),at,o)?l:c};const Ho=Object.freeze({__proto__:null,intersectCircleCircle:qo,intersectCircleLine:Io,intersectConvexPolygonLine:Go,intersectLineLine:Lo});const Jo=()=>0;const Qo=(e,t)=>e<-t?-1:0;const Zo=(e,t)=>e<-t?-1:e>1+t?1:0;const Yo=({vertices_coords:e,faces_vertices:t},{vector:n,origin:s},r=Jo,o=a)=>{const c=C(n,n);const i=v(n);const f=e.map((e=>O(e,s))).map((e=>v(e))).map((e=>B(i,e))).map((e=>Math.abs(e)<o?0:Math.sign(e)));const l=e.map((e=>O(e,s))).map((e=>C(e,n))).map((e=>e/c)).map((e=>r(e,o)));const d=t.map((e=>e.map((e=>f[e])).map(((e,t,n)=>e===n[0])).reduce(((e,t)=>e&&t),true))).map((e=>!e));const u=t.map((e=>e.map((e=>l[e])).map(((e,t,n)=>e===n[0])).reduce(((e,t)=>e&&t),true))).map((e=>!e)).map(((e,n)=>e||l[t[n][0]]===0));return t.map(((e,t)=>t)).filter((e=>d[e]&&u[e]))};const Xo=(e,{vector:t,origin:n},s=a)=>Yo(e,{vector:t,origin:n},Jo,s);const Ko=(e,{vector:t,origin:n},s=a)=>Yo(e,{vector:t,origin:n},Qo,s);const ec=(e,t,n=a)=>{const s=O(t[1],t[0]);const r=t[0];return Yo(e,{vector:s,origin:r},Zo,n)};const tc=({vertices_coords:e,edges_vertices:t,faces_vertices:n,faces_edges:s},r,{vector:o,origin:c},i=a)=>{const f=n[r].map((t=>e[t])).map((e=>Sr({vector:o,origin:c},e,(()=>true),i))).map(((e,t)=>e?t:undefined)).filter((e=>e!==undefined));const l=f.map((e=>n[r][e]));const d=f.concat(f.map((e=>e+n[r].length))).map(((e,t,n)=>n[t+1]-e===1)).reduce(((e,t)=>e||t),false);if(d){return undefined}if(l.length>1){return{vertices:l,edges:[]}}const u=s[r].map((n=>t[n].map((t=>e[t])))).map((e=>Lo({vector:o,origin:c},{vector:O(e[1],e[0]),origin:e[0]},it,mt,i))).map(((e,t)=>({coords:e,edge:s[r][t]}))).filter((e=>e.coords!==undefined)).filter((e=>!l.map((n=>t[e.edge].includes(n))).reduce(((e,t)=>e||t),false)));return u.length+l.length===2?{vertices:l,edges:u}:undefined};const nc=Object.freeze({__proto__:null,facesLineTypeOverlap:Yo,getFacesLineOverlap:Xo,getFacesRayOverlap:Ko,getFacesSegmentOverlap:ec,intersectConvexFaceLine:tc});const sc=(e,t,n,s)=>{const r=tc(e,t,n,s);if(r===undefined){return undefined}const o=No(e,r);o.edges.new=Co(e,t,o.vertices);Vo(e,o.edges.new);zo(e,o.edges.new);const c=Po(e,t,o.vertices);To(e,t,c);$o(e,t,o.edges.new,c);Bo(e,t,c);const a=xn(e,"faces",[t]);c.forEach(((e,t)=>{c[t]=a[c[t]]}));a.splice(-2);a[t]=c;o.faces={map:a,new:c,remove:t};return o};const rc=(e,t)=>{const n={};t.forEach((e=>{n[e]=true}));const s=[];t.forEach((t=>{s[t]=e[t].filter((e=>n[e]))}));return s};const oc=(e,t={})=>{const n={vertices:[],edges:[],faces:[],...t};const s=Object.keys(n);const r={...e};vt.graph.forEach((e=>delete r[e]));delete r.file_frames;const o={};s.forEach((e=>{o[e]={}}));s.forEach((e=>n[e].forEach((t=>{o[e][t]=true}))));const c={};s.forEach((t=>{zt(e,t).forEach((e=>{c[e]={}}));Tt(e,t).forEach((e=>{c[e]={}}))}));s.forEach((t=>{zt(e,t).forEach((e=>{c[e].prefix=t}));Tt(e,t).forEach((e=>{c[e].suffix=t}))}));Object.keys(c).forEach((e=>{r[e]=[]}));Object.keys(c).forEach((t=>{const{prefix:s,suffix:a}=c[t];if(s&&a){n[s].forEach((n=>{r[t][n]=e[t][n].filter((e=>o[a][e]))}))}else if(s){n[s].forEach((n=>{r[t][n]=e[t][n]}))}else if(a){r[t]=e[t].map((e=>e.filter((e=>o[a][e]))))}else{r[t]=e[t]}}));return r};const cc=(e,t)=>{let n=[];if(e.faces_vertices){n=cn(t.flatMap((t=>e.faces_vertices[t])))}let s=[];if(e.faces_edges){s=cn(t.flatMap((t=>e.faces_edges[t])))}else if(e.edges_vertices){const t={};n.forEach((e=>{t[e]=true}));s=e.edges_vertices.map(((e,n)=>t[e[0]]&&t[e[1]]?n:undefined)).filter((e=>e!==undefined))}return oc(e,{vertices:n,edges:s,faces:t})};const ac=Object.freeze({__proto__:null,selfRelationalArraySubset:rc,subgraph:oc,subgraphWithFaces:cc});const ic=e=>{const t={vertices:sn.vertices(e),edges:sn.edges(e),faces:sn.faces(e)};const n={vertices:es.vertices(e),edges:es.edges(e),faces:es.faces(e)};return{vertices:t.vertices>=n.vertices,edges:t.edges>=n.edges,faces:t.faces>=n.faces}};const fc=(e,t)=>{const n=rr(e);const s=ar(e);const r=kn(e);const o=bn(e,t);const c=ic(e);const a=n.length===0&&s.length===0&&r.length===0&&c.vertices&&c.edges&&c.faces;const i=a?"valid":"problematic";return{summary:i,vertices:{isolated:r,duplicate:o,references:c.vertices},edges:{circular:s,duplicate:n,references:c.edges},faces:{references:c.faces}}};const lc=({vertices_coords:e},t)=>tt(e,t);const dc=({edges_vertices:e,edges_assignment:t=[]})=>rn(e.filter(((e,n)=>Ft[t[n]])).flat());const uc=()=>({vertices:[],edges:[],polygon:[]});const mc=({vertices_coords:e,vertices_edges:t,edges_vertices:n,edges_assignment:s})=>{if(!s||!n){return uc()}if(!t){t=Ms({edges_vertices:n})}const r=s.map((e=>e==="B"||e==="b"));const o=[];const c=[];let a=-1;for(let e=0;e<r.length;e+=1){if(r[e]){a=e;break}}if(a===-1){return uc()}r[a]=false;o.push(a);c.push(n[a][0]);let i=n[a][1];while(c[0]!==i){c.push(i);a=t[i].filter((e=>r[e])).shift();if(a===undefined){return uc()}if(n[a][0]===i){[,i]=n[a]}else{[i]=n[a]}r[a]=false;o.push(a)}return{vertices:c,edges:o,polygon:e?c.map((t=>e[t])):[]}};const gc=({vertices_coords:e,vertices_edges:t,vertices_vertices:n,edges_vertices:s})=>{if(!n){n=js({vertices_coords:e,vertices_edges:t,edges_vertices:s})}const r=Ps({edges_vertices:s});const o=[];const c=[];const a={vertices:c,edges:o};let i=-Infinity;let f=-1;e.forEach(((e,t)=>{if(e[0]>i){i=e[0];f=t}}));if(f===-1){return a}c.push(f);const l=e[f];const d=n[f];if(!d){return a}const u=d.map((t=>e[t])).map((e=>[e[0]-l[0],e[1]-l[1]])).map((e=>Math.atan2(e[1],e[0]))).map((e=>e<0?e+Math.PI*2:e)).map(((e,t)=>({a:e,i:t}))).sort(((e,t)=>e.a-t.a)).shift().i;const m=d[u];const g=f<m?`${f} ${m}`:`${m} ${f}`;const p=r[g];o.push(p);let _=f;let h=m;const v={[`${_} ${h}`]:true};while(true){const e=n[h];const t=e.indexOf(_);const s=(t+1)%e.length;const i=e[s];const f=h<i?`${h} ${i}`:`${i} ${h}`;const l=r[f];if(v[`${h} ${i}`]){if(l!==o[0]){console.warn("bad boundary")}return a}v[`${h} ${i}`]=true;c.push(h);o.push(l);_=h;h=i}};const pc=Object.freeze({__proto__:null,boundary:mc,boundaryVertices:dc,boundingBox:lc,planarBoundary:gc});const _c=(e,t)=>{const n={};t.forEach((e=>{n[e]=true}));const s=e.map((e=>!!n[e]));const r=[];const o=s.indexOf(false);const c={};for(let t=o+1;t<s.length;t+=1){if(s[t]&&!c[e[t]]){r.push(e[t]);c[e[t]]=true}}for(let t=0;t<o;t+=1){if(s[t]&&!c[e[t]]){r.push(e[t]);c[e[t]]=true}}return r};const hc=Object.freeze({__proto__:null,getFaceFaceSharedVertices:_c});const vc=(e=[],t=0)=>{if(e.length===0){return[]}const n=[];const s={};e.forEach(((e,t)=>{s[t]=true}));do{const r=t!==undefined?t:parseInt(Object.keys(s).shift(),10);t=undefined;const o=[];delete s[r];let c=[{index:r}];do{o.push(c);const t=c.flatMap((t=>e[t.index].filter((e=>s[e])).map((e=>({index:e,parent:t.index})))));const n={};t.forEach(((e,t)=>{if(!s[e.index]){n[t]=true}delete s[e.index]}));c=t.filter(((e,t)=>!n[t]))}while(c.length);n.push(o)}while(Object.keys(s).length);return n};const bc=(e,t)=>vc(e,t).shift();const yc=Object.freeze({__proto__:null,minimumSpanningTree:bc,minimumSpanningTrees:vc});const Ec=({vertices_coords:e,vertices_faces:t,faces_vertices:n},s)=>{if(!t){t=Ss({faces_vertices:n})}const r=t.map((e=>e.filter((e=>e!=null)).shift())).map((e=>e===undefined?se:s[e]));return e.map(((e,t)=>re(r[t],e)))};const xc={U:true,u:true};const Ac=({vertices_coords:e,edges_vertices:t,edges_foldAngle:n,edges_assignment:s,faces_vertices:r,faces_faces:o},c=0)=>{if(!s&&n){s=Us({edges_foldAngle:n})}if(!n){if(s){n=qs({edges_assignment:s})}else{n=Array(t.length).fill(0)}}if(!o){o=Xs({faces_vertices:r})}const a=Ps({edges_vertices:t});const i=r.map((()=>_e));vc(o,c).forEach((t=>t.slice(1).forEach((t=>t.forEach((t=>{const o=_c(r[t.index],r[t.parent]).slice(0,2);const c=o.map((t=>e[t]));const f=o.join(" ");const l=a[f];const d=xc[s[l]]?Math.PI:n[l]*Math.PI/180;const u=je(d,w(...Y(c[1],c[0])),c[0]);i[t.index]=ye(i[t.parent],u)}))))));return i};const Mc=({vertices_coords:e,edges_vertices:t,edges_foldAngle:n,edges_assignment:s,faces_vertices:r,faces_faces:o},c=0)=>{if(!n){if(s){n=qs({edges_assignment:s})}else{n=Array(t.length).fill(0)}}if(!o){o=Xs({faces_vertices:r})}const a=qt({edges_vertices:t,edges_foldAngle:n,edges_assignment:s});const i=Ps({edges_vertices:t});const f=r.map((()=>se));vc(o,c).forEach((t=>t.slice(1).forEach((t=>t.forEach((t=>{const n=_c(r[t.index],r[t.parent]).slice(0,2);const s=n.map((t=>e[t]));const o=n.join(" ");const c=i[o];const l=O(s[1],s[0]);const d=s[0];const u=a[c]?me(l,d):se;f[t.index]=ce(f[t.parent],u)}))))));return f};const kc=Object.freeze({__proto__:null,makeFacesMatrix:Ac,makeFacesMatrix2:Mc,multiplyVerticesFacesMatrix2:Ec});const wc=({vertices_coords:e,vertices_faces:t,edges_vertices:n,edges_foldAngle:s,edges_assignment:r,faces_vertices:o,faces_faces:c,faces_matrix:a},i)=>{a=Ac({vertices_coords:e,edges_vertices:n,edges_foldAngle:s,edges_assignment:r,faces_vertices:o,faces_faces:c},i);if(!t){t=Ss({faces_vertices:o})}const f=t.map((e=>e.filter((e=>e!=null)).shift())).map((e=>e===undefined?_e:a[e]));return e.map((e=>Z(3,e))).map(((e,t)=>ve(f[t],e)))};const Oc=({vertices_coords:e,edges_vertices:t,edges_foldAngle:n,edges_assignment:s,faces_vertices:r,faces_faces:o},c=0)=>{if(!o){o=Xs({faces_vertices:r})}const a=qt({edges_vertices:t,edges_foldAngle:n,edges_assignment:s});const i=[];r[c].forEach((t=>{i[t]=[...e[t]]}));const f=[];f[c]=false;const l=Ps({edges_vertices:t});bc(o,c).slice(1).forEach((n=>n.forEach((n=>{const s=_c(r[n.index],r[n.parent]).slice(0,2).join(" ");const o=l[s];const c=t[o].map((e=>i[e]));if(c[0]===undefined||c[1]===undefined){return}const d=t[o].map((t=>e[t]));const u=d[0];const m=v(O(d[1],d[0]));const g=D(m);f[n.index]=a[o]?!f[n.parent]:f[n.parent];const p=v(O(c[1],c[0]));const _=c[0];const h=f[n.index]?W(p):D(p);r[n.index].filter((e=>i[e]===undefined)).forEach((t=>{const n=O(e[t],u);const s=F(n,g);const r=F(n,m);const o=E(p,r);const c=E(h,s);const a=M(M(_,o),c);i[t]=a}))}))));return i};const jc=Object.freeze({__proto__:null,makeVerticesCoordsFlatFolded:Oc,makeVerticesCoordsFolded:wc});const Fc="class";const Cc="function";const Sc="undefined";const Pc="boolean";const Nc="number";const Vc="string";const zc="object";const Tc="svg";const $c="path";const Bc="id";const Lc="style";const Ic="viewBox";const Uc="transform";const Rc="points";const qc="stroke";const Dc="fill";const Wc="none";const Gc="arrow";const Hc="head";const Jc="tail";const Qc=typeof window!==Sc&&typeof window.document!==Sc;typeof process!==Sc&&process.versions!=null&&process.versions.node!=null;const Zc={window:"window not set; svg.window = @xmldom/xmldom"};const Yc={window:undefined};const Xc=e=>(new e.DOMParser).parseFromString("<!DOCTYPE html><title>.</title>","text/html");const Kc=e=>{if(!e.document){e.document=Xc(e)}Yc.window=e;return Yc.window};if(Qc){Yc.window=window}const ea=()=>{if(Yc.window===undefined){throw Zc.window}return Yc.window};const ta="http://www.w3.org/2000/svg";const na={presentation:["color","color-interpolation","cursor","direction","display","fill","fill-opacity","fill-rule","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","image-rendering","letter-spacing","opacity","overflow","paint-order","pointer-events","preserveAspectRatio","shape-rendering","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","tabindex","transform-origin","user-select","vector-effect","visibility"],animation:["accumulate","additive","attributeName","begin","by","calcMode","dur","end","from","keyPoints","keySplines","keyTimes","max","min","repeatCount","repeatDur","restart","to","values"],effects:["azimuth","baseFrequency","bias","color-interpolation-filters","diffuseConstant","divisor","edgeMode","elevation","exponent","filter","filterRes","filterUnits","flood-color","flood-opacity","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","lighting-color","limitingConeAngle","mode","numOctaves","operator","order","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","primitiveUnits","radius","result","seed","specularConstant","specularExponent","stdDeviation","stitchTiles","surfaceScale","targetX","targetY","type","xChannelSelector","yChannelSelector"],text:["dx","dy","alignment-baseline","baseline-shift","dominant-baseline","lengthAdjust","method","overline-position","overline-thickness","rotate","spacing","startOffset","strikethrough-position","strikethrough-thickness","text-anchor","text-decoration","text-rendering","textLength","underline-position","underline-thickness","word-spacing","writing-mode"],gradient:["gradientTransform","gradientUnits","spreadMethod"]};const sa={svg:["svg"],defs:["defs"],header:["desc","filter","metadata","style","script","title","view"],cdata:["cdata"],group:["g"],visible:["circle","ellipse","line","path","polygon","polyline","rect","arc","arrow","curve","parabola","roundRect","wedge","origami"],text:["text"],invisible:["marker","symbol","clipPath","mask"],patterns:["linearGradient","radialGradient","pattern"],childrenOfText:["textPath","tspan"],gradients:["stop"],filter:["feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence"]};const ra={svg:[Ic],line:["x1","y1","x2","y2"],rect:["x","y","width","height"],circle:["cx","cy","r"],ellipse:["cx","cy","rx","ry"],polygon:[Rc],polyline:[Rc],path:["d"],text:["x","y"],mask:[Bc],symbol:[Bc],clipPath:[Bc,"clip-rule"],marker:[Bc,"markerHeight","markerUnits","markerWidth","orient","refX","refY"],linearGradient:["x1","x2","y1","y2"],radialGradient:["cx","cy","r","fr","fx","fy"],stop:["offset","stop-color","stop-opacity"],pattern:["patternContentUnits","patternTransform","patternUnits"]};const oa=[{nodes:[Tc,"defs","g"].concat(sa.visible,sa.text),attr:na.presentation},{nodes:["filter"],attr:na.effects},{nodes:sa.childrenOfText.concat("text"),attr:na.text},{nodes:sa.filter,attr:na.effects},{nodes:sa.gradients,attr:na.gradient}];oa.forEach((e=>e.nodes.forEach((t=>{if(!ra[t]){ra[t]=[]}ra[t].push(...e.attr)}))));const ca=[sa.header,sa.invisible,sa.patterns].flat();const aa=[sa.group,sa.visible,sa.text].flat();const ia={svg:[["svg","defs"],ca,aa].flat(),defs:ca,filter:sa.filter,g:aa,text:sa.childrenOfText,marker:aa,symbol:aa,clipPath:aa,mask:aa,linearGradient:sa.gradients,radialGradient:sa.gradients};const fa=Object.values(sa).flat();const la={black:"#000000",silver:"#c0c0c0",gray:"#808080",white:"#ffffff",maroon:"#800000",red:"#ff0000",purple:"#800080",fuchsia:"#ff00ff",green:"#008000",lime:"#00ff00",olive:"#808000",yellow:"#ffff00",navy:"#000080",blue:"#0000ff",teal:"#008080",aqua:"#00ffff",orange:"#ffa500",aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",blanchedalmond:"#ffebcd",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",oldlace:"#fdf5e6",olivedrab:"#6b8e23",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",whitesmoke:"#f5f5f5",yellowgreen:"#9acd32"};const da=e=>Math.round(e*100)/100;const ua=(e,t,n,s)=>{const r=t/100;const o=n/100;const c=t=>(t+e/30)%12;const a=r*Math.min(o,1-o);const i=e=>o-a*Math.max(-1,Math.min(c(e)-3,Math.min(9-c(e),1)));return s===undefined?[i(0)*255,i(8)*255,i(4)*255]:[i(0)*255,i(8)*255,i(4)*255,s]};const ma=(e,t)=>{const n=Array.from(Array(t.length)).map(((t,n)=>e[n]||"0"));return e.length<=4?t.map((e=>n[e])).join(""):n.join("")};const ga=e=>{const t=e.replace(/#(?=\S)/g,"");const n=t.length===4||t.length===8;const s=n?ma(t,[0,0,1,1,2,2,3,3]):ma(t,[0,0,1,1,2,2]);const r=parseInt(s,16);return n?[r>>24&255,r>>16&255,r>>8&255,da((r&255)/256)]:[r>>16&255,r>>8&255,r&255]};const pa=(e,t,n,s)=>{const r=e=>`00${Math.max(0,Math.min(Math.round(e),255)).toString(16)}`.slice(-2);const o=`#${[e,t,n].map(r).join("")}`;return s===undefined?o:`${o}${r(s*255)}`};const _a=Object.freeze({__proto__:null,hexToRgb:ga,hslToRgb:ua,rgbToHex:pa});const ha=e=>{const t=e.match(/\(([^\)]+)\)/g);if(t==null||!t.length){return[]}return t[0].substring(1,t[0].length-1).split(/[\s,]+/).map(parseFloat)};const va=e=>{if(la[e]){return ga(la[e])}if(e[0]==="#"){return ga(e)}if(e.substring(0,4)==="rgba"||e.substring(0,3)==="rgb"){const t=ha(e);[0,1,2].filter((e=>t[e]===undefined)).forEach((e=>{t[e]=0}));return t}if(e.substring(0,4)==="hsla"||e.substring(0,3)==="hsl"){const t=ha(e);[0,1,2].filter((e=>t[e]===undefined)).forEach((e=>{t[e]=0}));return ua(...t)}return undefined};const ba=e=>{if(la[e]){return la[e].toUpperCase()}if(e[0]==="#"){return pa(...ga(e))}if(e.substring(0,4)==="rgba"||e.substring(0,3)==="rgb"){return pa(...ha(e))}if(e.substring(0,4)==="hsla"||e.substring(0,3)==="hsl"){const t=ha(e);[0,1,2].filter((e=>t[e]===undefined)).forEach((e=>{t[e]=0}));const n=ua(...t);if(t.length===4){n.push(t[3])}return pa(...n)}return undefined};const ya=Object.freeze({__proto__:null,parseColorToHex:ba,parseColorToRgb:va});const Ea={cssColors:la,..._a,...ya};const xa=(e,t)=>[e[0]+t[0],e[1]+t[1]];const Aa=(e,t)=>[e[0]-t[0],e[1]-t[1]];const Ma=(e,t)=>[e[0]*t,e[1]*t];const ka=e=>e[0]**2+e[1]**2;const wa=e=>Math.sqrt(ka(e));const Oa=(e,t)=>ka(Aa(e,t));const ja=(e,t)=>Math.sqrt(Oa(e,t));const Fa=(e,t)=>[Math.cos(e)*t,Math.sin(e)*t];const Ca=(e,t)=>[e[0]*t[0]+e[2]*t[1],e[1]*t[0]+e[3]*t[1],e[0]*t[2]+e[2]*t[3],e[1]*t[2]+e[3]*t[3],e[0]*t[4]+e[2]*t[5]+e[4],e[1]*t[4]+e[3]*t[5]+e[5]];const Sa=Object.freeze({__proto__:null,svg_add2:xa,svg_distance2:ja,svg_distanceSq2:Oa,svg_magnitude2:wa,svg_magnitudeSq2:ka,svg_multiplyMatrices2:Ca,svg_polar_to_cart:Fa,svg_scale2:Ma,svg_sub2:Aa});const Pa=function(e){const t=e.match(/(\w+\((\-?\d+\.?\d*e?\-?\d*,?\s*)+\))+/g);if(!t){return[]}const n=t.map((e=>e.match(/[\w\.\-]+/g)));return n.map((e=>({transform:e.shift(),parameters:e.map((e=>parseFloat(e)))})))};const Na=function(e){switch(e.length){case 1:return[1,0,0,1,e[0],0];case 2:return[1,0,0,1,e[0],e[1]];default:console.warn(`improper translate, ${e}`)}return undefined};const Va=function(e){const t=Math.cos(e[0]/(180*Math.PI));const n=Math.sin(e[0]/(180*Math.PI));switch(e.length){case 1:return[t,n,-n,t,0,0];case 3:return[t,n,-n,t,-e[1]*t+e[2]*n+e[1],-e[1]*n-e[2]*t+e[2]];default:console.warn(`improper rotate, ${e}`)}return undefined};const za=function(e){switch(e.length){case 1:return[e[0],0,0,e[0],0,0];case 2:return[e[0],0,0,e[1],0,0];default:console.warn(`improper scale, ${e}`)}return undefined};const Ta=function(e){return[1,0,Math.tan(e[0]/(180*Math.PI)),1,0,0]};const $a=function(e){return[1,Math.tan(e[0]/(180*Math.PI)),0,1,0,0]};const Ba=function(e,t){switch(e){case"translate":return Na(t);case"rotate":return Va(t);case"scale":return za(t);case"skewX":return Ta(t);case"skewY":return $a(t);case"matrix":return t;default:console.warn(`unknown transform type ${e}`)}return undefined};const La=function(e){return Pa(e).map((e=>Ba(e.transform,e.parameters))).filter((e=>e!==undefined)).reduce(((e,t)=>Ca(e,t)),[1,0,0,1,0,0])};const Ia=Object.freeze({__proto__:null,transformStringToMatrix:La});const Ua=(e,t="text/xml")=>{const n=(new(ea().DOMParser)).parseFromString(e,t);return n?n.documentElement:null};const Ra=e=>{let t=e;while(t.parentNode!=null){t=t.parentNode}return t};const qa=(e,t)=>{if((e.nodeName||"")===t){return e}return e.parentNode?qa(e.parentNode,t):undefined};const Da=(e,...t)=>{const n={};const s=e.getAttribute("class");const r=s?s.split(" "):[];r.push(...t);r.forEach((e=>{n[e]=true}));const o=Object.keys(n).join(" ");e.setAttribute("class",o)};const Wa=(e,...t)=>{if(!e||!t.length){return undefined}return e.classList?e.classList.add(...t):Da(e,...t)};const Ga=e=>e.childNodes==null||!e.childNodes.length?[e]:Array.from(e.childNodes).flatMap((e=>Ga(e)));const Ha={svg:["viewBox","xmlns","version"],line:["x1","y1","x2","y2"],rect:["x","y","width","height"],circle:["cx","cy","r"],ellipse:["cx","cy","rx","ry"],polygon:["points"],polyline:["points"],path:["d"]};const Ja=e=>{const t=e.attributes;if(t==null){return[]}const n=Array.from(t);return Ha[e.nodeName]?n.filter((t=>!Ha[e.nodeName].includes(t.name))):n};const Qa=e=>{const t={};e.forEach((e=>{t[e.nodeName]=e.value}));return t};const Za=(e,t)=>{const n=Qa(Ja(t));if(!n.transform&&!e.transform){return{...e,...n}}const s=n.transform||"";const r=e.transform||"";const o=La(s);const c=La(r);const a=Ca(c,o);const i=`matrix(${a.join(", ")})`;return{...e,...n,transform:i}};const Ya=(e,t={})=>e.childNodes==null||!e.childNodes.length?[{element:e,attributes:t}]:Array.from(e.childNodes).flatMap((e=>Ya(e,Za(t,e))));const Xa=Object.freeze({__proto__:null,addClass:Wa,findElementTypeInParents:qa,flattenDomTree:Ga,flattenDomTreeWithStyle:Ya,getRootParent:Ra,xmlStringToElement:Ua});const Ka=e=>(new(ea().DOMParser)).parseFromString("<root></root>","text/xml").createCDATASection(e);const ei=/[MmLlSsQqLlHhVvCcSsQqTtAaZz]/g;const ti=/-?[0-9]*\.?\d+/g;const ni={m:"move",l:"line",v:"vertical",h:"horizontal",a:"ellipse",c:"curve",s:"smoothCurve",q:"quadCurve",t:"smoothQuadCurve",z:"close"};Object.keys(ni).forEach((e=>{const t=ni[e];ni[e.toUpperCase()]=t.charAt(0).toUpperCase()+t.slice(1)}));const si=(e,t)=>[e[0]+(t[0]||0),e[1]+(t[1]||0)];const ri=(e,t,n=[0,0])=>{const s=e.toUpperCase();let r=e===s?[0,0]:n;if(e==="V"){r=[n[0],0]}if(e==="H"){r=[0,n[1]]}switch(s){case"V":return si(r,[0,t[0]]);case"H":return si(r,[t[0],0]);case"M":case"L":case"T":return si(r,t);case"A":return si(r,[t[5],t[6]]);case"C":return si(r,[t[4],t[5]]);case"S":case"Q":return si(r,[t[2],t[3]]);case"Z":return undefined;default:return r}};const oi=e=>{const t=[];let n;while((n=ei.exec(e))!==null){t.push(n)}return t.map(((t,n,s)=>[t[0],t.index,n===s.length-1?e.length-1:s[(n+1)%s.length].index-1])).map((t=>{const n=t[0];const s=e.substring(t[1]+1,t[2]+1);const r=s.match(ti);const o=r?r.map(parseFloat):[];return{command:n,values:o}}))};const ci=e=>{let t=[0,0];const n=oi(e);if(!n.length){return n}n.forEach(((e,s)=>{n[s].end=ri(e.command,e.values,t);n[s].start=s===0?t:n[s-1].end;t=n[s].end}));const s=n[n.length-1];const r=n.filter((e=>e.command.toUpperCase()!=="M"&&e.command.toUpperCase()!=="Z")).shift();if(s.command.toUpperCase()==="Z"){s.end=[...r.start]}return n};const ai=Object.freeze({__proto__:null,parsePathCommands:oi,parsePathCommandsWithEndpoints:ci,pathCommandNames:ni});const ii=(...e)=>e.filter((e=>typeof e===Nc)).concat(e.filter((e=>typeof e===zc&&e!==null)).map((e=>{if(typeof e.x===Nc){return[e.x,e.y]}if(typeof e[0]===Nc){return[e[0],e[1]]}return undefined})).filter((e=>e!==undefined)).reduce(((e,t)=>e.concat(t)),[]));const fi=function(e,t,n,s,r=0){const o=1;const c=n/o-n;const a=e-c-r;const i=t-c-r;const f=n+c*2+r*2;const l=s+c*2+r*2;return[a,i,f,l].join(" ")};const li=(...e)=>{const t=ii(...e.flat());if(t.length===2){t.unshift(0,0)}return t.length===4?fi(...t):undefined};const di=(e,...t)=>{const n=t.length===1&&typeof t[0]===Vc?t[0]:li(...t);if(n){e.setAttribute(Ic,n)}return e};const ui=function(e){const t=e.getAttribute(Ic);return t==null?undefined:t.split(" ").map((e=>parseFloat(e)))};const mi=function(e,t,n){const s=e.createSVGPoint();s.x=t;s.y=n;const r=s.matrixTransform(e.getScreenCTM().inverse());return[r.x,r.y]};const gi=Object.freeze({__proto__:null,convertToViewBox:mi,getViewBox:ui,setViewBox:di});const pi={...Sa,...Xa,makeCDATASection:Ka,...ai,...Ia,...gi};const _i=function(e){const t=ui(e);if(t!==undefined){return t}if(typeof e.getBoundingClientRect===Cc){const t=e.getBoundingClientRect();return[t.x,t.y,t.width,t.height]}return[]};const hi="svg-background-rectangle";const vi=function(e,t){let n=Array.from(e.childNodes).filter((e=>e.getAttribute(Fc)===hi)).shift();if(n==null){n=ea().document.createElementNS(ta,"rect");_i(e).forEach(((e,t)=>n.setAttribute(ra.rect[t],e)));n.setAttribute(Fc,hi);n.setAttribute(qc,Wc);e.insertBefore(n,e.firstChild)}n.setAttribute(Dc,t);return e};const bi=e=>{const t=e.getAttribute(Uc);return t==null||t===""?undefined:t};const yi={clearTransform:e=>{e.removeAttribute(Uc);return e}};["translate","rotate","scale","matrix"].forEach((e=>{yi[e]=(t,...n)=>{t.setAttribute(Uc,[bi(t),`${e}(${n.join(" ")})`].filter((e=>e!==undefined)).join(" "));return t}}));const Ei=e=>e.replace(/([-_][a-z])/gi,(e=>e.toUpperCase().replace("-","").replace("_","")));const xi=e=>e.replace(/([a-z0-9])([A-Z])/g,"$1-$2").replace(/([A-Z])([A-Z])(?=[a-z])/g,"$1-$2").toLowerCase();const Ai=e=>e.charAt(0).toUpperCase()+e.slice(1);const Mi=e=>{while(e.lastChild){e.removeChild(e.lastChild)}return e};const ki=(e,t)=>{if(t&&t.appendChild){t.appendChild(e)}return e};const wi=(e,t)=>{Object.keys(t).forEach((n=>e.setAttribute(xi(n),t[n])));return e};const Oi=Object.freeze({__proto__:null,appendTo:ki,removeChildren:Mi,setAttributes:wi});const ji=function(e,t){const n=ui(e);if(n!==undefined){di(e,...[-t,-t,t*2,t*2].map(((e,t)=>n[t]+e)))}return e};const Fi=function(e,t){const n=e.getElementsByTagName(t);return n.length?n[0]:null};const Ci=function(e,t){let n=Fi(e,Lc);if(n==null){n=ea().document.createElementNS(ta,Lc);n.setTextContent=e=>{n.textContent="";n.appendChild(Ka(e));return n};e.insertBefore(n,e.firstChild)}n.textContent="";n.appendChild(Ka(t));return n};const Si=e=>{Array.from(e.attributes).filter((e=>e.name!=="xmlns"&&e.name!=="version")).forEach((t=>e.removeAttribute(t.name)));return Mi(e)};const Pi={clear:Si,size:di,setViewBox:di,getViewBox:ui,padding:ji,background:vi,getWidth:e=>_i(e)[2],getHeight:e=>_i(e)[3],stylesheet:function(e,t){return Ci.call(this,e,t)},...yi,...Oi};const Ni={move:["mousemove","touchmove"],press:["mousedown","touchstart"],release:["mouseup","touchend"],leave:["mouseleave","touchcancel"]};const Vi=(e,t)=>Object.values(Ni).flat().forEach((n=>{t[n].forEach((t=>e.removeEventListener(n,t)));t[n]=[]}));const zi=(e,t,n)=>Object.defineProperty(e,t,{get:()=>n,enumerable:true,configurable:true});const Ti=function(e){const t=[];Object.keys(Ni).forEach((e=>{Ni[e].forEach((e=>{t[e]=[]}))}));const n=n=>Ni[n].forEach((n=>t[n].forEach((t=>e.removeEventListener(n,t)))));Object.keys(Ni).forEach((s=>{Object.defineProperty(e,`on${Ai(s)}`,{set:r=>{if(!e.addEventListener){return}if(r==null){n(s);return}Ni[s].forEach((n=>{const s=t=>{const n=t.touches!=null?t.touches[0]:t;if(n!==undefined){const{clientX:s,clientY:r}=n;const[o,c]=mi(e,s,r);zi(t,"x",o);zi(t,"y",c)}r(t)};t[n].push(s);e.addEventListener(n,s)}))},enumerable:true})}));Object.defineProperty(e,"off",{value:()=>Vi(e,t)})};const $i=()=>Math.random().toString(36).replace(/[^a-z]+/g,"").concat("aaaaa").substr(0,5);const Bi=function(e){let t;let n=0;let s;const r={};const o=()=>{if(ea().cancelAnimationFrame){ea().cancelAnimationFrame(s)}Object.keys(r).forEach((e=>delete r[e]))};const c=e=>{o();if(!e||!ea().requestAnimationFrame){return}t=performance.now();n=0;const c=$i();r[c]=o=>{const a=(o-t)*.001;e({time:a,frame:n});n+=1;if(r[c]){s=ea().requestAnimationFrame(r[c])}};s=ea().requestAnimationFrame(r[c])};Object.defineProperty(e,"play",{set:c,enumerable:true});Object.defineProperty(e,"stop",{value:o,enumerable:true})};const Li=e=>e&&e.parentNode?e.parentNode.removeChild(e):undefined;const Ii=[["cx","cy"],["x","y"]];const Ui=function(e,t={}){const n=[0,0];const s={selected:false,svg:undefined,updatePosition:e=>e};const r=()=>{if(!s.svg){return}if(!s.svg.parentNode){e.appendChild(s.svg)}Ii.filter((e=>s.svg[e[0]]!=null)).forEach((e=>e.forEach(((e,t)=>{s.svg.setAttribute(e,n[t])}))))};const o=new Proxy(n,{set:(e,t,n)=>{e[t]=n;r();return true}});const c=function(...e){ii(...e.flat()).forEach(((e,t)=>{n[t]=e}));r();if(typeof n.delegate===Cc){n.delegate.apply(n.pointsContainer,[o,n.pointsContainer])}};n.delegate=undefined;n.setPosition=c;n.onMouseMove=e=>s.selected?c(s.updatePosition(e)):undefined;n.onMouseUp=()=>{s.selected=false};n.distance=e=>Math.sqrt(Oa(e,n));["x","y"].forEach(((e,t)=>Object.defineProperty(n,e,{get:()=>n[t],set:e=>{n[t]=e}})));[Tc,"updatePosition","selected"].forEach((e=>Object.defineProperty(n,e,{get:()=>s[e],set:t=>{s[e]=t}})));Object.defineProperty(n,"remove",{value:()=>{Li(s.svg);n.delegate=undefined}});return o};const Ri=function(e,t,n){let s;let r;const o=Array.from(Array(t)).map((()=>Ui(e,n)));const c=e=>typeof r===Cc?r.call(o,e,s,o):undefined;o.forEach((e=>{e.delegate=c;e.pointsContainer=o}));const a=function(e){if(!(o.length>0)){return}s=o.map(((t,n)=>({i:n,d:Oa(t,[e.x,e.y])}))).sort(((e,t)=>e.d-t.d)).shift().i;o[s].selected=true};const i=function(e){o.forEach((t=>t.onMouseMove(e)))};const f=function(){o.forEach((e=>e.onMouseUp()));s=undefined};e.onPress=a;e.onMove=i;e.onRelease=f;Object.defineProperty(o,"selectedIndex",{get:()=>s});Object.defineProperty(o,"selected",{get:()=>o[s]});Object.defineProperty(o,"add",{value:t=>{o.push(Ui(e,t))}});o.removeAll=()=>{while(o.length>0){o.pop().remove()}};const l={onChange:(e,t)=>{r=e;if(t===true){const t=o.length-1;e.call(o,o[t],t,o)}},position:e=>o.forEach(((t,n)=>t.setPosition(e.call(o,t,n,o)))),svg:e=>o.forEach(((t,n)=>{t.svg=e.call(o,t,n,o)}))};Object.keys(l).forEach((e=>{o[e]=function(){if(typeof arguments[0]===Cc){l[e](...arguments)}return o}}));o.parent=function(e){if(e!=null&&e.appendChild!=null){o.forEach((t=>{e.appendChild(t.svg)}))}return o};return o};const qi=e=>{e.controls=(...t)=>Ri.call(e,e,...t)};const Di={svg:{args:(...e)=>[li(ii(...e))].filter((e=>e!=null)),methods:Pi,init:(...e)=>{const t=ea().document.createElementNS(ta,"svg");t.setAttribute("version","1.1");t.setAttribute("xmlns",ta);e.filter((e=>e!=null)).filter((e=>e.appendChild)).forEach((e=>e.appendChild(t)));Ti(t);Bi(t);qi(t);return t}}};const Wi=function(e){if(e==null){return""}if(typeof e===Vc){return e.slice(0,3)==="url"?e:`url(#${e})`}if(e.getAttribute!=null){const t=e.getAttribute(Bc);return`url(#${t})`}return""};const Gi={};["clip-path","mask","symbol","marker-end","marker-mid","marker-start"].forEach((e=>{Gi[Ei(e)]=(t,n)=>{t.setAttribute(e,Wi(n));return t}}));const Hi={g:{methods:{...yi,...Gi,...Oi}}};const Ji=(e,t)=>{e.setAttribute(ra.circle[2],t);return e};const Qi=(e,t,n)=>{[...ii(...[t,n].flat()).slice(0,2)].forEach(((t,n)=>e.setAttribute(ra.circle[n],t)));return e};const Zi=(e,t,n,s)=>[e,t,ja([e,t],[n,s])];const Yi={circle:{args:(e,t,n,s)=>{const r=ii(...[e,t,n,s].flat());switch(r.length){case 0:case 1:return[,,...r];case 2:case 3:return r;default:return Zi(...r)}},methods:{radius:Ji,setRadius:Ji,origin:Qi,setOrigin:Qi,center:Qi,setCenter:Qi,position:Qi,setPosition:Qi,...yi,...Gi,...Oi}}};const Xi=(e,t,n)=>{[,,t,n].forEach(((t,n)=>e.setAttribute(ra.ellipse[n],t)));return e};const Ki=(e,t,n)=>{[...ii(...[t,n].flat()).slice(0,2)].forEach(((t,n)=>e.setAttribute(ra.ellipse[n],t)));return e};const ef={ellipse:{args:(e,t,n,s)=>{const r=ii(...[e,t,n,s].flat()).slice(0,4);switch(r.length){case 0:case 1:case 2:return[,,...r];default:return r}},methods:{radius:Xi,setRadius:Xi,origin:Ki,setOrigin:Ki,center:Ki,setCenter:Ki,position:Ki,setPosition:Ki,...yi,...Gi,...Oi}}};const tf=e=>e!=null&&typeof e[Symbol.iterator]===Cc;const nf=function(){switch(arguments.length){case 0:return Array.from(arguments);case 1:return tf(arguments[0])&&typeof arguments[0]!==Vc?nf(...arguments[0]):[arguments[0]];default:return Array.from(arguments).map((e=>tf(e)?[...nf(e)]:e))}};const sf=(...e)=>ii(...nf(...e)).slice(0,4);const rf=(e,...t)=>{sf(...t).forEach(((t,n)=>e.setAttribute(ra.line[n],t)));return e};const of={line:{args:sf,methods:{setPoints:rf,...yi,...Gi,...Oi}}};const cf=e=>{const t=e.getAttribute("d");return t==null?"":t};const af=e=>{e.removeAttribute("d");return e};const ff=(e,t,...n)=>{e.setAttribute("d",`${cf(e)}${t}${n.flat().join(" ")}`);return e};const lf=e=>oi(cf(e));const df={addCommand:ff,appendCommand:ff,clear:af,getCommands:lf,get:lf,getD:e=>e.getAttribute("d"),...yi,...Gi,...Oi};Object.keys(ni).forEach((e=>{df[ni[e]]=(t,...n)=>ff(t,e,...n)}));const uf={path:{methods:df}};const mf=(e,t,n)=>{[,,t,n].forEach(((t,n)=>e.setAttribute(ra.rect[n],t)));return e};const gf=(e,t,n)=>{[...ii(...[t,n].flat()).slice(0,2)].forEach(((t,n)=>e.setAttribute(ra.rect[n],t)));return e};const pf=function(e){[0,1].forEach((t=>{if(e[2+t]<0){if(e[0+t]===undefined){e[0+t]=0}e[0+t]+=e[2+t];e[2+t]=-e[2+t]}}));return e};const _f={rect:{args:(e,t,n,s)=>{const r=ii(...[e,t,n,s].flat()).slice(0,4);switch(r.length){case 0:case 1:case 2:case 3:return pf([,,...r]);default:return pf(r)}},methods:{origin:gf,setOrigin:gf,center:gf,setCenter:gf,size:mf,setSize:mf,...yi,...Gi,...Oi}}};const hf={style:{init:e=>{const t=ea().document.createElementNS(ta,"style");t.setAttribute("type","text/css");t.textContent="";t.appendChild(Ka(e));return t},methods:{setTextContent:(e,t)=>{e.textContent="";e.appendChild(Ka(t));return e}}}};const vf={text:{args:(e,t,n)=>ii(...[e,t,n].flat()).slice(0,2),init:(e,t,n,s)=>{const r=ea().document.createElementNS(ta,"text");const o=[e,t,n,s].filter((e=>typeof e===Vc)).shift();r.appendChild(ea().document.createTextNode(o||""));return r},methods:{...yi,...Gi,appendTo:ki,setAttributes:wi}}};const bf=function(){return Array.from(arguments).filter((e=>typeof e===Vc||e instanceof String)).shift()||$i()};const yf=(...e)=>[bf(...e)];const Ef={mask:{args:yf,methods:{...yi,...Gi,...Oi}},clipPath:{args:yf,methods:{...yi,...Gi,...Oi}},symbol:{args:yf,methods:{...yi,...Gi,...Oi}},marker:{args:yf,methods:{size:di,setViewBox:di,...yi,...Gi,...Oi}}};const xf=e=>{const t=e.getAttribute(Rc);return t==null?"":t};const Af=function(){return Array.from(Array(Math.floor(arguments.length/2))).map(((e,t)=>`${arguments[t*2+0]},${arguments[t*2+1]}`)).join(" ")};const Mf=(...e)=>[Af(...ii(...nf(...e)))];const kf=(e,...t)=>{e.setAttribute(Rc,Mf(...t)[0]);return e};const wf=(e,...t)=>{e.setAttribute(Rc,[xf(e),Mf(...t)[0]].filter((e=>e!=="")).join(" "));return e};const Of=function(...e){return e.length===1&&typeof e[0]===Vc?[e[0]]:Mf(...e)};const jf={polyline:{args:Of,methods:{setPoints:kf,addPoint:wf,...yi,...Gi,...Oi}},polygon:{args:Of,methods:{setPoints:kf,addPoint:wf,...yi,...Gi,...Oi}}};const Ff=(e,t,n,s,r,o=false)=>{if(r==null){return""}const c=Fa(s,n);const a=Fa(r,n);const i=[a[0]-c[0],a[1]-c[1]];const f=c[0]*a[1]-c[1]*a[0];const l=c[0]*a[0]+c[1]*a[1];const d=Math.atan2(f,l)>0?0:1;let u=o?`M ${e},${t} l ${c[0]},${c[1]} `:`M ${e+c[0]},${t+c[1]} `;u+=["a ",n,n,0,d,1,i[0],i[1]].join(" ");if(o){u+=" Z"}return u};const Cf=(e,t,n,s,r)=>[Ff(e,t,n,s,r,false)];const Sf={arc:{nodeName:$c,attributes:["d"],args:Cf,methods:{setArc:(e,...t)=>e.setAttribute("d",Cf(...t)),...yi}}};const Pf=[Jc,Hc];const Nf=e=>e.join(",");const Vf=e=>"M"+e.map((e=>e.join(","))).join("L")+"Z";const zf=function(e){let t=[[0,1],[2,3]].map((t=>t.map((t=>e.points[t]||0))));let n=Aa(t[1],t[0]);let s=xa(t[0],Ma(n,.5));const r=wa(n);const o=Pf.map((t=>e[t].visible?(1+e[t].padding)*e[t].height*2.5:0)).reduce(((e,t)=>e+t),0);if(r<o){const e=r===0?[o,0]:Ma(n,o/r);t=[Aa,xa].map((t=>t(s,Ma(e,.5))));n=Aa(t[1],t[0])}let c=[n[1],-n[0]];let a=xa(s,Ma(c,e.bend));const i=t.map((e=>Aa(a,e)));const f=i.map((e=>wa(e)));const l=i.map(((e,t)=>f[t]===0?e:Ma(e,1/f[t])));const d=l.map((e=>Ma(e,-1)));const u=d.map((e=>[e[1],-e[0]]));const m=Pf.map(((t,n)=>e[t].padding?e[t].padding:e.padding?e.padding:0));const g=Pf.map(((t,n)=>e[t].height*(e[t].visible?1:0))).map(((e,t)=>e+m[t]));const p=t.map(((e,t)=>xa(e,Ma(l[t],g[t]))));n=Aa(p[1],p[0]);c=[n[1],-n[0]];s=xa(p[0],Ma(n,.5));a=xa(s,Ma(c,e.bend));const _=p.map(((t,n)=>xa(t,Ma(Aa(a,t),e.pinch))));const h=Pf.map(((t,n)=>[xa(p[n],Ma(d[n],e[t].height)),xa(p[n],Ma(u[n],e[t].width/2)),xa(p[n],Ma(u[n],-e[t].width/2))]));return{line:`M${Nf(p[0])}C${Nf(_[0])},${Nf(_[1])},${Nf(p[1])}`,tail:Vf(h[0]),head:Vf(h[1])}};const Tf=(e,t,n)=>{if(typeof t===Pc){e.options[n].visible=t}else if(typeof t===zc){Object.assign(e.options[n],t);if(t.visible==null){e.options[n].visible=true}}else if(t==null){e.options[n].visible=true}};const $f=(e,t={},n=Hc)=>{const s=e.getElementsByClassName(`${Gc}-${n}`)[0];Object.keys(t).map((e=>({key:e,fn:s[Ei(e)]}))).filter((e=>typeof e.fn===Cc&&e.key!=="class")).forEach((e=>e.fn(t[e.key])));Object.keys(t).filter((e=>e==="class")).forEach((e=>s.classList.add(t[e])))};const Bf=e=>{const t=zf(e.options);Object.keys(t).map((t=>({path:t,element:e.getElementsByClassName(`${Gc}-${t}`)[0]}))).filter((e=>e.element)).map((e=>{e.element.setAttribute("d",t[e.path]);return e})).filter((t=>e.options[t.path])).forEach((t=>t.element.setAttribute("visibility",e.options[t.path].visible?"visible":"hidden")));return e};const Lf=(e,...t)=>{e.options.points=ii(...nf(...t)).slice(0,4);return Bf(e)};const If=(e,t)=>{e.options.bend=t;return Bf(e)};const Uf=(e,t)=>{e.options.pinch=t;return Bf(e)};const Rf=(e,t)=>{e.options.padding=t;return Bf(e)};const qf=(e,t)=>{Tf(e,t,Hc);$f(e,t,Hc);return Bf(e)};const Df=(e,t)=>{Tf(e,t,Jc);$f(e,t,Jc);return Bf(e)};const Wf=e=>e.getElementsByClassName(`${Gc}-line`)[0];const Gf=e=>e.getElementsByClassName(`${Gc}-${Hc}`)[0];const Hf=e=>e.getElementsByClassName(`${Gc}-${Jc}`)[0];const Jf={setPoints:Lf,points:Lf,bend:If,pinch:Uf,padding:Rf,head:qf,tail:Df,getLine:Wf,getHead:Gf,getTail:Hf,...yi};const Qf=()=>({visible:false,width:8,height:10,padding:0});const Zf=()=>({head:Qf(),tail:Qf(),bend:0,padding:0,pinch:.618,points:[]});const Yf=Object.keys(Zf());const Xf=(...e)=>{for(let t=0;t<e.length;t+=1){if(typeof e[t]!==zc){continue}const n=Object.keys(e[t]);for(let s=0;s<n.length;s+=1){if(Yf.includes(n[s])){return e[t]}}}return undefined};const Kf=function(e,...t){e.classList.add(Gc);const n=["line",Jc,Hc].map((t=>{const n=ea().document.createElementNS(ta,$c);n.className=`${Gc}-${t}`;e.appendChild(n);return n}));n[0].setAttribute(Lc,"fill:none;");n[1].setAttribute(qc,Wc);n[2].setAttribute(qc,Wc);e.options=Zf();Jf.setPoints(e,...t);const s=Xf(...t);if(s){Object.keys(s).filter((e=>Jf[e])).forEach((t=>Jf[t](e,s[t])))}return e};const el={arrow:{nodeName:"g",attributes:[],args:()=>[],methods:Jf,init:Kf}};const tl=(e=[],t=0,n=.5)=>{const s=[e[0]||0,e[1]||0];const r=[e[2]||0,e[3]||0];const o=Aa(r,s);const c=xa(s,Ma(o,.5));const a=[o[1],-o[0]];const i=xa(c,Ma(a,t));const f=xa(s,Ma(Aa(i,s),n));const l=xa(r,Ma(Aa(i,r),n));return`M${s[0]},${s[1]}C${f[0]},${f[1]} ${l[0]},${l[1]} ${r[0]},${r[1]}`};const nl=(...e)=>[tl(ii(...e.flat()))];const sl=e=>e.slice(1).split(/[, ]+/).map((e=>parseFloat(e)));const rl=e=>e.match(/[Cc][(0-9), .-]+/).map((e=>sl(e)));const ol=e=>e.match(/[Mm][(0-9), .-]+/).map((e=>sl(e)));const cl=e=>{const t=ol(e).shift();const n=rl(e).shift();const s=t?[t[t.length-2],t[t.length-1]]:[0,0];const r=n?[n[n.length-2],n[n.length-1]]:[0,0];return[...s,...r]};const al=(e,...t)=>{const n=ii(...t.flat()).slice(0,4);e.setAttribute("d",tl(n,e._bend,e._pinch));return e};const il=(e,t)=>{e._bend=t;return al(e,...cl(e.getAttribute("d")))};const fl=(e,t)=>{e._pinch=t;return al(e,...cl(e.getAttribute("d")))};const ll={setPoints:al,bend:il,pinch:fl,...yi};const dl={curve:{nodeName:$c,attributes:["d"],args:nl,methods:ll}};const ul=(e,t,n,s,r)=>[Ff(e,t,n,s,r,true)];const ml={wedge:{nodeName:$c,args:ul,attributes:["d"],methods:{setArc:(e,...t)=>e.setAttribute("d",ul(...t)),...yi}}};const gl={};const pl=(e,...t)=>{const n=ea().document.createElementNS(ta,"g");gl.ear.convert.foldToSvg.render(e,n,...t);return n};const _l={...yi,...Gi,...Oi};const hl={origami:{nodeName:"g",init:pl,args:()=>[],methods:_l}};const vl={...Di,...Hi,...Yi,...ef,...of,...uf,..._f,...hf,...vf,...Ef,...jf,...Sf,...el,...dl,...ml,...hl};const bl=(...e)=>e;const yl=(e,t,...n)=>{const s=vl[e]&&vl[e].nodeName?vl[e].nodeName:e;const{init:r,args:o,methods:c}=vl[e]||{};const a=ra[s]||[];const i=ia[s]||[];const f=r?r(...n):ea().document.createElementNS(ta,s);if(t){t.appendChild(f)}const l=o||bl;l(...n).forEach(((e,t)=>{f.setAttribute(ra[s][t],e)}));if(c){Object.keys(c).forEach((e=>Object.defineProperty(f,e,{value:function(){return c[e](f,...arguments)}})))}a.forEach((e=>{const t=Ei(e);if(f[t]){return}Object.defineProperty(f,t,{value:function(){f.setAttribute(e,...arguments);return f}})}));i.forEach((e=>{if(f[e]){return}const t=function(){return yl(e,f,...arguments)};Object.defineProperty(f,e,{value:t})}));return f};const El=(...e)=>{const t=yl(Tc,null,...e);const n=()=>e.filter((e=>typeof e===Cc)).forEach((e=>e.call(t,t)));if(ea().document.readyState==="loading"){ea().document.addEventListener("DOMContentLoaded",n)}else{n()}return t};Object.assign(El,{NS:ta,nodes_attributes:ra,nodes_children:ia,extensions:vl,...Ea,...pi});fa.forEach((e=>{El[e]=(...t)=>yl(e,null,...t)}));Object.defineProperty(El,"window",{enumerable:false,set:Kc});const xl=e=>[e.min,e.span].flatMap((e=>[e[0],e[1]])).join(" ");const Al=e=>{const t=lc(e);return t===undefined?"":xl(t)};const Ml=({vertices_coords:e,edges_vertices:t,edges_length:n},s=.1)=>{if(!e||!t){return undefined}if(!n){n=Hs({vertices_coords:e,edges_vertices:t})}const r=n.slice().sort(((e,t)=>e-t));const o=Math.max(0,Math.min(Math.floor(r.length*s),r.length-1));return r[o]};const kl={min:[0,0],span:[1,1]};const wl=1/100;const Ol=(e,{vmax:t}={})=>{if(!t){const n=lc(e)||kl;t=Math.max(...n.span)}const n=Ml(e,.1);return n?n*wl*10:t*wl};const jl=(e,t={})=>{const n=El.g();if(!e||!e.vertices_coords){return n}e.vertices_coords.map((e=>El.circle(e[0],e[1],.01))).forEach((e=>n.appendChild(e)));n.setAttributeNS(null,"fill","none");Object.keys(t).forEach((e=>n.setAttributeNS(null,e,t[e])));return n};const Fl={};const Cl={stroke:"black"};const Sl={};const Pl={B:{stroke:"black"},b:{stroke:"black"},M:{stroke:"crimson"},m:{stroke:"crimson"},V:{stroke:"royalblue"},v:{stroke:"royalblue"},F:{stroke:"lightgray"},f:{stroke:"lightgray"},J:{stroke:"gold"},j:{stroke:"gold"},C:{stroke:"limegreen"},c:{stroke:"limegreen"},U:{stroke:"orchid"},u:{stroke:"orchid"}};const Nl=(e,t,n)=>e.setAttribute(`data-${t}`,n);const Vl=e=>{const t={u:[],c:[],j:[],f:[],v:[],m:[],b:[]};const n=e["edges_assignment"].map((e=>e.toLowerCase()));e["edges_vertices"].map(((e,t)=>n[t]||"u")).forEach(((e,n)=>t[e].push(n)));return t};const zl=({vertices_coords:e,edges_vertices:t})=>{if(!e||!t){return[]}return t.map((t=>t.map((t=>e[t]))))};const Tl=e=>`M${e[0][0]} ${e[0][1]}L${e[1][0]} ${e[1][1]}`;const $l=e=>zl(e).map((e=>Tl(e))).join("");const Bl=({vertices_coords:e,edges_vertices:t,edges_assignment:n})=>{if(!e||!t){return{}}if(!n){return{u:$l({vertices_coords:e,edges_vertices:t})}}const s=Vl({vertices_coords:e,edges_vertices:t,edges_assignment:n});Object.keys(s).forEach((n=>{s[n]=$l({vertices_coords:e,edges_vertices:s[n].map((e=>t[e]))})}));Object.keys(s).forEach((e=>{if(s[e]===""){delete s[e]}}));return s};const Ll=({vertices_coords:e,edges_vertices:t,edges_assignment:n})=>{const s=Bl({vertices_coords:e,edges_vertices:t,edges_assignment:n});Object.keys(s).forEach((e=>{const t=El.path(s[e]);Wa(t,wt[e]);s[e]=t}));return s};const Il=(e,t={})=>Object.keys(t).forEach((n=>e.setAttributeNS(null,n,t[n])));const Ul=(e,t={})=>{const n=El.g();if(!e){return n}const s=Ut(e);const r=Ll(e);Object.keys(r).forEach((e=>{Wa(r[e],wt[e]);Il(r[e],s?Sl[e]:Pl[e]);Il(r[e],t[e]);Il(r[e],t[wt[e]]);n.appendChild(r[e]);Object.defineProperty(n,wt[e],{get:()=>r[e]})}));Object.keys(r).forEach((e=>Nl(r[e],"assignment",e)));Object.keys(r).forEach((e=>Nl(r[e],"foldAngle",Ot[e])));Il(n,s?Fl:Cl);Il(n,t.stroke?{stroke:t.stroke}:{});return n};const Rl=e=>Math.abs(e)/180;const ql=(e,t={})=>{const n=El.g();if(!e){return n}const s=Ut(e);const r=(e.edges_assignment?e.edges_assignment:Rs(e)).map((e=>e.toLowerCase()));const o={};["b","m","v","f","j","c","u"].forEach((e=>{const r=El.g();n.appendChild(r);Wa(r,wt[e]);Il(r,s?Sl[e]:Pl[e]);Il(r,t[wt[e]]);Object.defineProperty(n,wt[e],{get:()=>r});o[e]=r}));const c=e.edges_vertices.map((t=>t.map((t=>e.vertices_coords[t])))).map((e=>El.line(e[0][0],e[0][1],e[1][0],e[1][1])));if(e.edges_foldAngle){e.edges_foldAngle.forEach(((e,t)=>Nl(c[t],"foldAngle",e)))}if(e.edges_assignment){e.edges_assignment.forEach(((e,t)=>Nl(c[t],"assignment",e)))}if(e.edges_foldAngle){c.forEach(((t,n)=>{const s=e.edges_foldAngle[n];if(s===0||s===180||s===-180){return}t.setAttributeNS(null,"opacity",Rl(s))}))}c.forEach(((e,t)=>o[r[t]].appendChild(e)));Il(n,s?Fl:Cl);Il(n,t.stroke?{stroke:t.stroke}:{});return n};const Dl=(e,t)=>Nt(e)?Ul(e,t):ql(e,t);const Wl=e=>e.map((e=>e[0]*e[4]-e[1]*e[3])).map((e=>e>=0));const Gl=e=>e.map((e=>e[0]*e[3]-e[1]*e[2])).map((e=>e>=0));const Hl=({vertices_coords:e,faces_vertices:t})=>t.map((t=>t.map((t=>e[t])).map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>(e[1][0]-e[0][0])*(e[1][1]+e[0][1]))).reduce(((e,t)=>e+t),0))).map((e=>e<0));const Jl=Object.freeze({__proto__:null,makeFacesWinding:Hl,makeFacesWindingFromMatrix:Wl,makeFacesWindingFromMatrix2:Gl});const Ql=e=>{const t=cn(e.flat());const n=[];t.forEach((e=>{n[e]=[]}));e.forEach((e=>{n[e[1]].push(e[0])}));const s=[];const r={};const o=e=>{if(r[e]){return}r[e]=true;n[e].forEach(o);s.push(e)};t.forEach(o);return s};const Zl=Object.freeze({__proto__:null,topologicalSort:Ql});const Yl=e=>{const t=[];const n=(s,r)=>{if(t[s]!==undefined){return 0}t[s]=r;e[s].forEach((e=>n(e,r)));return 1};for(let t=0,s=0;t<e.length;t+=1){if(!(t in e)){continue}s+=n(t,s)}return t};const Xl=(e,t)=>{const n={};t.forEach((e=>{n[e]=true}));return e.filter((e=>n[e[0]]&&n[e[1]]))};const Kl=({vertices_coords:e,faces_vertices:t,faceOrders:n,faces_normal:s})=>{if(!n||!n.length){return[]}if(!s){s=Es({vertices_coords:e,faces_vertices:t})}const r=n.flatMap((e=>[e[0],e[1]]));const o=cn(r);const c=[];o.forEach((e=>{c[e]=F(s[e],s[o[0]])>0}));const a=n.map((e=>e[2]===-1^!c[e[1]]?[e[0],e[1]]:[e[1],e[0]]));return Ql(a)};const ed=({vertices_coords:e,faces_vertices:t,faceOrders:n})=>{const s=Es({vertices_coords:e,faces_vertices:t});const r=Yl(Fs({edges_vertices:n.map((e=>[e[0],e[1]]))}));const o=pr(r).map((e=>e.constructor===Array?e:[e]));const c=o.map((e=>Xl(n,e))).map((e=>Kl({faceOrders:e,faces_normal:s})));const a=o.map((e=>s[e[0]]));const i=[];c.forEach(((e,t)=>e.forEach(((e,n)=>{i[e]={vector:a[t],layer:n}}))));return i};const td=({faces_layer:e})=>{const t=[];const n=pr(e);n.forEach(((e,n)=>{t[e]={vector:[0,0,1],layer:n}}));return t};const nd=({vertices_coords:e,faces_vertices:t,faceOrders:n,faces_normal:s})=>{if(!s){s=Es({vertices_coords:e,faces_vertices:t})}return pr(Kl({faceOrders:n,faces_normal:s}))};const sd=Object.freeze({__proto__:null,faceOrdersSubset:Xl,linearizeFaceOrders:Kl,makeFacesLayer:nd,nudgeFacesWithFaceOrders:ed,nudgeFacesWithFacesLayer:td});const rd={back:{fill:"white"},front:{fill:"#ddd"}};const od={back:{opacity:.1},front:{opacity:.1}};const cd={};const ad={stroke:"black","stroke-linejoin":"bevel"};const id={stroke:"none",fill:"black","stroke-linejoin":"bevel"};const fd={fill:"none"};const ld=(e,t)=>{const n=e.faces_vertices.map(((e,t)=>t)).filter((e=>t[e]==null));return n.concat(pr(t))};const dd=e=>{if(e.faceOrders){return ld(e,pr(Kl(e)))}if(e.faces_layer){return ld(e,e.faces_layer)}return e.faces_vertices.map(((e,t)=>t)).filter((()=>true))};const ud=(e,t,n)=>e.setAttribute(`data-${t}`,n);const md=(e,t={})=>Object.keys(t).forEach((n=>e.setAttributeNS(null,n,t[n])));const gd=(e,t,n,s)=>{const r=Ut(e);const o=!!(e.faceOrders||e.faces_layer);const c=[["front"],["back"]];const a=Hl(e);a.map((e=>e?c[0]:c[1])).forEach(((e,n)=>{Wa(t[n],e);ud(t[n],"side",e);md(t[n],r?o?rd[e]:od[e]:cd[e]);md(t[n],s[e])}));dd(e).forEach((e=>n.appendChild(t[e])));Object.defineProperty(n,"front",{get:()=>t.filter(((e,t)=>a[t]))});Object.defineProperty(n,"back",{get:()=>t.filter(((e,t)=>!a[t]))});md(n,r?o?ad:id:fd);return n};const pd=(e,t={})=>{const n=El.g();if(!e||!e.vertices_coords||!e.faces_vertices){return n}const s=e.faces_vertices.map((t=>t.map((t=>[0,1].map((n=>e.vertices_coords[t][n])))))).map((e=>El.polygon(e)));s.forEach(((e,t)=>e.setAttributeNS(null,"index",t)));n.setAttributeNS(null,"fill","white");return gd(e,s,n,t)};const _d=function(e,t={}){const n=El.g();if(!e||"faces_edges"in e===false||"edges_vertices"in e===false||"vertices_coords"in e===false){return n}const s=e["faces_edges"].map((t=>t.map((t=>e["edges_vertices"][t])).map(((e,t,n)=>{const s=n[(t+1)%n.length];return e[1]===s[0]||e[1]===s[1]?e[0]:e[1]})).map((t=>[0,1].map((n=>e["vertices_coords"][t][n])))))).map((e=>El.polygon(e)));s.forEach(((e,t)=>e.setAttributeNS(null,"index",t)));n.setAttributeNS(null,"fill","white");return gd(e,s,n,t)};const hd=(e,t)=>{if(e&&e["faces_vertices"]){return pd(e,t)}if(e&&e["faces_edges"]){return _d(e,t)}return El.g()};const vd={fill:"none"};const bd={stroke:"black",fill:"white"};const yd=(e,t={})=>Object.keys(t).forEach((n=>e.setAttributeNS(null,n,t[n])));const Ed=(e,t={})=>{const n=El.g();if(!e){return n}const s=mc(e).polygon;if(!s.length){return n}const r=El.polygon(s);Wa(r,"boundary");n.appendChild(r);yd(n,Ut(e)?vd:bd);Object.keys(t).forEach((e=>n.setAttributeNS(null,e,t[e])));return n};const xd={vertices:jl,edges:Dl,faces:hd,boundaries:Ed,edgesPaths:Ul,edgesLines:ql,facesVerticesPolygon:pd,facesEdgesPolygon:_d};const Ad=1/50;const Md={min:[0,0],span:[1,1]};const kd=["boundaries","faces","edges","vertices"];const wd=(e,t)=>{for(let n=0;n<e.childNodes.length;n+=1){e.childNodes[n].setAttributeNS(null,"r",t)}};const Od=(e,t,n,s)=>{const r=t[3]&&t[3].childNodes.length;if(!(s.strokeWidth||s.viewBox||r)){return}const o=lc(n)||Md;const c=Math.max(...o.span);const a=qa(e,"svg");if(a&&s.viewBox){const e=xl(o);a.setAttributeNS(null,"viewBox",e)}if(a&&s.padding){const e=a.getAttribute("viewBox");if(e!=null){const t=s.padding*c;const n=e.split(" ").map((e=>parseFloat(e)));const r=[-t,-t,t*2,t*2].map(((e,t)=>n[t]+e)).join(" ");a.setAttributeNS(null,"viewBox",r)}}if(s.strokeWidth||s["stroke-width"]){const t=s.strokeWidth?s.strokeWidth:s["stroke-width"];const r=typeof t==="number"?c*t:Ol(n);e.setAttributeNS(null,"stroke-width",r)}if(r){const e=s.vertices&&s.vertices.radius!=null?s.vertices.radius:s.radius;const n=typeof e==="string"?parseFloat(e):e;const r=typeof n==="number"&&!Number.isNaN(n)?c*n:c*Ad;wd(t[3],r)}};const jd=(e,t={})=>kd.map((n=>t[n]===false?El.g():xd[n](e,t))).map(((e,t)=>{Wa(e,kd[t]);return e}));const Fd=(e,t,n={})=>{if(!Ut(e)){if(n.faces===undefined){n.faces=false}}const s=jd(e,n);s.filter((e=>e.childNodes.length>0)).forEach((e=>t.appendChild(e)));Od(t,s,e,n);Wa(t,...[e.file_classes||[],e.frame_classes||[]].flat());return t};const Cd=(e,t={})=>{const n=Fd(typeof e==="string"?JSON.parse(e):e,El.svg(),{viewBox:true,strokeWidth:true,...t});return t&&t.string?(new(c().XMLSerializer)).serializeToString(n):n};Object.assign(Cd,{...xd,render:Fd,getViewBox:Al,getStrokeWidth:Ol,boundingBoxToViewBox:xl});const Sd=e=>{const t=["file_title","file_author","file_description","frame_title","frame_author","frame_description"];return t.filter((t=>e[t])).map((t=>`# ${t.split("_")[1]}: ${e[t]}`)).join("\n")};const Pd=e=>{const t=typeof e==="string"?JSON.parse(e):e;const n=Sd(t);const s=(t.vertices_coords||[]).map((e=>e.join(" "))).map((e=>`v ${e}`)).join("\n");const r=(t.faces_vertices||[]).map((e=>e.map((e=>e+1)).join(" "))).map((e=>`f ${e}`)).join("\n");const o=[n,s,r].filter((e=>e!=="")).join("\n");return`${o}\n`};const Nd={};Nd.prototype=Object.create(Object.prototype);Nd.prototype.constructor=Nd;Object.entries({clean:br,validate:fc,populate:vo,subgraph:oc,boundary:mc,boundingBox:lc,nearest:qr,splitEdge:jo,splitFace:sc,invertAssignments:Dt,svg:Cd,obj:Pd,...Mr,...Kt}).forEach((([e,t])=>{Nd.prototype[e]=function(){return t(this,...arguments)}}));Nd.prototype.clone=function(){return Object.assign(Object.create(Object.getPrototypeOf(this)),yr(this))};Nd.prototype.folded=function(){const e=this.faces_matrix2?Ec(this,this.faces_matrix2):wc(this,...arguments);return{...this,vertices_coords:e,frame_classes:["foldedForm"]}};Nd.prototype.flatFolded=function(){const e=this.faces_matrix2?Ec(this,this.faces_matrix2):Oc(this,...arguments);return{...this,vertices_coords:e,frame_classes:["foldedForm"]}};const Vd=(e,t,n,s)=>{t.forEach((t=>{e.edges_assignment[t]=n;e.edges_foldAngle[t]=s}));return t};Nd.prototype.setValley=function(e=[],t=180){return Vd(this,e,"V",Math.abs(t))};Nd.prototype.setMountain=function(e=[],t=-180){return Vd(this,e,"M",-Math.abs(t))};Nd.prototype.setFlat=function(e=[]){return Vd(this,e,"F",0)};Nd.prototype.setUnassigned=function(e=[]){return Vd(this,e,"U",0)};Nd.prototype.setCut=function(e=[]){return Vd(this,e,"C",0)};const zd=Nd.prototype;const Td=({vector:e,origin:t},{min:n,max:s,span:r})=>Ud();const $d=(e,t,n,s,r=ut,o=a)=>{const c=B(v(e),v(n));if(Math.abs(c)<o){return undefined}const i=B(e,n);const f=-i;const l=O(s,t);const d=q(l);const u=B(l,n)/i;const m=B(d,e)/f;if(r(m,o/g(n))){return u}return undefined};const Bd=(e,t,n)=>M(t,E(e,n));const Ld=(e,t,n,s,r)=>e.map(((e,t,n)=>[O(n[(t+1)%n.length],e),e])).map((e=>$d(t,n,e[0],e[1],s,r))).filter((e=>e!==undefined)).sort(((e,t)=>e-t));const Id=(e,t,n)=>{let s=0;let r=e.length-1;while(s<r){if(t(e[s+1]-e[s],n)){break}s+=1}while(r>s){if(t(e[r]-e[r-1],n)){break}r-=1}if(s>=r){return undefined}return[e[s],e[r]]};const Ud=(e,{vector:t,origin:n},s=ct,r=it,o=a)=>{const c=Ld(e,t,n,ut,o);if(c.length<2){return undefined}const i=o*2/g(t);const f=Id(c,s,i);if(f===undefined){return undefined}const l=e=>{if(r(e)){return e}return e<.5?0:1};const d=f.map(l);if(Math.abs(d[0]-d[1])<o*2/g(t)){return undefined}const u=Bd(t,n,(d[0]+d[1])/2);return Vr(e,u,s,o)?d.map((e=>Bd(t,n,e))):undefined};const Rd=(e,t,n=a)=>{const s=(e,t,s)=>(s[0]-t[0])*(e[1]-t[1])>(s[1]-t[1])*(e[0]-t[0])+n;const r=(e,t,n,s)=>{const r=O(e,t);const o=O(s,n);const c=B(e,t);const a=B(s,n);const i=1/B(r,o);return E(O(E(o,c),E(r,a)),i)};let o=e;let c=t[t.length-1];for(let e=0;e<t.length;e+=1){const n=t[e];const a=o;o=[];let i=a[a.length-1];for(let e=0;e<a.length;e+=1){const t=a[e];if(s(t,c,n)){if(!s(i,c,n)){o.push(r(c,n,t,i))}o.push(t)}else if(s(i,c,n)){o.push(r(c,n,t,i))}i=t}c=n}return o.length===0?undefined:o};const qd=Object.freeze({__proto__:null,clipLineConvexPolygon:Ud,clipLineInBoundingBox:Td,clipPolygonPolygon:Rd});const Dd=(e,{vector:t,origin:n},s)=>{if(e.length<2){return e}const r=e.map((e=>O(e[1],e[0]))).map((e=>C(e,t)<s));e.map(((e,t)=>t)).filter((e=>r[e])).forEach((t=>{e[t]=[e[t][1],e[t][0]]}));const o=v(t);const c=e.map((e=>e.map((e=>C(O(e,n),o))))).sort(((e,t)=>e[0]-t[0]));const a=[[c[0][0],c[0][1]]];for(let e=1;e<c.length;e+=1){const t=c[e];if(t[0]-s<a[a.length-1][1]+s){a[a.length-1][1]=Math.max(t[1],a[a.length-1][1])}else{a.push([t])}}return a.map((e=>e.map((e=>M(n,E(o,e))))))};const Wd=(e,t,n,s=it,r=a)=>{const o=t.map((t=>e.faces_vertices[t].map((t=>e.vertices_coords[t])))).map((e=>Ud(e,n,ct,s,r))).filter((e=>e!==undefined));return Dd(o,n,r)};const Gd=(e,t,n=a)=>{const s=Xo(e,t,n);return Wd(e,s,t,it,n)};const Hd=(e,t,n=a)=>{const s=Ko(e,t,n);return Wd(e,s,t,lt,n)};const Jd=(e,t,n=a)=>{const s=O(t[1],t[0]);const r=t[0];const o=ec(e,t,n);return Wd(e,o,{vector:s,origin:r},ut,n)};const Qd=function(e,t){const n=mc(e).vertices.map((t=>e.vertices_coords[t]));const s=t.vector?t.vector:O(t[1],t[0]);const r=t.origin?t.origin:t[0];const o=t.domain?t.domain:it;return Ud(n,{vector:s,origin:r},ct,o)};const Zd=Object.freeze({__proto__:null,clip:Qd,clipLine:Gd,clipRay:Hd,clipSegment:Jd});const Yd=({vertices_coords:e},{vector:t,origin:n},s=a)=>{const r=h(t);const o=e=>{const t=w(e,n);const o=m(t);if(Math.abs(o)<s){return true}const c=t.map((e=>e/o));const a=Math.abs(F(c,r));return Math.abs(1-a)<s};return e.map(o).map(((e,t)=>({a:e,i:t}))).filter((e=>e.a)).map((e=>e.i))};const Xd=Object.freeze({__proto__:null,getVerticesCollinearToLine:Yd});const Kd=({vertices_coords:e,edges_vertices:t,vertices_edges:n},{vector:s,origin:r},o=a)=>{if(!n){n=Ms({edges_vertices:t})}const c=Yd({vertices_coords:e},{vector:s,origin:r},o);const i=t.map((()=>0));c.forEach((e=>n[e].forEach((e=>{i[e]+=1}))));return i.map(((e,t)=>({count:e,i:t}))).filter((e=>e.count===2)).map((e=>e.i))};const eu=({vertices_coords:e,edges_vertices:t},{min:n,max:s},r=a)=>{const o=Ws({vertices_coords:e,edges_vertices:t});const c=n.map((e=>e-r));const i=s.map((e=>e+r));return t.map(((e,t)=>t)).filter((e=>!(o[e][0][0]<c[0]&&o[e][1][0]<c[0]))).filter((e=>!(o[e][0][0]>i[0]&&o[e][1][0]>i[0]))).filter((e=>!(o[e][0][1]<c[1]&&o[e][1][1]<c[1]))).filter((e=>!(o[e][0][1]>i[1]&&o[e][1][1]>i[1])))};const tu=({vertices_coords:e,edges_vertices:t},n,s,r=a)=>{const o=tt([n,s]);const c=O(s,n);const i={vector:c,origin:n};const f=eu({vertices_coords:e,edges_vertices:t},o,r);const l=[];f.forEach((n=>{const s=t[n].map((t=>e[t]));const o=O(s[1],s[0]);const c={vector:o,origin:s[0]};const a=Lo(i,c,ut,ut,r);if(!a){return}l[n]=a}));return l};const nu=({vertices_coords:e,edges_vertices:t},{vector:n,origin:s},r=a,o=ut)=>t.map((t=>{const c=t.map((t=>e[t]));const a=O(c[1],c[0]);const i={vector:a,origin:c[0]};return Lo({vector:n,origin:s},i,it,o,r)}));const su=Object.freeze({__proto__:null,getEdgesCollinearToLine:Kd,getEdgesLineIntersection:nu,getEdgesRectOverlap:eu,getEdgesSegmentIntersection:tu});const ru=(e,t,n=a)=>{if(!e.vertices_coords){e.vertices_coords=[]}if(typeof t[0]==="number"){t=[t]}const s=t.map((t=>e.vertices_coords.map((e=>I(e,t)<n)).map(((e,t)=>e?t:undefined)).filter((e=>e!==undefined)).shift()));let r=e.vertices_coords.length;const o=t.filter(((e,t)=>s[t]===undefined));e.vertices_coords.push(...o);return s.map((e=>e===undefined?r++:e))};const ou=(e,t,n)=>{const s=Array.from(Array(t.length-1)).map(((e,n)=>[t[n],t[n+1]]));const r=s.map((e=>e.join(" "))).map((e=>n[e]===undefined));const o=s.filter(((e,t)=>r[t]));const c=Array.from(Array(o.length)).map(((t,n)=>e.edges_vertices.length+n));c.forEach(((t,n)=>{e.edges_vertices[t]=o[n]}));if(e.edges_assignment){c.forEach((t=>{e.edges_assignment[t]="U"}))}if(e.edges_foldAngle){c.forEach((t=>{e.edges_foldAngle[t]=0}))}for(let n=0;n<t.length;n+=1){const s=t[n];const o=r[n-1]?t[n-1]:undefined;const c=r[n]?t[n+1]:undefined;const a=[o,c].filter((e=>e!==undefined));const i=e.vertices_vertices[s]?e.vertices_vertices[s]:[];const f=i.concat(a);e.vertices_vertices[s]=vs(e,f,t[n])}const a=Ps(e);for(let n=0;n<t.length;n+=1){const s=t[n];e.vertices_edges[s]=e.vertices_vertices[s].map((e=>a[`${s} ${e}`]))}t.map((t=>e.vertices_vertices[t].length===1?[l]:Jn(e.vertices_vertices[t].map((n=>O(e.vertices_coords[n],e.vertices_coords[t])))))).forEach(((n,s)=>{e.vertices_sectors[t[s]]=n}));return c};const cu=(e,t,n,s=a)=>{if(!e.vertices_sectors){e.vertices_sectors=Ts(e)}const r=[t,n].map((e=>[e[0],e[1]]));const o=O(r[1],r[0]);const c=tu(e,r[0],r[1],s);const i=c.map(((e,t)=>t)).filter(it);const f={};i.forEach((t=>e.edges_faces[t].forEach((e=>{f[e]=true}))));const l=Object.keys(f).map((e=>parseInt(e,10))).sort(((e,t)=>e-t));const d=i.reverse().map((t=>jo(e,t,c[t],s)));const u=d.map((e=>e.vertex));const m=ru(e,r,s);const g={};u.forEach((e=>{g[e]=true}));m.forEach((e=>{g[e]=true}));const p=Object.keys(g).map((e=>parseInt(e,10)));const _=bs(e,p,o);const h=Ps(e);const v=ou(e,_,h);v.forEach((t=>{const n=e.edges_vertices[t];h[`${n[0]} ${n[1]}`]=t;h[`${n[1]} ${n[0]}`]=t}));const b=_.map((t=>e.vertices_vertices[t].map((e=>[[e,t],[t,e]])))).reduce(((e,t)=>e.concat(t)),[]).reduce(((e,t)=>e.concat(t)),[]);const y={};const E=b.map((t=>ts(e,t[0],t[1],y))).filter((e=>e!==undefined));const x=ss(E);xn(e,"faces",l);const A=x.map(((t,n)=>e.faces_vertices.length+n));if(e.faces_vertices){A.forEach(((t,n)=>{e.faces_vertices[t]=x[n].vertices}))}if(e.faces_edges){A.forEach(((t,n)=>{e.faces_edges[t]=x[n].edges.map((e=>h[e]))}))}if(e.faces_angles){A.forEach(((t,n)=>{e.faces_angles[t]=x[n].faces_angles}))}if(e.vertices_faces){e.vertices_faces=Ss(e)}if(e.edges_faces){e.edges_faces=Bs(e)}if(e.faces_faces){e.faces_faces=Xs(e)}if(e.vertices_coords.length!==e.vertices_vertices.length||e.vertices_coords.length!==e.vertices_edges.length||e.vertices_coords.length!==e.vertices_faces.length){console.warn("vertices mismatch",JSON.parse(JSON.stringify(e)))}if(e.edges_vertices.length!==e.edges_faces.length||e.edges_vertices.length!==e.edges_assignment.length){console.warn("edges mismatch",JSON.parse(JSON.stringify(e)))}if(e.faces_vertices.length!==e.faces_edges.length||e.faces_vertices.length!==e.faces_faces.length){console.warn("faces mismatch",JSON.parse(JSON.stringify(e)))}return v};const au=({vertices_vertices:e},t)=>{const n=[t[1],t[0]];t.map(((t,s)=>e[t].indexOf(n[s]))).forEach(((n,s)=>e[t[s]].splice(n,1)))};const iu=({vertices_edges:e},t,n)=>{n.map(((n,s)=>e[n].indexOf(t))).forEach(((t,s)=>e[n[s]].splice(t,1)))};const fu=(e,t,n,s)=>{const r=t.map((t=>e.faces_edges[t].indexOf(n)));const o=[];t.forEach(((t,n)=>e.faces_vertices[t].forEach(((e,t,r)=>{const c=r[(t+1)%r.length];if(e===s[0]&&c===s[1]||e===s[1]&&c===s[0]){o[n]=t}}))));if(o[0]===undefined||o[1]===undefined){console.warn("removePlanarEdge error joining faces")}const c=t.map((t=>e.faces_edges[t].length));const a=t.map((t=>e.faces_vertices[t].length));const i=c.map((e=>e-1));const f=a.map((e=>e-1));const l=r.map(((e,t)=>(e+1)%c[t]));const d=o.map(((e,t)=>(e+1)%a[t]));const u=t.map(((t,n)=>Array.from(Array(i[n])).map(((e,t)=>(l[n]+t)%c[n])).map((n=>e.faces_edges[t][n]))));const m=t.map(((t,n)=>Array.from(Array(f[n])).map(((e,t)=>(d[n]+t)%a[n])).map((n=>e.faces_vertices[t][n]))));const g=t.map((t=>e.faces_faces[t])).reduce(((e,t)=>e.concat(t)),[]).filter((e=>e!==t[0]&&e!==t[1]));return{vertices:m[0].concat(m[1]),edges:u[0].concat(u[1]),faces:g}};const lu=(e,t)=>{const n=[...e.edges_vertices[t]].sort(((e,t)=>t-e));const s=[...e.edges_faces[t]];au(e,n);iu(e,t,n);const r=n.map((t=>e.vertices_vertices[t].length===0));const o=n.filter(((e,t)=>r[t]));if(s.length===2&&s[0]!==s[1]){const r=e.faces_vertices.length;const o=fu(e,s,t,n);e.faces_vertices.push(o.vertices);e.faces_edges.push(o.edges);e.faces_faces.push(o.faces);e.vertices_faces.forEach(((t,n)=>{let o=false;t.forEach(((c,a)=>{if(c===s[0]||c===s[1]){e.vertices_faces[n][a]=r;const s=o?[n,1]:[n,1,r];t.splice(...s);o=true}}))}));e.edges_faces.forEach(((t,n)=>t.forEach(((t,o)=>{if(t===s[0]||t===s[1]){e.edges_faces[n][o]=r}}))));e.faces_faces.forEach(((t,n)=>t.forEach(((t,o)=>{if(t===s[0]||t===s[1]){e.faces_faces[n][o]=r}}))));e.faces_vertices.forEach((t=>t.forEach((t=>{if(t===undefined){console.log("FOUND ONE before remove",e.faces_vertices)}}))));xn(e,"faces",s)}if(s.length===2&&s[0]===s[1]&&o.length){const n=s[0];e.faces_vertices[n]=e.faces_vertices[n].filter((e=>!o.includes(e))).filter(((e,t,n)=>e!==n[(t+1)%n.length]));e.faces_edges[n]=e.faces_edges[n].filter((e=>e!==t))}xn(e,"edges",[t]);xn(e,"vertices",o)};const du=(e,t)=>{const n=e.vertices_edges[t];const s=cn(e.vertices_faces[t].filter((e=>e!=null)));if(n.length!==2||s.length>2){console.warn("cannot remove non 2-degree vertex yet (e,f)",n,s);return}const r=ro(e,t,n);const o=r.slice().reverse();n.sort(((e,t)=>e-t));r.forEach((t=>{const s=e.vertices_edges[t].indexOf(n[1]);if(s===-1){return}e.vertices_edges[t][s]=n[0]}));r.forEach(((n,s)=>{const r=e.vertices_vertices[n].indexOf(t);if(r===-1){console.warn("removePlanarVertex unknown vertex issue");return}e.vertices_vertices[n][r]=o[s]}));e.edges_vertices[n[0]]=[...r];s.forEach((n=>{const s=e.faces_vertices[n].indexOf(t);if(s===-1){console.warn("removePlanarVertex unknown face_vertex issue");return}e.faces_vertices[n].splice(s,1)}));s.forEach((t=>{const s=e.faces_edges[t].indexOf(n[1]);if(s===-1){console.warn("removePlanarVertex unknown face_edge issue");return}e.faces_edges[t].splice(s,1)}));xn(e,"vertices",[t]);xn(e,"edges",[n[1]])};const uu=e=>[0,1].map((t=>e.filter(((e,n)=>n%2===t)).reduce(((e,t)=>e+t),0)));const mu=e=>{const t=e.reduce(((e,t)=>e+t),0)/2;return uu(e).map((e=>e-t))};const gu=e=>e.map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>Tn(...e))).map(((e,t,n)=>n.slice(t+1,n.length).concat(n.slice(0,t)))).map((e=>uu(e).map((e=>Math.PI-e)))).map(((t,n)=>e[n]+t[0])).map(((t,n)=>Vn(t,e[n],e[(n+1)%e.length])?t:undefined));const pu=e=>{const t=e.map((e=>Math.atan2(e[1],e[0])));return gu(t).map((e=>e===undefined?undefined:[Math.cos(e),Math.sin(e)]))};const _u=({vertices_coords:e,vertices_edges:t,edges_assignment:n,edges_vertices:s},r)=>{if(!t){t=Ms({edges_vertices:s})}const o=n?t[r].filter((e=>jt[n[e]])):t[r];if(o.length%2===0){return[]}const c=o.map((e=>s[e][0]===r?s[e]:[s[e][1],s[e][0]]));const a=c.map((t=>t.map((t=>e[t]))));const i=a.map((e=>O(e[1],e[0])));const f=Gn(i).map((e=>i[e]));const l=pu(f);const d=f.map(v);const u=l.filter((e=>e!==undefined)).filter((e=>!d.map((t=>C(e,t))).map((e=>Math.abs(1-e)<.001)).reduce(((e,t)=>e||t),false)));return u};const hu=Object.freeze({__proto__:null,alternatingSum:uu,alternatingSumDifference:mu,kawasakiSolutions:_u,kawasakiSolutionsRadians:gu,kawasakiSolutionsVectors:pu});const vu=({vertices_edges:e,edges_assignment:t})=>e.map((e=>e.map((e=>!jt[t[e]])).reduce(((e,t)=>e&&t),true))).map(((e,t)=>e?t:undefined)).filter((e=>e!==undefined));const bu=({edges_vertices:e,vertices_edges:t,edges_assignment:n})=>{if(!t){t=Ms({edges_vertices:e})}const s=t.map((e=>e.map((e=>Ot[n[e]])).filter((e=>e!==0)).map(Math.sign).reduce(((e,t)=>e+t),0))).map((e=>e===2||e===-2));dc({edges_vertices:e,edges_assignment:n}).forEach((e=>{s[e]=true}));vu({vertices_edges:t,edges_assignment:n}).forEach((e=>{s[e]=true}));return s.map(((e,t)=>!e?t:undefined)).filter((e=>e!==undefined))};const yu=({vertices_coords:e,vertices_vertices:t,vertices_edges:n,edges_vertices:s,edges_assignment:r},o=a)=>{if(!t){t=js({vertices_coords:e,vertices_edges:n,edges_vertices:s})}if(!n){n=Ms({edges_vertices:s})}const c=zs({vertices_coords:e,vertices_vertices:t,edges_vertices:s}).map(((e,t)=>e.filter(((e,s)=>jt[r[n[t][s]]])))).map((e=>e.length>1?Jn(e):[0,0])).map((e=>uu(e))).map((e=>Math.abs(e[0]-e[1])<o));dc({edges_vertices:s,edges_assignment:r}).forEach((e=>{c[e]=true}));vu({vertices_edges:n,edges_assignment:r}).forEach((e=>{c[e]=true}));return c.map(((e,t)=>!e?t:undefined)).filter((e=>e!==undefined))};const Eu=Object.freeze({__proto__:null,validateKawasaki:yu,validateMaekawa:bu});const xu={};xu.prototype=Object.create(zd);xu.prototype.constructor=xu;const Au=function(e){e.valley=t=>this.setValley(e,t);e.mountain=t=>this.setMountain(e,t);e.flat=()=>this.setFlat(e);e.unassigned=()=>this.setUnassigned(e);e.cut=()=>this.setCut(e);return e};const Mu=(e,t)=>{const n=Qd(e,t);if(!n){return undefined}const s=cu(e,n[0],n[1]);return Au.call(e,s)};xu.prototype.line=function(...e){const t=Ue(...e);if(!t){return undefined}t.domain=it;return Mu(this,t)};xu.prototype.ray=function(...e){const t=Ue(...e);if(!t){return undefined}t.domain=lt;return Mu(this,t)};xu.prototype.segment=function(...e){const t=Cn(...Le(...e));if(!t){return undefined}t.domain=ut;return Mu(this,t)};xu.prototype.polygon=function(...e){const t=Be(...e);if(!t){return undefined}const n=t.map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>Cn(...e))).map((e=>({...e,domain:ut}))).map((e=>Qd(this,e))).filter((e=>e!==undefined));if(!n){return undefined}const s=n.flatMap((e=>cu(this,e[0],e[1])));return Au.call(this,s)};xu.prototype.removeEdge=function(e){const t=this.edges_vertices[e];lu(this,e);t.map((e=>co(this,e))).map(((e,n)=>e?t[n]:undefined)).filter((e=>e!==undefined)).sort(((e,t)=>t-e)).forEach((e=>du(this,e)));return true};xu.prototype.validate=function(e){const t=fc(this,e);t.vertices.kawasaki=yu(this,e);t.vertices.maekawa=bu(this);if(this.edges_foldAngle){t.edges.not_flat=this.edges_foldAngle.map(((e,t)=>Pt(e)?undefined:t)).filter((e=>e!==undefined))}if(t.summary==="valid"){if(t.vertices.kawasaki.length||t.vertices.maekawa.length){t.summary="invalid"}else if(t.edges.not_flat.length){t.summary="not flat"}}return t};xu.prototype.defer=false;const ku=xu.prototype;const wu=(e,t)=>{const n=[];const s=e.map(((e,t)=>t));const r=s.filter((e=>t[e]));const o=s.filter((e=>!t[e]));o.sort(((t,n)=>e[t]-e[n])).forEach(((e,t)=>{n[e]=t}));r.sort(((t,n)=>e[n]-e[t])).forEach(((e,t)=>{n[e]=o.length+t}));return n};const Ou=(e,t,n,s=a)=>{const r=Ir(e,t);if(r.length===0){return undefined}if(r.length===1){return r[0]}return r[0]};const ju=(e,t,n,s)=>{const r=O(n,t);const o=B(e,r);return s?o>0:o<0};const Fu=(e,t)=>!e.faces_vertices[t]?[0,0]:e.faces_vertices[t].map((t=>e.vertices_coords[t])).reduce(((e,t)=>[e[0]+t[0],e[1]+t[1]]),[0,0]).map((n=>n/e.faces_vertices[t].length));const Cu={F:true,f:true,U:true,u:true};const Su={M:"V",m:"V",V:"M",v:"M"};const Pu=e=>Su[e]||e;const Nu=(e,t)=>({center:e.faces_center[t],matrix:e.faces_matrix2[t],winding:e.faces_winding[t],crease:e.faces_crease[t],side:e.faces_side[t],layer:e.faces_layer[t]});const Vu=(e,{vector:t,origin:n},s="V",r=a)=>{const o=Pu(s);vo(e);if(!e.faces_layer){e.faces_layer=Array(e.faces_vertices.length).fill(0)}e.faces_center=e.faces_vertices.map(((t,n)=>Fu(e,n)));if(!e.faces_matrix2){e.faces_matrix2=Mc(e,Ou(e,n,t,r))}e.faces_winding=Gl(e.faces_matrix2);e.faces_crease=e.faces_matrix2.map(ie).map((e=>oe(e,t,n)));e.faces_side=e.faces_vertices.map(((t,n)=>ju(e.faces_crease[n].vector,e.faces_crease[n].origin,e.faces_center[n],e.faces_winding[n])));const c=Ec(e,e.faces_matrix2);const i=Kd({vertices_coords:c,edges_vertices:e.edges_vertices},{vector:t,origin:n},r).filter((t=>Cu[e.edges_assignment[t]]));i.map((t=>e.edges_faces[t].find((e=>e!=null)))).map((t=>e.faces_winding[t])).map((e=>e?s:o)).forEach(((t,n)=>{e.edges_assignment[i[n]]=t;e.edges_foldAngle[i[n]]=Ct(t)}));const f=Nu(e,0);const l=e.faces_vertices.map(((e,t)=>t)).reverse().map((t=>{const n=Nu(e,t);const c=sc(e,t,n.crease,r);if(c===undefined){return undefined}e.edges_assignment[c.edges.new]=n.winding?s:o;e.edges_foldAngle[c.edges.new]=Ct(e.edges_assignment[c.edges.new]);const a=c.faces.map[c.faces.remove];a.forEach((t=>{e.faces_center[t]=Fu(e,t);e.faces_side[t]=ju(n.crease.vector,n.crease.origin,e.faces_center[t],n.winding);e.faces_layer[t]=n.layer}));return c})).filter((e=>e!==undefined));const d=ur(...l.map((e=>e.faces.map)));const u=ur(...l.map((e=>e.edges.map)).filter((e=>e!==undefined)));const m=l.map((e=>e.faces.remove)).reverse();e.faces_layer=wu(e.faces_layer,e.faces_side);const g=d&&d[0]&&d[0].length===2;const p=g?d[0].filter((t=>e.faces_side[t])).shift():0;let _=f.matrix;if(s!==o){_=!g&&!e.faces_side[0]?f.matrix:ce(f.matrix,me(f.crease.vector,f.crease.origin))}e.faces_matrix2=Mc(e,p).map((e=>ce(_,e)));delete e.faces_center;delete e.faces_winding;delete e.faces_crease;delete e.faces_side;return{faces:{map:d,remove:m},edges:{map:u}}};const zu={};zu.prototype=Object.create(zd);zu.prototype.constructor=zu;zu.prototype.flatFold=function(){Vu(this,Ue(arguments));return this};const Tu=zu.prototype;const $u=1.1;const Bu="Rabbit Ear";const Lu=(e,t)=>[[0,0],[e,0],[e,t],[0,t]];const Iu=e=>vo({vertices_coords:e,edges_vertices:e.map(((e,t,n)=>[t,(t+1)%n.length])),edges_assignment:Array(e.length).fill("B")});const Uu=(e=1)=>Iu(Lu(e,e));const Ru=(e=1,t=1)=>Iu(Lu(e,t));const qu=(e=3,t=1)=>Iu(We(e,t));const Du=()=>vo({vertices_coords:[[0,0],[1,0],[1,Math.SQRT2-1],[1,1],[Math.SQRT2-1,1],[0,1]],edges_vertices:[[0,1],[1,2],[2,3],[3,4],[4,5],[5,0],[0,2],[0,4],[0,3]],edges_assignment:Array.from("BBBBBBVVF")});const Wu=()=>vo({vertices_coords:[[0,0],[1,0],[1,1],[0,1],[.5,.5],[1-Math.SQRT1_2,Math.SQRT1_2],[Math.SQRT1_2,1-Math.SQRT1_2],[1,1-Math.SQRT1_2],[1-Math.SQRT1_2,1],[Math.SQRT1_2,0],[0,Math.SQRT1_2]],edges_vertices:[[0,4],[4,2],[4,5],[5,3],[0,5],[1,6],[6,4],[0,6],[2,5],[2,6],[1,7],[7,2],[6,7],[2,8],[8,3],[5,8],[0,9],[9,1],[6,9],[3,10],[10,0],[5,10]],edges_assignment:Array.from("FFFVVVFVVVBBFBBFBBMBBM")});const Gu=()=>vo({vertices_coords:[[0,0],[.5,0],[1,0],[1,.5],[1,1],[.5,1],[0,1],[0,.5],[.5,.5],[.5,(Math.sqrt(2)-1)/2],[(3-Math.sqrt(2))/2,.5],[.5,(3-Math.sqrt(2))/2],[(Math.sqrt(2)-1)/2,.5]],edges_vertices:[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,0],[0,8],[2,8],[4,8],[6,8],[1,9],[9,8],[3,10],[10,8],[5,11],[11,8],[7,12],[12,8],[0,9],[9,2],[2,10],[10,4],[4,11],[11,6],[6,12],[12,0]],edges_assignment:Array.from("BBBBBBBBFMFMMVMVMVMVVVVVVVVV")});const Hu=Object.freeze({__proto__:null,bird:Gu,fish:Wu,kite:Du,polygon:qu,rectangle:Ru,square:Uu});const Ju=(...e)=>vo(Object.assign(Object.create(zd),{...e.reduce(((e,t)=>({...e,...t})),{}),file_spec:$u,file_creator:Bu}));const Qu=(...e)=>vo(Object.assign(Object.create(ku),{...e.length?e.reduce(((e,t)=>({...e,...t})),{}):Uu(),file_spec:$u,file_creator:Bu,frame_classes:["creasePattern"]}));const Zu=(...e)=>vo(Object.assign(Object.create(Tu),{...e.length?e.reduce(((e,t)=>({...e,...t})),{}):Uu(),file_spec:$u,file_creator:Bu,frame_classes:["foldedForm"]}));Ju.prototype=zd;Ju.prototype.constructor=Ju;Qu.prototype=ku;Qu.prototype.constructor=Qu;Zu.prototype=Tu;Zu.prototype.constructor=Zu;Object.keys(Hu).forEach((e=>{Ju[e]=(...t)=>Ju(Hu[e](...t));Qu[e]=(...t)=>Qu(Hu[e](...t));Zu[e]=(...t)=>Zu(Hu[e](...t))}));const Yu=(e,t)=>{const n=B(e.normal,t.normal);if(Math.abs(n)<a){return undefined}const s=e.distance*t.normal[1]-t.distance*e.normal[1];const r=t.distance*e.normal[0]-e.distance*t.normal[0];return[s/n,r/n]};const Xu=(e,t)=>{const n=v(D(O(t,e)));return[{normal:n,distance:C(M(e,t),n)/2}]};const Ku=(e,t)=>{const n=v(O(t,e));return[{normal:n,distance:C(M(e,t),n)/2}]};const em=(e,t)=>{const n=Yu(e,t);return n===undefined?[{normal:e.normal,distance:(e.distance+t.distance*C(e.normal,t.normal))/2}]:[M,O].map((n=>v(n(e.normal,t.normal)))).map((e=>({normal:e,distance:C(n,e)})))};const tm=(e,t)=>{const n=D(e.normal);const s=C(t,n);return[{normal:n,distance:s}]};const nm=(e,t,n)=>{const s=C(t,e.normal);const r=e.distance-s;const o=U(t,n);if(r>o){return[]}const c=Math.sqrt(o*o-r*r);const i=E(e.normal,r);const f=M(t,i);const l=E(D(e.normal),c);const d=c<a?[f]:[M(f,l),O(f,l)];return d.map((e=>v(O(n,e)))).map((e=>({normal:e,distance:C(t,e)})))};const sm=e=>e<0?-((-e)**(1/3)):e**(1/3);const rm=(e,t,n,s,r)=>{switch(e){case 1:return[-r/s];case 2:{const e=s**2-4*n*r;if(e<-a){return[]}const t=-s/(2*n);if(e<a){return[t]}const o=Math.sqrt(e)/(2*n);return[t+o,t-o]}case 3:{const e=n/t;const o=s/t;const c=r/t;const i=(3*o-e**2)/9;const f=(9*e*o-27*c-2*e**3)/54;const l=i**3+f**2;const d=-e/3;if(l>0){const e=Math.sqrt(l);const t=sm(f+e);const n=sm(f-e);return[d+t+n]}if(Math.abs(l)<a){const e=f**(1/3);if(f<0){return[]}return[d+2*e,d-e]}const u=Math.sqrt(-l);const m=Math.atan2(u,f)/3;const g=(f**2-l)**(1/6);const p=g*Math.cos(m);const _=g*Math.sin(m);return[d+2*p,d-p-Math.sqrt(3)*_,d-p+Math.sqrt(3)*_]}default:return[]}};const om=(e,t,n,s)=>{if(Math.abs(1-C(e.normal,n)/e.distance)<.02){return[]}const r=D(e.normal);const o=O(M(n,E(e.normal,e.distance)),E(s,2));const c=O(E(e.normal,e.distance),n);const i=C(s,t.normal)-t.distance;const f=2*C(c,r);const l=C(c,c);const d=C(M(o,c),r);const u=C(o,c);const m=C(r,t.normal);const g=C(c,t.normal);const p=m;const _=i+d*m+g;const h=i*f+u*m+d*g;const b=i*l+u*g;let y=0;if(Math.abs(h)>a){y=1}if(Math.abs(_)>a){y=2}if(Math.abs(p)>a){y=3}return rm(y,p,_,h,b).map((t=>M(E(e.normal,e.distance),E(r,t)))).map((e=>({p:e,normal:v(O(e,n))}))).map((e=>({normal:e.normal,distance:C(e.normal,N(e.p,n))})))};const cm=(e,t,n)=>{const s=D(e.normal);const r=C(s,t.normal);if(Math.abs(r)<a){return undefined}const o=C(n,s);const c=C(n,t.normal);const i=(t.distance+2*o*r-c)/(2*r);return[{normal:s,distance:i}]};const am=(e,...t)=>[null,Xu,Ku,em,tm,nm,om,cm][e](...t);const im=Object.freeze({__proto__:null,normalAxiom:am,normalAxiom1:Xu,normalAxiom2:Ku,normalAxiom3:em,normalAxiom4:tm,normalAxiom5:nm,normalAxiom6:om,normalAxiom7:cm});const fm=(e,t)=>[{vector:v(O(...Y(t,e))),origin:e}];const lm=(e,t)=>[{vector:v(D(O(...Y(t,e)))),origin:N(e,t)}];const dm=(e,t)=>to(e,t);const um=(e,t)=>[{vector:D(v(e.vector)),origin:t}];const mm=(e,t,n)=>(Io({radius:U(t,n),origin:t},e)||[]).map((e=>({vector:v(D(O(...Y(e,n)))),origin:N(n,e)})));const gm=(e,t,n,s)=>om(Sn(e),Sn(t),n,s).map(Pn);const pm=(e,t,n)=>{const s=Lo(e,{vector:t.vector,origin:n},it,it);return s===undefined?[]:[{vector:v(D(O(...Y(s,n)))),origin:N(n,s)}]};const _m=(e,...t)=>[null,fm,lm,dm,um,mm,gm,pm][e](...t);const hm=Object.freeze({__proto__:null,axiom:_m,axiom1:fm,axiom2:lm,axiom3:dm,axiom4:um,axiom5:mm,axiom6:gm,axiom7:pm});const vm=(e,t)=>{const n=me(e.vector,e.origin);return re(n,t)};const bm=(e,t,n,s)=>[[n,s].map((t=>Vr(e,t,ct))).reduce(((e,t)=>e&&t),true)];const ym=bm;const Em=(e,t,n,s)=>{const r=[n,s].map((t=>Ud(e,t,ct,it)));if(r[0]===undefined||r[1]===undefined){return[false,false]}const o=t.map((t=>t===undefined?undefined:Ud(e,t,ct,it)));const c=[0,1].map((e=>o[e]!==undefined));const a=t.map((e=>e===undefined?undefined:[vm(e,r[0][0]),vm(e,r[0][1])]));const i=a.map((e=>e===undefined?false:Sr({vector:w(r[1][1],r[1][0]),origin:r[1][0]},e[0],ut)||Sr({vector:w(r[1][1],r[1][0]),origin:r[1][0]},e[1],ut)||Sr({vector:w(e[1],e[0]),origin:e[0]},r[1][0],ut)||Sr({vector:w(e[1],e[0]),origin:e[0]},r[1][1],ut)));return[0,1].map((e=>i[e]===true&&c[e]===true))};const xm=(e,t,n,s)=>{const r=Lo(n,{vector:D(n.vector),origin:s},it,it);return[[s,r].filter((e=>e!==undefined)).map((t=>Vr(e,t,ct))).reduce(((e,t)=>e&&t),true)]};const Am=(e,t,n,s,r)=>{if(t.length===0){return[]}const o=[s,r].map((t=>Vr(e,t,ct))).reduce(((e,t)=>e&&t),true);const c=t.map((e=>vm(e,r))).map((t=>Vr(e,t,ct)));return c.map((e=>e&&o))};const Mm=function(e,t,n,s,r,o){if(t.length===0){return[]}const c=[r,o].map((t=>Vr(e,t,ct))).reduce(((e,t)=>e&&t),true);if(!c){return t.map((()=>false))}const a=t.map((e=>vm(e,r))).map((t=>Vr(e,t,ct)));const i=t.map((e=>vm(e,o))).map((t=>Vr(e,t,ct)));return t.map(((e,t)=>a[t]&&i[t]))};const km=(e,t,n,s,r)=>{const o=Vr(e,r,ct);if(!t.length){return[false]}const c=vm(t[0],r);const a=Vr(e,c,ct);const i=Go(e,s,ut,it)!==undefined;const f=Lo(s,t[0],it,it);const l=f?Vr(e,f,ct):false;return[o&&a&&i&&l]};const wm=(e,t,n,...s)=>[null,bm,ym,Em,xm,Am,Mm,km][e](t,n,...s);const Om=Object.freeze({__proto__:null,validateAxiom:wm,validateAxiom1:bm,validateAxiom2:ym,validateAxiom3:Em,validateAxiom4:xm,validateAxiom5:Am,validateAxiom6:Mm,validateAxiom7:km});const jm=e=>e.map((e=>typeof e==="object"&&e.vector?Pn(e):e));const Fm=(e,t,...n)=>{const s=_m(e,...n);wm(e,t,s,...n).map(((e,t)=>!e?t:undefined)).filter((e=>e!==undefined)).forEach((e=>delete s[e]));return s};const Cm=(e,t,...n)=>{const s=am(e,...n).map(Pn);wm(e,t,s,...jm(n)).map(((e,t)=>!e?t:undefined)).filter((e=>e!==undefined)).forEach((e=>delete s[e]));return s};const Sm=Object.freeze({__proto__:null,axiomWithBoundary:Fm,normalAxiomWithBoundary:Cm});const Pm={...hm,...im,...Sm,...Om};const Nm=()=>{const e={};e.file_spec=$u;e.file_creator=Bu;e.file_classes=["singleModel"];e.frame_classes=[];e.frame_attributes=[];e.vertices_coords=[];e.faces_vertices=[];return e};const Vm=e=>{if(!e.edges_foldAngle||!e.edges_foldAngle.length){return}let t=true;for(let n=0;n<e.edges_foldAngle.length;n+=1){if(e.edges_foldAngle[n]!==0&&e.edges_foldAngle[n]!==-180&&e.edges_foldAngle[n]!==180){t=false;break}}e.frame_classes.push(t?"creasePattern":"foldedForm");e.frame_attributes.push(t?"2D":"3D")};const zm=e=>e.map(((e,t,n)=>[e,n[(t+1)%n.length]]));const Tm=({faces_vertices:e})=>{const t={};const n=[];e.flatMap(zm).forEach((e=>{const s=[e.join(" "),`${e[1]} ${e[0]}`];if(s[0]in t||s[1]in t){return}n.push(e);t[s[0]]=true}));return n};const $m=e=>e.slice(1).map((e=>parseInt(e,10)-1));const Bm=e=>e.slice(1).map((e=>parseFloat(e)));const Lm=e=>{const t=e.split("\n").map((e=>e.trim().split(/\s+/)));const n=Nm();for(let e=0;e<t.length;e+=1){switch(t[e][0].toLowerCase()){case"f":n.faces_vertices.push($m(t[e]));break;case"v":n.vertices_coords.push(Bm(t[e]));break}}n.faces_normal=Es(n);n.faces_center=nr(n);n.edges_vertices=Tm(n);n.faces_edges=Ys(n);n.edges_faces=Bs(n);n.edges_foldAngle=Ds(n);n.edges_assignment=Rs(n);n.vertices_vertices=Os(n);delete n.faces_normal;delete n.faces_center;delete n.edges_faces;Vm(n);return n};const Im=(e,t)=>{const n=po(e,t);n.vertices_vertices=js(n);const s=Qs(n);n.faces_vertices=s.faces_vertices;n.faces_edges=s.faces_edges;delete n.vertices_edges;return n};const Um=({vertices_coords:e,edges_vertices:t})=>{const n=t.map((t=>t.map((t=>e[t])))).map((e=>I(...e)));const s=n.reduce(((e,t)=>Math.min(e,t)),Infinity);return s===Infinity?undefined:s};const Rm=({vertices_coords:e,edges_vertices:t})=>{const n=Um({vertices_coords:e,edges_vertices:t});if(n){return n/20}const s=lc({vertices_coords:e});return s&&s.span?.001*Math.max(...s.span):.001};const qm=(e,t,n="epsilon")=>{if(typeof t==="object"&&typeof t[n]==="number"){return t[n]}return typeof t==="number"?t:Rm(e)};const Dm=(e,t)=>e==null?null:Array.from(e.childNodes).filter((e=>e.attributes&&e.attributes.length)).filter((e=>Array.from(e.attributes).filter((e=>e.nodeValue===t)).shift()!==undefined)).shift();const Wm=(e,t)=>{const n=Dm(e,t);const s=n?Array.from(n.childNodes).shift():null;return s?s.textContent:undefined};const Gm=e=>{const t=Dm(e,"lines");const n=t?Array.from(t.childNodes).filter((e=>e.getAttribute)).filter((e=>e.getAttribute("class").split(" ").includes("oripa.OriLineProxy"))).shift():undefined;return n?Array.from(n.childNodes):[]};const Hm=e=>e.filter((e=>e.nodeName==="void")).filter((e=>e.childNodes)).map((e=>Dm(e,"oripa.OriLineProxy"))).filter((e=>e)).map((e=>["type","x0","x1","y0","y1"].map((t=>Dm(e,t))).map((e=>e?Array.from(e.childNodes):[])).map((e=>e.filter((e=>e.nodeName==="double"||e.nodeName==="int")).shift())).map((e=>e&&e.childNodes[0]?e.childNodes[0].data:"0")).map(parseFloat)));const Jm=["F","B","M","V","U"];const Qm=e=>{const t={};t.vertices_coords=e.flatMap((e=>[[e[1],e[3]],[e[2],e[4]]]));t.edges_vertices=e.map(((e,t)=>[t*2,t*2+1]));t.edges_assignment=e.map((e=>Jm[e[0]]));t.edges_foldAngle=qs(t);return t};const Zm=e=>{const t=Ua(e,"text/xml");const n=Array.from(t.childNodes).filter((e=>e.getAttribute)).filter((e=>e.getAttribute("class").split(" ").includes("oripa.DataSet"))).shift();return Qm(Hm(Gm(n)))};const Ym=(e,t)=>{const n={file_description:"memo",file_author:"originalAuthorName",file_title:"title"};Object.keys(n).forEach((t=>{n[t]=Wm(e,n[t])}));Object.keys(n).filter((e=>n[e])).forEach((e=>{t[e]=n[e]}));t.file_classes=["singleModel"];t.frame_classes=["creasePattern"]};const Xm=(e,t)=>{const n=Ua(e,"text/xml");const s=n&&n.childNodes?Array.from(n.childNodes):[];const r=s.filter((e=>e.getAttribute)).filter((e=>e.getAttribute("class").split(" ").includes("oripa.DataSet"))).shift();const o=Qm(Hm(Gm(r)));const c=qm(o,t);const a=Im(o,c);Ym(r,a);return a};Object.assign(Xm,{opxEdgeGraph:Zm});const Km=function(e){const t=`${e}`.match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);return Math.max(0,(t[1]?t[1].length:0)-(t[2]?+t[2]:0))};const eg=function(e,t=15){if(typeof e!=="number"){return e}const n=parseFloat(e.toFixed(t));if(Km(n)===Math.min(t,Km(e))){return e}return n};const tg=Object.freeze({__proto__:null,cleanNumber:eg});const ng=4;const sg={M:[1,0,0],V:[0,0,1],J:[1,1,0],U:[1,0,1],C:[0,1,0]};const rg=(e=0,t=0,n=0)=>{const s=x([e,t,n],1/255);const r=p(s);if(r<.05){return"B"}const o=s.reduce(((e,t)=>e+t),0)/3;const c=R(s,[o,o,o]);const a=Object.keys(sg).map((e=>({key:e,dist:R(s,sg[e])}))).sort(((e,t)=>e.dist-t.dist)).shift();if(a.dist<c*ng){return a.key}return r<.1?"B":"F"};const og=Object.freeze({__proto__:null,assignmentColor:sg,rgbToAssignment:rg});const cg=(e,t)=>{const n=ba(e).toUpperCase();return t&&t[n]?t[n]:rg(...va(e))};const ag=(e,t)=>{switch(t){case"M":case"m":return-180*e;case"V":case"v":return 180*e;default:return 0}};const ig=(e,t)=>{const n=c().getComputedStyle!=null?c().getComputedStyle(e).stroke:"";if(n!==""&&n!=="none"){return n}if(t.stroke!==undefined){return t.stroke}return undefined};const fg=(e,t)=>{const n=c().getComputedStyle!=null?c().getComputedStyle(e).opacity:"";if(n!==""){const e=parseFloat(n);if(!Number.isNaN(e)){return e}}if(t.opacity!==undefined){const e=parseFloat(t.opacity);if(!Number.isNaN(e)){return e}}return undefined};const lg=Object.freeze({__proto__:null,colorToAssignment:cg,getEdgeOpacity:fg,getEdgeStroke:ig,opacityToFoldAngle:ag});const dg=(e,t)=>t.map((t=>e.getAttribute(t))).map((e=>e==null?0:e)).map(parseFloat);const ug=e=>[dg(e,["x1","y1","x2","y2"])];const mg=function(e){const[t,n,s,r]=dg(e,["x","y","width","height"]);return[[t,n,t+s,n],[t+s,n,t+s,n+r],[t+s,n+r,t,n+r],[t,n+r,t,n]]};const gg=e=>{const t=e.split(/[\s,]+/).map(parseFloat);return Array.from(Array(Math.floor(t.length/2))).map(((e,n)=>[t[n*2+0],t[n*2+1]]))};const pg=e=>gg(e.getAttribute("points")||"").map(((e,t,n)=>[n[t][0],n[t][1],n[(t+1)%n.length][0],n[(t+1)%n.length][1]]));const _g=function(e){const t=pg(e);t.pop();return t};const hg={L:true,V:true,H:true,Z:true};const vg=e=>ci(e.getAttribute("d")||"").filter((e=>hg[e.command.toUpperCase()])).map((e=>[e.start,e.end])).filter((e=>!ot(...e))).map((e=>e.flat()));const bg={line:ug,rect:mg,polygon:pg,polyline:_g,path:vg};const yg=(e,t)=>{const n=[[e[0],e[1]],[e[2],e[3]]];if(!t){return n}const s=La(t);return s?n.map((e=>re(s,e))):n};const Eg=e=>Ya(e).filter((e=>bg[e.element.nodeName])).flatMap((e=>bg[e.element.nodeName](e.element).map((t=>yg(t,e.attributes.transform))).map((t=>({...e,segment:t})))));const xg=e=>{if(!c().document.body){return undefined}const t=c().document.createElement("div");t.setAttribute("display","none");c().document.body.appendChild(t);t.appendChild(e);return t};const Ag=e=>Ga(e).map((e=>e.nodeName==="style")).reduce(((e,t)=>e||t),false);const Mg=e=>{const s=typeof e==="string"?Ua(e,"image/svg+xml"):e;if(Ag(s)&&t){console.warn(n.backendStylesheet)}const r=Ra(s)===c().document?undefined:xg(s);const o=Eg(s);o.map((e=>({data:{assignment:e.attributes["data-assignment"],foldAngle:e.attributes["data-foldAngle"]},stroke:ig(e.element,e.attributes),opacity:fg(e.element,e.attributes)}))).forEach(((e,t)=>{o[t]={...o[t],...e}}));if(r&&r.parentNode){r.parentNode.removeChild(r)}return o};const kg=e=>{if(!e||!e.assignments){return undefined}const t={};Object.keys(e.assignments).forEach((n=>{const s=ba(n).toUpperCase();t[s]=e.assignments[n]}));return t};const wg=(e,t="#f0f",n=undefined)=>{if(e){return e}return cg(t,n)};const Og=(e,t=1,n=undefined)=>{if(e){return parseFloat(e)}return ag(t,n)};const jg=(e,t)=>{const n=kg(t);if(n){e.forEach((e=>{delete e.data.assignment;delete e.data.foldAngle}))}const s=e.map((e=>wg(e.data.assignment,e.stroke,n)));const r=e.map(((e,t)=>Og(e.data.foldAngle,e.opacity,s[t])));return{edges_assignment:s,edges_foldAngle:r}};const Fg=(e,t)=>{const n=Mg(e);const{edges_assignment:s,edges_foldAngle:r}=jg(n,t);const o=t&&t.fast?e=>e:eg;const c=n.flatMap((e=>e.segment)).map((e=>e.map((e=>o(e,12)))));const a=n.map(((e,t)=>[t*2,t*2+1]));return{vertices_coords:c,edges_vertices:a,edges_assignment:s,edges_foldAngle:r}};const Cg=(e,t)=>{const n=Fg(e,t);const s=qm(n,t);const r=Im(n,s);const o=t&&t.fast?e=>e:eg;r.vertices_coords=r.vertices_coords.map((e=>e.map((e=>o(e,12)))));if(typeof t!=="object"||t.boundary!==false){r.edges_assignment.map(((e,t)=>t)).filter((e=>r.edges_assignment[e]==="B"||r.edges_assignment[e]==="b")).forEach((e=>{r.edges_assignment[e]="F"}));const{edges:e}=gc(r);e.forEach((e=>{r.edges_assignment[e]="B"}))}return{file_spec:1.1,file_creator:"Rabbit Ear",frame_classes:["creasePattern"],...r}};Object.assign(Cg,{...lg,svgSegments:Mg,svgEdgeGraph:Fg,planarizeGraph:Im,makeEpsilon:Rm});const Sg={objToFold:Lm,opxToFold:Xm,svgToFold:Cg,foldToSvg:Cd,foldToObj:Pd};const Pg=e=>!e.file_frames?1:e.file_frames.length+1;const Ng=(e,t=1)=>{if(!e.file_frames||e.file_frames.length<t){return e}const s=["frame_parent","frame_inherit"];const r={visited_frames:[]};const o={};zt(e,"file").filter((e=>e!=="file_frames")).forEach((t=>{o[t]=e[t]}));const c=(e,t,s)=>{if(r.visited_frames.indexOf(t)!==-1){throw new Error(n.graphCycle)}r.visited_frames.push(t);s=[t].concat(s);if(t===0){return s}if(e.file_frames[t-1].frame_inherit&&e.file_frames[t-1].frame_parent!=null){return c(e,e.file_frames[t-1].frame_parent,s)}return s};return c(e,t,[]).map((t=>{if(t===0){const t=e.file_frames;e.file_frames=null;const n=yr(e);e.file_frames=t;delete n.file_frames;s.forEach((e=>delete n[e]));return n}const n=yr(e.file_frames[t-1]);s.forEach((e=>delete n[e]));return n})).reduce(((e,t)=>Object.assign(e,t)),o)};const Vg=e=>{const t={...e};delete t.file_frames;return t};const zg=e=>{if(!e.file_frames||!e.file_frames.length){return[e]}return[Vg(e),...e.file_frames]};const Tg=(e,t)=>Array.from(Array(Pg(e))).map(((t,n)=>Ng(e,n))).filter((e=>e.frame_classes&&e.frame_classes.includes(t)));const $g=Object.freeze({__proto__:null,countFrames:Pg,flattenFrame:Ng,getFramesAsFlatArray:zg,getFramesByClassName:Tg});const Bg=({vertices_coords:e,edges_vertices:t},n)=>Cn(t[n].map((t=>e[t])));const Lg=({vertices_coords:e},t,n)=>fm(e[t],e[n]);const Ig=({vertices_coords:e},t,n)=>lm(e[t],e[n]);const Ug=({vertices_coords:e,edges_vertices:t},n,s)=>dm(...[n,s].map((n=>Bg({vertices_coords:e,edges_vertices:t},n))));const Rg=({vertices_coords:e,edges_vertices:t},n,s)=>um(Bg({vertices_coords:e,edges_vertices:t},n),e[s]);const qg=({vertices_coords:e,edges_vertices:t},n,s,r)=>mm(Bg({vertices_coords:e,edges_vertices:t},n),e[s],e[r]);const Dg=({vertices_coords:e,edges_vertices:t},n,s,r,o)=>gm(Bg({vertices_coords:e,edges_vertices:t},n),Bg({vertices_coords:e,edges_vertices:t},s),e[r],e[o]);const Wg=({vertices_coords:e,edges_vertices:t},n,s,r)=>pm(Bg({vertices_coords:e,edges_vertices:t},n),Bg({vertices_coords:e,edges_vertices:t},s),e[r]);const Gg=(e,...t)=>[null,Lg,Ig,Ug,Rg,qg,Dg,Wg][e](...t);const Hg=Object.freeze({__proto__:null,axiom:Gg,axiom1:Lg,axiom2:Ig,axiom3:Ug,axiom4:Rg,axiom5:qg,axiom6:Dg,axiom7:Wg});const Jg=e=>{const t=e.edges_vertices||[];const n=e.faces_vertices||[];const s=e.vertices_edges?e.vertices_edges:Ms({edges_vertices:t});const r=e.vertices_vertices?e.vertices_vertices:Fs({vertices_edges:s,edges_vertices:t});const o=e.vertices_faces?e.vertices_faces:Cs({vertices_edges:s,faces_vertices:n});const c=_r(Yl(r));const a=c.map((e=>e.flatMap((e=>s[e])))).map(rn);const i=c.map((e=>e.flatMap((e=>o[e])))).map(rn);return Array.from(Array(c.length)).map(((e,t)=>({vertices:c[t]||[],edges:a[t]||[],faces:i[t]||[]})))};const Qg=e=>{const t=Jg(e);const n=zt(e,"vertices");const s=zt(e,"edges");const r=zt(e,"faces");return t.map((({vertices:t,edges:o,faces:c})=>{const a={};n.forEach((n=>{a[n]=[];t.forEach((t=>{a[n][t]=e[n][t]}))}));s.forEach((t=>{a[t]=[];o.forEach((n=>{a[t][n]=e[t][n]}))}));r.forEach((t=>{a[t]=[];c.forEach((n=>{a[t][n]=e[t][n]}))}));return a}))};const Zg=Object.freeze({__proto__:null,disjointGraphs:Qg,disjointGraphsIndices:Jg});const Yg=({vertices_coords:e,edges_vertices:t},n,s=a)=>{const r=t=>t.map((t=>e[t])).map((e=>O(e,n.origin))).map((e=>B(n.vector,e))).sort(((e,t)=>Math.abs(t)-Math.abs(e))).map(Math.sign).shift();const o=nu({vertices_coords:e,edges_vertices:t},n,s,mt);const c={};Kd({vertices_coords:e,edges_vertices:t},n,s).forEach((e=>{c[e]=true}));return t.map(((e,t)=>{if(c[t]===true){return 2}if(o[t]!==undefined){return 0}return r(e)}))};const Xg=({vertices_coords:e,edges_vertices:t,faces_vertices:n,faces_edges:s},r,o=a)=>{if(!s){s=Ys({edges_vertices:t,faces_vertices:n})}const c=Yg({vertices_coords:e,edges_vertices:t},r,o);const i=s.map((e=>e.map((e=>c[e])).filter((e=>e!==2))));const f=i.map((e=>e.includes(0)));const l=i.map(((e,t)=>f[t]?false:e.reduce(((t,n)=>t&&n===e[0]),true)));return l.map(((e,t)=>e?i[t][0]:0))};const Kg=({vertices_coords:e,edges_vertices:t,faces_vertices:n,faces_edges:s,faceOrders:r},o,c=a)=>{if(!r){throw new Error("faceOrders required")}const i=Xg({vertices_coords:e,edges_vertices:t,faces_vertices:n,faces_edges:s},o,c);const f=[-1,1].map((e=>i.map(((e,t)=>({s:e,f:t}))).filter((t=>t.s===e||t.s===0)).map((e=>e.f))));const l=f.map((e=>Xl(r,e)));console.log("facesSide",i);console.log("sidesFaces",f);console.log("sidesFaceOrders",l);const d=Es({vertices_coords:e,faces_vertices:n});const u=l.map((t=>Kl({vertices_coords:e,faces_vertices:n,faceOrders:t,faces_normal:d})));console.log("sidesLayersFace",u)};const ep=Object.freeze({__proto__:null,getEdgesSide:Yg,getFacesSide:Xg,getFlapsThroughLine:Kg});const tp=Object.keys(At);const np=(e,t,n=a)=>{let s=e.vertices_coords.length;return t.vertices_coords.map((t=>e.vertices_coords.map((e=>I(e,t)<n)).map(((e,t)=>e?t:undefined)).filter((e=>e!==undefined)).shift())).map((e=>e===undefined?s++:e))};const sp=(e,t)=>{const n={};const s={};for(let t=0;t<e.edges_vertices.length;t+=1){s[`${e.edges_vertices[t][0]} ${e.edges_vertices[t][1]}`]=t;s[`${e.edges_vertices[t][1]} ${e.edges_vertices[t][0]}`]=t}for(let e=0;e<t.edges_vertices.length;e+=1){const r=s[`${t.edges_vertices[e][0]} ${t.edges_vertices[e][1]}`];if(r!==undefined){n[e]=r}}return n};const rp=(e,t,n,s)=>n.forEach((n=>t[n].forEach((t=>e[t].forEach(((r,o)=>r.forEach(((r,c)=>{e[t][o][c]=s[n][r]}))))))));const op=(e,t,n=a)=>{const s={};const r={};const o={};const c=[e,t].map((e=>e.vertices_coords)).map((e=>e&&e.length?e[0].length:0)).reduce(((e,t)=>Math.max(e,t)));e.vertices_coords=e.vertices_coords.map((e=>Z(c,e)));tp.forEach((e=>{s[e]=zt(t,e);r[e]=Tt(t,e)}));tp.forEach((t=>s[t].filter((t=>!e[t])).forEach((t=>{e[t]=[]}))));o.vertices=np(e,t,n);rp(t,r,["vertices"],o);const i=sn.edges(e);o.edges=Array.from(Array(sn.edges(t))).map(((e,t)=>i+t));const f=sp(e,t);Object.keys(f).forEach((e=>{o.edges[e]=f[e]}));const l=sn.faces(e);o.faces=Array.from(Array(sn.faces(t))).map(((e,t)=>l+t));rp(t,r,["edges","faces"],o);tp.forEach((n=>s[n].forEach((s=>t[s].forEach(((t,r)=>{const c=o[n][r];e[s][c]=t}))))));return o};const cp=Object.freeze({__proto__:null,joinGraphs:op});const ap=({vertices_coords:e,edges_vertices:t},n)=>Cn(t[n].map((t=>e[t])));const ip=({vertices_coords:e,edges_vertices:t},n,s,r,o)=>eo(...[n,s].map((n=>ap({vertices_coords:e,edges_vertices:t},n))),r,o);const fp=Object.freeze({__proto__:null,pleat:ip});const lp=(e,t=a)=>Js(e,t).map((t=>e.vertices_coords.map((e=>e[0]>t.min[0]&&e[1]>t.min[1]&&e[0]<t.max[0]&&e[1]<t.max[1]))));const dp=({vertices_coords:e,edges_vertices:t,edges_coords:n},s=a)=>{const r=Js({vertices_coords:e,edges_vertices:t,edges_coords:n},s);const o=t.map((()=>[]));for(let e=0;e<t.length-1;e+=1){for(let n=e+1;n<t.length;n+=1){const t=(r[e].max[0]<r[n].min[0]||r[n].max[0]<r[e].min[0])&&(r[e].max[1]<r[n].min[1]||r[n].max[1]<r[e].min[1]);o[e][n]=!t;o[n][e]=!t}}for(let e=0;e<t.length;e+=1){o[e][e]=true}return o};const up=Object.freeze({__proto__:null,getEdgesEdgesOverlapingSpans:dp,getEdgesVerticesOverlappingSpan:lp});const mp=({normal:e,distance:t})=>t<0?{normal:q(e),distance:-t}:{normal:e,distance:t};const gp=(e,t=a)=>{const{lines:n}=io(e,t);const s=n.map(Sn).map(mp);const r=n.map((({vector:e,origin:t})=>me(e,t)));const o=r.map((e=>n.map((({vector:t,origin:n})=>oe(e,t,n)))));const c=o.map((e=>e.map((e=>e.vector[0]<0?{vector:q(e.vector),origin:e.origin}:e)))).map((e=>e.map(Sn).map(mp))).map((e=>e.concat(s)));const i=c.map((e=>gn(e.map((e=>e.distance)))));const f=i.map(((e,n)=>e.map((e=>e.map((e=>c[n][e].normal)))).map((e=>pn(e,t)))));const l=f.map(((e,t)=>e.flatMap(((e,n)=>e.map((e=>e.map((e=>i[t][n][e]))))))));const d=l.map((e=>(e.length-n.length)/n.length));return d.map(((e,t)=>({error:e,i:t}))).map((e=>({line:n[e.i],error:e.error}))).sort(((e,t)=>e.error-t.error))};const pp=(e,t=a)=>gp(e,t)[0];const _p=Object.freeze({__proto__:null,findSymmetryLine:pp,findSymmetryLines:gp});const hp=e=>Array.from(Array(e.length-2)).map(((t,n)=>[e[0],e[n+1],e[n+2]]));const vp=({faces_vertices:e})=>e.flatMap((e=>e.length<4?[e]:hp(e)));const bp=e=>e.length===3?[e]:Array.from(Array(Math.floor(e.length/3))).map(((t,n)=>[n*3+0,n*3+1,n*3+2].map((t=>e[t]))));const yp=({vertices_coords:e,faces_vertices:t},s)=>{if(!e||!e.length){throw new Error(n.nonConvexTriangulation)}const r=e.filter((()=>true)).shift().length;return t.map((t=>t.flatMap((t=>e[t])))).map((e=>s(e,null,r))).map(((e,n)=>e.map((e=>t[n][e])))).flatMap((e=>bp(e)))};const Ep=e=>{if(!e.edges_vertices){e.edges_vertices=[]}const t=Ps(e);let n=e.edges_vertices.length;const s=[];e.faces_edges=e.faces_vertices.map((e=>e.map(((e,r,o)=>{const c=[e,o[(r+1)%o.length]];const a=c.join(" ");if(a in t){return t[a]}s.push(c);t[a]=n;t[c.reverse().join(" ")]=n;return n++}))));const r=s.length;e.edges_vertices.push(...s);if(e.edges_assignment){e.edges_assignment.push(...Array(r).fill("J"))}if(e.edges_foldAngle){e.edges_foldAngle.push(...Array(r).fill(0))}if(e.vertices_vertices){delete e.vertices_vertices}if(e.vertices_edges){delete e.vertices_edges}if(e.vertices_faces){delete e.vertices_faces}if(e.edges_faces){delete e.edges_faces}if(e.faces_faces){delete e.faces_faces}if(e.faceOrders){delete e.faceOrders}return e};const xp=({faces_vertices:e})=>{let t=0;return e.map((e=>Math.max(3,e.length))).map((e=>Array.from(Array(e-2)).map((()=>t++))))};const Ap=(e,t)=>{if(!e.faces_vertices){return{}}const n=e.edges_vertices?e.edges_vertices.length:0;const s=xp(e);e.faces_vertices=t?yp(e,t):vp(e);Ep(e);const r=Array.from(Array(e.edges_vertices.length-n)).map(((e,t)=>n+t));return{faces:{map:s},edges:{new:r}}};const Mp=Object.freeze({__proto__:null,triangulate:Ap,triangulateConvexFacesVertices:vp,triangulateNonConvexFacesVertices:yp});const kp=Object.freeze([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);const wp=e=>kp.map(((t,n)=>Math.abs(t-e[n])<a)).reduce(((e,t)=>e&&t),true);const Op=(e,t)=>[e[0]*t[0]+e[4]*t[1]+e[8]*t[2]+e[12],e[1]*t[0]+e[5]*t[1]+e[9]*t[2]+e[13],e[2]*t[0]+e[6]*t[1]+e[10]*t[2]+e[14]];const jp=(e,t,n)=>({vector:[e[0]*t[0]+e[4]*t[1]+e[8]*t[2],e[1]*t[0]+e[5]*t[1]+e[9]*t[2],e[2]*t[0]+e[6]*t[1]+e[10]*t[2]],origin:[e[0]*n[0]+e[4]*n[1]+e[8]*n[2]+e[12],e[1]*n[0]+e[5]*n[1]+e[9]*n[2]+e[13],e[2]*n[0]+e[6]*n[1]+e[10]*n[2]+e[14]]});const Fp=(e,t)=>[e[0]*t[0]+e[4]*t[1]+e[8]*t[2]+e[12]*t[3],e[1]*t[0]+e[5]*t[1]+e[9]*t[2]+e[13]*t[3],e[2]*t[0]+e[6]*t[1]+e[10]*t[2]+e[14]*t[3],e[3]*t[0]+e[7]*t[1]+e[11]*t[2]+e[15]*t[3],e[0]*t[4]+e[4]*t[5]+e[8]*t[6]+e[12]*t[7],e[1]*t[4]+e[5]*t[5]+e[9]*t[6]+e[13]*t[7],e[2]*t[4]+e[6]*t[5]+e[10]*t[6]+e[14]*t[7],e[3]*t[4]+e[7]*t[5]+e[11]*t[6]+e[15]*t[7],e[0]*t[8]+e[4]*t[9]+e[8]*t[10]+e[12]*t[11],e[1]*t[8]+e[5]*t[9]+e[9]*t[10]+e[13]*t[11],e[2]*t[8]+e[6]*t[9]+e[10]*t[10]+e[14]*t[11],e[3]*t[8]+e[7]*t[9]+e[11]*t[10]+e[15]*t[11],e[0]*t[12]+e[4]*t[13]+e[8]*t[14]+e[12]*t[15],e[1]*t[12]+e[5]*t[13]+e[9]*t[14]+e[13]*t[15],e[2]*t[12]+e[6]*t[13]+e[10]*t[14]+e[14]*t[15],e[3]*t[12]+e[7]*t[13]+e[11]*t[14]+e[15]*t[15]];const Cp=e=>{const t=e[10]*e[15]-e[11]*e[14];const n=e[9]*e[15]-e[11]*e[13];const s=e[9]*e[14]-e[10]*e[13];const r=e[8]*e[15]-e[11]*e[12];const o=e[8]*e[14]-e[10]*e[12];const c=e[8]*e[13]-e[9]*e[12];return e[0]*(e[5]*t-e[6]*n+e[7]*s)-e[1]*(e[4]*t-e[6]*r+e[7]*o)+e[2]*(e[4]*n-e[5]*r+e[7]*c)-e[3]*(e[4]*s-e[5]*o+e[6]*c)};const Sp=e=>{const t=Cp(e);if(Math.abs(t)<1e-12||Number.isNaN(t)||!Number.isFinite(e[12])||!Number.isFinite(e[13])||!Number.isFinite(e[14])){return undefined}const n=e[10]*e[15]-e[11]*e[14];const s=e[9]*e[15]-e[11]*e[13];const r=e[9]*e[14]-e[10]*e[13];const o=e[8]*e[15]-e[11]*e[12];const c=e[8]*e[14]-e[10]*e[12];const a=e[8]*e[13]-e[9]*e[12];const i=e[6]*e[15]-e[7]*e[14];const f=e[5]*e[15]-e[7]*e[13];const l=e[5]*e[14]-e[6]*e[13];const d=e[6]*e[11]-e[7]*e[10];const u=e[5]*e[11]-e[7]*e[9];const m=e[5]*e[10]-e[6]*e[9];const g=e[4]*e[15]-e[7]*e[12];const p=e[4]*e[14]-e[6]*e[12];const _=e[4]*e[11]-e[7]*e[8];const h=e[4]*e[10]-e[6]*e[8];const v=e[4]*e[13]-e[5]*e[12];const b=e[4]*e[9]-e[5]*e[8];const y=[+(e[5]*n-e[6]*s+e[7]*r),-(e[1]*n-e[2]*s+e[3]*r),+(e[1]*i-e[2]*f+e[3]*l),-(e[1]*d-e[2]*u+e[3]*m),-(e[4]*n-e[6]*o+e[7]*c),+(e[0]*n-e[2]*o+e[3]*c),-(e[0]*i-e[2]*g+e[3]*p),+(e[0]*d-e[2]*_+e[3]*h),+(e[4]*s-e[5]*o+e[7]*a),-(e[0]*s-e[1]*o+e[3]*a),+(e[0]*f-e[1]*g+e[3]*v),-(e[0]*u-e[1]*_+e[3]*b),-(e[4]*r-e[5]*c+e[6]*a),+(e[0]*r-e[1]*c+e[2]*a),-(e[0]*l-e[1]*p+e[2]*v),+(e[0]*m-e[1]*h+e[2]*b)];const E=1/t;return y.map((e=>e*E))};const Pp=Object.freeze([1,0,0,0,0,1,0,0,0,0,1,0]);const Np=(e=0,t=0,n=0)=>[...Pp,e,t,n,1];const Vp=(e,t,n,s,r)=>{const o=Np(...t);const c=Math.cos(e);const a=Math.sin(e);o[n*4+n]=c;o[n*4+s]=(r?+1:-1)*a;o[s*4+n]=(r?-1:+1)*a;o[s*4+s]=c;return o};const zp=(e,t=[0,0,0])=>Vp(e,t,1,2,true);const Tp=(e,t=[0,0,0])=>Vp(e,t,0,2,false);const $p=(e,t=[0,0,0])=>Vp(e,t,0,1,true);const Bp=(e,t=[0,0,1],n=[0,0,0])=>{const s=[0,1,2].map((e=>n[e]||0));const[r,o,c]=Z(3,h(t));const a=Math.cos(e);const i=Math.sin(e);const f=1-a;const l=Np(-s[0],-s[1],-s[2]);const d=Np(s[0],s[1],s[2]);return Fp(d,Fp([f*r*r+a,f*o*r+c*i,f*c*r-o*i,0,f*r*o-c*i,f*o*o+a,f*c*o+r*i,0,f*r*c+o*i,f*o*c-r*i,f*c*c+a,0,0,0,0,1],l))};const Lp=(e=[1,1,1],t=[0,0,0])=>[e[0],0,0,0,0,e[1],0,0,0,0,e[2],0,e[0]*-t[0]+t[0],e[1]*-t[1]+t[1],e[2]*-t[2]+t[2],1];const Ip=(e=1,t=[0,0,0])=>Lp([e,e,e],t);const Up=(e,t=[0,0])=>{const n=me(e,t);return[n[0],n[1],0,0,n[2],n[3],0,0,0,0,1,0,n[4],n[5],0,1]};const Rp=(e,t,n,s)=>{const r=Math.tan(Math.PI*.5-.5*e);const o=1/(n-s);return[r/t,0,0,0,0,r,0,0,0,0,(n+s)*o,-1,0,0,n*s*o*2,0]};const qp=(e,t,n,s,r,o)=>[2/(t-s),0,0,0,0,2/(e-n),0,0,0,0,2/(r-o),0,(s+t)/(s-t),(n+e)/(n-e),(r+o)/(r-o),1];const Dp=(e,t,n)=>{const s=b(j(e,t));const r=b(L(n,s));const o=b(L(s,r));return[r[0],r[1],r[2],0,o[0],o[1],o[2],0,s[0],s[1],s[2],0,e[0],e[1],e[2],1]};const Wp=Object.freeze({__proto__:null,determinant4:Cp,identity4x4:kp,invertMatrix4:Sp,isIdentity4x4:wp,makeLookAtMatrix4:Dp,makeMatrix4ReflectZ:Up,makeMatrix4Rotate:Bp,makeMatrix4RotateX:zp,makeMatrix4RotateY:Tp,makeMatrix4RotateZ:$p,makeMatrix4Scale:Lp,makeMatrix4Translate:Np,makeMatrix4UniformScale:Ip,makeOrthographicMatrix4:qp,makePerspectiveMatrix4:Rp,multiplyMatrices4:Fp,multiplyMatrix4Line3:jp,multiplyMatrix4Vector3:Op});const Gp=(e,t)=>{const n=L(e,t);const s=[n[0],n[1],n[2],F(e,t)];s[3]+=m(s);return h(s)};const Hp=e=>Fp([e[3],e[2],-e[1],e[0],-e[2],e[3],e[0],e[1],e[1],-e[0],e[3],e[2],-e[0],-e[1],-e[2],e[3]],[e[3],e[2],-e[1],-e[0],-e[2],e[3],e[0],-e[1],e[1],-e[0],e[3],-e[2],e[0],e[1],e[2],e[3]]);const Jp=Object.freeze({__proto__:null,matrix4FromQuaternion:Hp,quaternionFromTwoVectors:Gp});const Qp=({vertices_coords:e,faces_vertices:t},n=a)=>{const s=Es({vertices_coords:e,faces_vertices:t});const r=t.map((()=>[]));for(let e=0;e<t.length-1;e+=1){for(let o=e+1;o<t.length;o+=1){if(e===o){continue}if(H(s[e],s[o],n)){r[e].push(o);r[o].push(e)}}}const o=Yl(r);const c=pr(o).map((e=>typeof e==="number"?[e]:e));const i=c.map((e=>s[e[0]]));const f=[];c.forEach(((e,t)=>e.forEach((e=>{f[e]=S(s[e],i[t])>0}))));const l=t.map((t=>e[t[0]])).map((e=>Z(3,e)));const d=c.map(((e,t)=>e.map((e=>S(i[t],l[e])))));const u=d.map(((e,t)=>gn(e).map((e=>e.map((e=>c[t][e]))))));const m=u.flatMap(((e,t)=>e.map((()=>[...i[t]]))));const g=u.flat();const p=g.map((e=>e[0])).map((e=>l[e])).map(((e,t)=>S(m[t],e))).map(((e,t)=>x(m[t],e)));const _=g.map(((e,t)=>({normal:m[t],origin:p[t]})));return g.map(((e,t)=>({faces:e,facesAligned:e.map((e=>f[e])),plane:_[t]})))};const Zp=(e,t,n,s)=>{const r=e.vertices_coords.map((e=>Z(3,e)));const o=t.map((t=>t.faces.map(((n,s)=>t.facesAligned[s]?e.faces_vertices[n]:e.faces_vertices[n].slice().reverse())).map((e=>e.map((e=>r[e])))).map((e=>Ye(e,s)))));const c=[];const a=o.map(((e,t)=>e.map((e=>e.map((e=>Op(n[t],e))).map((e=>[e[0],e[1]]))))));t.map((e=>e.faces)).forEach(((e,t)=>e.forEach(((e,n)=>{c[e]=a[t][n]}))));return c};const Yp=({vertices_coords:e,faces_vertices:t,faces_faces:n},s=a)=>{if(!n){n=Xs({faces_vertices:t})}const r=Qp({vertices_coords:e,faces_vertices:t},s);const o=[];r.forEach((e=>e.facesAligned.forEach(((t,n)=>{o[e.faces[n]]=t}))));const c=[0,0,1];const i=r.map((e=>e.plane.normal)).map((e=>{const t=F(e,c);return Math.abs(t+1)<.01?Bp(Math.PI,[1,0,0]):Hp(Gp(e,c))}));const f=Zp({vertices_coords:e,faces_vertices:t},r,i,s);const l=r.map((e=>e.faces)).map((e=>rc(n,e)));const d=l.map((e=>Yl(e)));const u=d.map((e=>pr(e).map((e=>e.constructor===Array?e:[e]))));const m=d.map((e=>{const t=e.map(((e,t)=>t));return e.map((n=>t.filter((t=>e[t]!==n))))}));const g=t.map((()=>[]));m.forEach((e=>e.forEach(((e,t)=>{for(let n=0;n<e.length;n+=1){const r=e[n];const o=[t,r].map((e=>f[e]));const c=zr(...o,s);if(c){g[t][r]=true;g[r][t]=true}}}))));const p=m.map((e=>e.map(((e,t)=>e.filter((e=>g[t][e]))))));const _=[];p.forEach(((e,t)=>{_[t]=[];e.forEach(((e,n)=>{const s=d[t][n];const r=e.map((e=>d[t][e]));if(!_[t][s]){_[t][s]=new Set}r.forEach((e=>{if(!_[t][e]){_[t][e]=new Set}}));r.forEach((e=>{_[t][s].add(e);_[t][e].add(s)}))}))}));_.forEach(((e,t)=>e.forEach(((e,n)=>{_[t][n]=[...e]}))));const h=_.map((e=>pr(Yl(e)).map((e=>e.constructor===Array?e:[e]))));const v=h.flatMap(((e,t)=>e.map((()=>t))));const b=r.map(((e,t)=>h[t].map((e=>e.flatMap((e=>u[t][e]))))));const y=b.flatMap(((e,t)=>e.map((e=>({faces:e,facesAligned:e.map((e=>o[e])),plane:r[t].plane})))));const E=v.map((e=>r[e].plane));const x=v.map((e=>i[e]));const A=y.map((e=>e.faces));const M=pr(A);return{sets_faces:A,sets_plane:E,sets_transformXY:x,faces_set:M,faces_winding:o}};const Xp=Object.freeze({__proto__:null,coplanarFacesGroups:Qp,coplanarOverlappingFacesGroups:Yp});const Kp=({vertices_coords:e,edges_vertices:t,edges_vector:n},s=a)=>{if(!n){n=Gs({vertices_coords:e,edges_vertices:t})}const r=n.map((e=>h(e)));const o=t.map((()=>[]));r.forEach(((e,t)=>{r.forEach(((e,n)=>{if(n>=t){return}if(1-Math.abs(F(r[t],r[n]))<s){o[t].push(n);o[n].push(t)}}))}));return o};const e_=({vertices_coords:e,edges_vertices:t,edges_vector:n},s)=>{if(!n){n=Gs({vertices_coords:e,edges_vertices:t})}const r=t.map((t=>e[t[0]]));const o=n.map(((e,t)=>({vector:e,origin:r[t]})));return Kp({vertices_coords:e,edges_vertices:t,edges_vector:n},s).map(((e,t)=>e.filter((e=>Pr(o[t],o[e],mt,mt,s)))))};const t_=Object.freeze({__proto__:null,makeEdgesEdgesParallelOverlap:e_});const n_=e=>e.map((e=>e.map(((e,t)=>e===true?t:undefined)).filter((e=>e!==undefined))));const s_=({vertices_coords:e,edges_vertices:t,edges_coords:n,edges_boundingBox:s},r=a)=>{if(!n){n=Ws({vertices_coords:e,edges_vertices:t})}if(!s){s=Js({vertices_coords:e,edges_vertices:t,edges_coords:n})}const o=t.map(((e,t)=>t)).shift();const c=Array.from(Array(n.length)).map((()=>[]));if(o===undefined){return n_(c)}const i=s[o].min.length;for(let e=0;e<n.length-1;e+=1){if(!s[e]){continue}for(let t=e+1;t<n.length;t+=1){if(!s[t]){continue}let n=true;for(let o=0;o<i;o+=1){if(!st(s[e].min[o],s[t].min[o],r)||!st(s[e].max[o],s[t].max[o],r)){n=false}}c[e][t]=n;c[t][e]=n}}for(let e=0;e<n.length-1;e+=1){for(let t=e+1;t<n.length;t+=1){if(!c[e][t]){continue}const s=ot(n[e][0],n[t][0],r)&&ot(n[e][1],n[t][1],r);const o=ot(n[e][0],n[t][1],r)&&ot(n[e][1],n[t][0],r);const a=s||o;c[e][t]=a;c[t][e]=a}}return n_(c)};const r_=({vertices_coords:e,edges_vertices:t,edges_vector:n,edges_faces:s,faces_vertices:r},o=a)=>{if(!n){n=Gs({vertices_coords:e,edges_vertices:t})}const c=t.map((t=>e[t[0]]));const i=t.map((()=>Array.from(Array(r.length))));s.forEach(((e,t)=>e.forEach((e=>{i[t][e]=false}))));const f=t.map((t=>t.map((t=>e[t]))));const l=r.map((t=>t.map((t=>e[t]))));Hl({vertices_coords:e,faces_vertices:r}).map(((e,t)=>!e?t:undefined)).filter((e=>e!==undefined)).forEach((e=>l[e].reverse()));const d=Js({edges_coords:f});const u=l.map((e=>tt(e)));for(let e=0;e<i.length;e+=1){if(!d[e]){continue}for(let t=0;t<i[e].length;t+=1){if(i[e][t]===false){continue}if(!u[t]){continue}if(!Tr(u[t],d[e],o)){i[e][t]=false;continue}}}const m=s_({vertices_coords:e,edges_vertices:t,edges_coords:f,edges_boundingBox:d});const g={};for(let e=0;e<i.length;e+=1){if(g[e]){continue}if(!f[e]){continue}for(let t=0;t<i[e].length;t+=1){if(i[e][t]!==undefined){continue}if(!l[t]){continue}const s=f[e].map((e=>Vr(l[t],e,at,o))).reduce(((e,t)=>e||t),false);if(s){i[e][t]=true;continue}const r=Go(l[t],{vector:n[e],origin:c[e]},mt,mt,o);if(r){i[e][t]=true;continue}i[e][t]=false}m[e].forEach((t=>{i[t]=i[e].slice();g[t]=true}))}return i.map((e=>e.map(((e,t)=>e?t:undefined)).filter((e=>e!==undefined))))};const o_=Object.freeze({__proto__:null,getEdgesFacesOverlap:r_});const c_=({vertices_coords:e,faces_vertices:t},n=a)=>{const s=Ks({vertices_coords:e,faces_vertices:t});const r=s.map((e=>tt(e)));const o=[];const c=[];Qr({vertices_coords:e,faces_vertices:t},0,n).forEach((e=>{e.start.forEach((e=>{c[e]=true}));c.forEach(((t,c)=>e.start.forEach((e=>{if(c===e){return}if(!Tr(r[c],r[e],n)||!zr(s[c],s[e],n)){return}if(!o[c]){o[c]=[]}if(!o[e]){o[e]=[]}o[c][e]=true;o[e][c]=true}))));e.end.forEach((e=>delete c[e]))}));return o.map((e=>Object.keys(e).map((e=>parseInt(e,10)))))};const a_=Object.freeze({__proto__:null,getFacesFacesOverlap:c_});const i_=(e,t)=>{if(!e.vertices_coords){e.vertices_coords=[]}const n=e.vertices_coords.length;zt(e,"vertices").forEach((t=>{e[t][n]=[]}));e.vertices_coords[n]=t;return n};const f_=(e,t)=>{if(t.length!==2){return undefined}if(!e.edges_vertices){e.edges_vertices=[]}const n=e.edges_vertices.length;zt(e,"edges").forEach((t=>{e[t][n]=[]}));e.edges_vertices[n]=t;if(e.edges_assignment){e.edges_assignment[n]="U"}if(e.edges_foldAngle){e.edges_foldAngle[n]=0}if(e.vertices_edges){t.forEach((t=>{e.vertices_edges[t]=e.vertices_edges[t].filter((e=>e!==n));e.vertices_edges[t].push(n)}))}if(e.vertices_vertices){const n=[t[1],t[0]];t.forEach(((t,s)=>{e.vertices_vertices[t]=e.vertices_vertices[t].filter((e=>e!==n[s]));e.vertices_vertices[t].push(n[s])}))}return n};const l_=(e,{vector:t,origin:n},s=a)=>{const r=nu(e,{vector:t,origin:n},s).filter(Boolean);const o=r.map((e=>w(e,n))).map((e=>F(e,t)));const c=an(o);const i=c.map((e=>A(y(t,e),n)));const f=Array.from(Array(i.length-1)).map(((e,t)=>[i[t],i[t+1]])).map((t=>cu(e,t[0],t[1],s)));return f};const d_=(e,t,n,s=a)=>{e.faces_vertices[t].map((t=>e.vertices_coords[t])).map((e=>n.map((t=>ot(e,t,s)))));e.faces_vertices[t].map((t=>e.vertices_coords[t])).map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>Cn(...e))).map((e=>n.map((t=>Sr(e,t,mt,s)))))};const u_=(e,t,n=a)=>{const s=O(t[1],t[0]);const r=t[0];const o=ec(e,t,n);const c=o.map((t=>e.faces_vertices[t].map((t=>e.vertices_coords[t])))).map((e=>Ud(e,{vector:s,origin:r},ct,ut,n)));const i=[];o.forEach(((e,t)=>{if(c[t]){i[e]=c[t]}}));return i};const m_=(e,t,n=a)=>{const s=u_(e,t,n);console.log("facesSegment",s);const r=s.map(((t,s)=>d_(e,s,t,n)));return r};const g_={count:sn,countImplied:es,validate:fc,clean:br,populate:vo,remove:xn,replace:vn,removePlanarVertex:du,removePlanarEdge:lu,splitEdge:jo,splitFace:sc,flatFold:Vu,addVertex:i_,addNonPlanarEdge:f_,addPlanarLine:l_,addPlanarSegment:cu,addPlanarSegmentNew:m_,planarize:po,connectedComponents:Yl,clone:yr,...og,...$g,...xt,...Gt,...Hg,...pc,...Zd,...Mr,...hc,...ep,...cp,...sr,...vr,...Dr,...As,...sd,...fp,...up,...ac,...Yr,..._p,...Zl,...Zg,...Kt,...yc,...Mp,...rs,...hn,...tn,...ao,...En,...jc,...On,...ys,...lr,...cr,...oo,...fo,...Xp,...kc,...Jl,...Xd,...su,...t_,...o_,...nc,...a_};const p_=e=>{if(typeof e!=="object"){return typeof e}if(e.radius!==undefined){return"circle"}if(e.min&&e.max&&e.span){return"box"}if(typeof e[0]==="number"){return"vector"}if(e.vector!==undefined&&e.origin!==undefined){return"line"}if(e[0]!==undefined&&e[0].length&&typeof e[0][0]==="number"){return e.length===2?"segment":"polygon"}return"object"};const __={...d,...ht,...Re,...Nn,...Te,...tg,...ls,...hs,typeof:p_};const h_={...te,...ge,...Pe,...Wp,...Jp};const v_=e=>e.concat(e.slice(0,-1).reverse());const b_=(e=[],t=false,n=a)=>{if(e.length<2){return[]}const s=gs(e,n).map((e=>e.length===1?e:v_(e))).flat();s.push(s[0]);const r=[s[0]];let o=1;const c={"-1":()=>r.pop(),1:e=>{r.push(e);o+=1},undefined:()=>{o+=1}};c[0]=t?c["1"]:c["-1"];while(o<s.length){if(r.length<2){r.push(s[o]);o+=1;continue}const t=r[r.length-2];const a=r[r.length-1];const i=s[o];const f=Qn(...[t,a,i].map((t=>e[t])),n);c[f](i)}r.pop();return r};const y_=Object.freeze({__proto__:null,convexHull:b_});const E_=(e,t,n)=>{const s=e.map(((e,t)=>({vector:n[t],origin:e}))).map(((e,t,n)=>Lo(e,n[(t+1)%n.length],dt,dt)));const r=t.map(((e,t)=>Or(e,s[t],(e=>e))));if(e.length===3){return e.map((e=>({type:"skeleton",points:[e,s[0]]}))).concat([{type:"perpendicular",points:[r[0],s[0]]}])}const o=s.map(((e,t)=>I(e,r[t])));let c=0;o.forEach(((e,t)=>{if(e<o[c]){c=t}}));const a=[{type:"skeleton",points:[e[c],s[c]]},{type:"skeleton",points:[e[(c+1)%e.length],s[c]]},{type:"perpendicular",points:[r[c],s[c]]}];const i=Ln(q(t[(c+t.length-1)%t.length].vector),t[(c+1)%t.length].vector);const f=c===e.length-1;e.splice(c,2,s[c]);t.splice(c,1);n.splice(c,2,i);if(f){e.splice(0,1);n.splice(0,1);t.push(t.shift())}return a.concat(E_(e,t,n))};const x_=e=>{const t=e.map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>({vector:w(e[1],e[0]),origin:e[0]})));const n=e.map(((e,t,n)=>[(t-1+n.length)%n.length,t,(t+1)%n.length].map((e=>n[e])))).map((e=>[w(e[0],e[1]),w(e[2],e[1])])).map((e=>Ln(...e)));return E_([...e],t,n)};const A_={...y_,...no,...Cr,...cs,...nt,...Zn,straightSkeleton:x_};const M_=(e,t,n=a)=>{for(let s=0;s<e.length;s+=1){if(e[s]<t.min[s]-n||e[s]>t.max[s]+n){return false}}return true};const k_=(e,t,n=a)=>{const s=Math.min(e.min.length,t.min.length);for(let r=0;r<s;r+=1){if(t.min[r]<e.min[r]-n||t.max[r]>e.max[r]+n){return false}}return true};const w_=(e,t,n=ct)=>{const s=e.map((e=>Vr(t,e,n))).reduce(((e,t)=>e||t),false);const r=t.map((e=>Vr(t,e,n))).reduce(((e,t)=>e&&t),true);return!s&&r};const O_=Object.freeze({__proto__:null,enclosingBoundingBoxes:k_,enclosingPolygonPolygon:w_,pointInBoundingBox:M_});const j_=(e,t)=>{const n=e.map(((e,n)=>{const s=Sr(t,e,it);return{point:s?e:null,at_index:n}})).filter((e=>e.point!=null));const s=e.map(((e,t,n)=>({vector:w(e,n[(t+1)%n.length]),origin:n[(t+1)%n.length]}))).map(((e,n)=>({point:Lo(t,e,ft,mt),at_index:n}))).filter((e=>e.point!=null));if(s.length===2){const t=s.slice().sort(((e,t)=>e.at_index-t.at_index));const n=e.slice(t[1].at_index+1).concat(e.slice(0,t[0].at_index+1));n.push(t[0].point);n.push(t[1].point);const r=e.slice(t[0].at_index+1,t[1].at_index+1);r.push(t[1].point);r.push(t[0].point);return[n,r]}if(s.length===1&&n.length===1){n[0].type="v";s[0].type="e";const t=n.concat(s).sort(((e,t)=>e.at_index-t.at_index));const r=e.slice(t[1].at_index+1).concat(e.slice(0,t[0].at_index+1));if(t[0].type==="e"){r.push(t[0].point)}r.push(t[1].point);const o=e.slice(t[0].at_index+1,t[1].at_index+1);if(t[1].type==="e"){o.push(t[1].point)}o.push(t[0].point);return[r,o]}if(n.length===2){const t=n.slice().sort(((e,t)=>e.at_index-t.at_index));const s=e.slice(t[1].at_index).concat(e.slice(0,t[0].at_index+1));const r=e.slice(t[0].at_index,t[1].at_index+1);return[s,r]}return[e.slice()]};const F_=Object.freeze({__proto__:null,splitConvexPolygon:j_});const C_=e=>e.charAt(0).toUpperCase()+e.slice(1);const S_={polygon:ut,circle:ct,line:it,ray:lt,segment:ut};const P_=(e,t,n=a)=>{const s=e=>e==="polygon"?"ConvexPolygon":C_(e);const r=[e,t].map(p_);const o=[r,r.slice().reverse()].map((e=>e.map(s).join(""))).map((e=>Ho[`intersect${e}`]));const c=[e.domain,t.domain].map(((e,t)=>e||S_[r[t]]));const i=[[e,t,...c],[t,e,...c.slice().reverse()]];const f=o.map(((e,t)=>({fn:e,params:i[t]}))).filter((e=>e.fn)).shift();return f?f.fn(...f.params,n):undefined};const N_={...O_,...$r,...Ho,...qd,...F_,intersect:P_};const V_={...__,...h_,...A_,...N_};const z_=e=>{const t=e.map((e=>e.toUpperCase()));const n=t.filter((e=>e==="M")).length;const s=t.filter((e=>e==="V")).length;return n>s?t.indexOf("V"):t.indexOf("M")};const T_=(e,t,n=0)=>{const s=z_(t);if(s===-1){return undefined}const r=e[(s+1)%e.length];const o=e[(s+2)%e.length];const c=Math.max(-Math.PI,Math.min(Math.PI,n));const a=-Math.cos(r)*Math.cos(o)+Math.sin(r)*Math.sin(o)*Math.cos(Math.PI-c);const i=Math.cos(Math.PI-c)-Math.sin(Math.PI-c)**2*Math.sin(r)*Math.sin(o)/(1-a);const f=-Math.acos(i)+Math.PI;return s%2===0?[f,c,f,c].map(((e,t)=>s===t?-e:e)):[c,f,c,f].map(((e,t)=>s===t?-e:e))};const $_=Object.freeze({__proto__:null,foldDegree4:T_});const B_={U:true,u:true};const L_=e=>e.map(((e,t)=>t)).filter((t=>B_[e[t]]));const I_=e=>{const t=L_(e);const n=Array.from(Array(2**t.length)).map(((e,t)=>t.toString(2))).map((e=>Array(t.length-e.length+1).join("0")+e)).map((e=>Array.from(e).map((e=>e==="0"?"V":"M"))));const s=n.map((n=>{const s=e.slice();t.forEach(((e,t)=>{s[e]=n[t]}));return s}));const r=e.filter((e=>Ft[e])).length;if(r>0){return s}const o=s.map((e=>e.filter((e=>e==="M"||e==="m")).length));const c=s.map((e=>e.filter((e=>e==="V"||e==="v")).length));return s.filter(((e,t)=>Math.abs(o[t]-c[t])===2))};const U_=Object.freeze({__proto__:null,maekawaSolver:I_});const R_={...$_,...hu,...U_,...Eu};const q_=(e,t,n)=>{const s=e.createShader(n);e.shaderSource(s,t);e.compileShader(s);if(!e.getShaderParameter(s,e.COMPILE_STATUS)){throw new Error(e.getShaderInfoLog(s))}return s};const D_=(e,t,n)=>{const s=e.createProgram();e.attachShader(s,t);e.attachShader(s,n);e.linkProgram(s);if(!e.getProgramParameter(s,e.LINK_STATUS)){throw new Error(e.getProgramInfoLog(s))}e.deleteShader(t);e.deleteShader(n);return s};const W_=(e,t,n)=>{const s=q_(e,t,e.VERTEX_SHADER);const r=q_(e,n,e.FRAGMENT_SHADER);return D_(e,s,r)};const G_=(e,t)=>{const s=[null,"webgl","webgl2"];const r=window.devicePixelRatio||1;e.width=e.clientWidth*r;e.height=e.clientHeight*r;if(t){return{gl:e.getContext(s[t]),version:t}}const o=e.getContext(s[2]);if(o){return{gl:o,version:2}}const c=e.getContext(s[1]);if(c){return{gl:c,version:1}}throw new Error(n.noWebGL)};const H_=(e,t)=>{if(!e){return}const n=window.devicePixelRatio||1;const s=[t.clientWidth,t.clientHeight].map((e=>e*n));if(t.width!==s[0]||t.height!==s[1]){t.width=s[0];t.height=s[1]}e.viewport(0,0,e.canvas.width,e.canvas.height)};const J_=(e,t="perspective",n=45)=>{if(!e){return kp}const s=.1;const r=20;const o=-100;const c=100;const a=[e.clientWidth,e.clientHeight];const i=Math.min(...a);const f=[0,1].map((e=>(a[e]-i)/i/2));const l=f.map((e=>e+.5));return t==="orthographic"?qp(l[1],l[0],-l[1],-l[0],o,c):Rp(n*(Math.PI/180),a[0]/a[1],s,r)};const Q_=e=>{if(!e){return kp}const t=lc(e);if(!t){return kp}const n=Math.max(...t.span);if(n===0){return kp}const s=Z(3,P(t.min,t.max));const r=[n,0,0,0,0,n,0,0,0,0,n,0,...s,1];return Sp(r)||kp};const Z_=Object.freeze({__proto__:null,makeModelMatrix:Q_,makeProjectionMatrix:J_,rebuildViewport:H_});const Y_=(e,t,n,s)=>{switch(n){case"uniformMatrix4fv":e[n](t,false,s);break;default:e[n](t,s);break}};const X_=(e,t,n,s={})=>{e.useProgram(n.program);n.flags.forEach((t=>e.enable(t)));const r=e.getProgramParameter(n.program,e.ACTIVE_UNIFORMS);for(let t=0;t<r;t+=1){const r=e.getActiveUniform(n.program,t).name;const o=s[r];if(o){const t=e.getUniformLocation(n.program,r);Y_(e,t,o.func,o.value)}}n.vertexArrays.forEach((t=>{e.bindBuffer(e.ARRAY_BUFFER,t.buffer);e.bufferData(e.ARRAY_BUFFER,t.data,e.STATIC_DRAW);e.vertexAttribPointer(t.location,t.length,t.type,false,0,0);e.enableVertexAttribArray(t.location)}));n.elementArrays.forEach((n=>{e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n.buffer);e.bufferData(e.ELEMENT_ARRAY_BUFFER,n.data,e.STATIC_DRAW);e.drawElements(n.mode,n.data.length,t===2?e.UNSIGNED_INT:e.UNSIGNED_SHORT,n.buffer)}));n.flags.forEach((t=>e.disable(t)))};const K_=(e,t)=>{t.vertexArrays.forEach((t=>e.disableVertexAttribArray(t.location)));t.vertexArrays.forEach((t=>e.deleteBuffer(t.buffer)));t.elementArrays.forEach((t=>e.deleteBuffer(t.buffer)));e.deleteProgram(t.program)};const eh=Object.freeze({__proto__:null,deallocProgram:K_,drawProgram:X_});const th={B:[.5,.5,.5],b:[.5,.5,.5],V:[.2,.4,.6],v:[.2,.4,.6],M:[.75,.25,.15],m:[.75,.25,.15],F:[.3,.3,.3],f:[.3,.3,.3],J:[.3,.2,0],j:[.3,.2,0],C:[.5,.8,.1],c:[.5,.8,.1],U:[.6,.25,.9],u:[.6,.25,.9]};const nh={B:[0,0,0],b:[0,0,0],V:[.2,.5,.8],v:[.2,.5,.8],M:[.75,.25,.15],m:[.75,.25,.15],F:[.75,.75,.75],f:[.75,.75,.75],J:[1,.75,.25],j:[1,.75,.25],C:[.5,.8,.1],c:[.5,.8,.1],U:[.6,.25,.9],u:[.6,.25,.9]};const sh=e=>e!==undefined&&e.constructor===Array?e.slice(0,3):va(e).slice(0,3).map((e=>e/255));const rh=(e,t={})=>{const n=e.vertices_coords.map((e=>[...e].concat(Array(3-e.length).fill(0))));const s=xs(e);const r=n.map(((e,t)=>t%3)).map((e=>[e===0?1:0,e===1?1:0,e===2?1:0]));const o=e.faces_edges.map((t=>t.map((t=>e.edges_assignment[t])).map((e=>e==="J"||e==="j"))));if(!t.showTrianglulation){for(let e=0;e<o.length;e+=1){if(o[e][0]){r[e*3+0][2]=r[e*3+1][2]=100}if(o[e][1]){r[e*3+1][0]=r[e*3+2][0]=100}if(o[e][2]){r[e*3+0][1]=r[e*3+2][1]=100}}}return{vertices_coords:n,vertices_normal:s,vertices_barycentric:r}};const oh=(e,t)=>{if(!e||!e.vertices_coords||!e.edges_vertices){return[]}const n=t&&t.dark?th:nh;const s={...n,...t};const r=e.vertices_coords.map((e=>[...e].concat(Array(3-e.length).fill(0))));const o=e.edges_vertices.flatMap((e=>e.map((e=>r[e])))).flatMap((e=>[e,e,e,e]));const c=Gs(e);const a=e.edges_assignment?e.edges_assignment.flatMap((e=>Array(8).fill(s[e]))):e.edges_vertices.flatMap((()=>Array(8).fill(s.U)));const i=c.flatMap((e=>[e,e,e,e,e,e,e,e]));const f=e.edges_vertices.flatMap((()=>[[1,0],[0,1],[-1,0],[0,-1],[1,0],[0,1],[-1,0],[0,-1]]));return{vertices_coords:o,vertices_color:a,verticesEdgesVector:i,vertices_vector:f}};const ch=Object.freeze({__proto__:null,makeFacesVertexData:rh,makeThickEdgesVertexData:oh});const ah=(e,t,n,s={})=>{if(!n||!n.vertices_coords||!n.faces_vertices){return[]}const{vertices_coords:r,vertices_normal:o,vertices_barycentric:c}=rh(n,s);return[{location:e.getAttribLocation(t,"v_position"),buffer:e.createBuffer(),type:e.FLOAT,length:r.length?r[0].length:3,data:new Float32Array(r.flat())},{location:e.getAttribLocation(t,"v_normal"),buffer:e.createBuffer(),type:e.FLOAT,length:o.length?o[0].length:3,data:new Float32Array(o.flat())},{location:e.getAttribLocation(t,"v_barycentric"),buffer:e.createBuffer(),type:e.FLOAT,length:3,data:new Float32Array(c.flat())}].filter((e=>e.location!==-1))};const ih=(e,t=1,n={})=>{if(!n||!n.vertices_coords||!n.faces_vertices){return[]}return[{mode:e.TRIANGLES,buffer:e.createBuffer(),data:t===2?new Uint32Array(n.faces_vertices.flat()):new Uint16Array(n.faces_vertices.flat())}]};const fh=(e,t,n,s={})=>{if(!n||!n.vertices_coords||!n.edges_vertices){return[]}const{vertices_coords:r,vertices_color:o,verticesEdgesVector:c,vertices_vector:a}=oh(n,s.assignment_color);return[{location:e.getAttribLocation(t,"v_position"),buffer:e.createBuffer(),type:e.FLOAT,length:r.length?r[0].length:3,data:new Float32Array(r.flat())},{location:e.getAttribLocation(t,"v_color"),buffer:e.createBuffer(),type:e.FLOAT,length:o.length?o[0].length:3,data:new Float32Array(o.flat())},{location:e.getAttribLocation(t,"edge_vector"),buffer:e.createBuffer(),type:e.FLOAT,length:c.length?c[0].length:3,data:new Float32Array(c.flat())},{location:e.getAttribLocation(t,"vertex_vector"),buffer:e.createBuffer(),type:e.FLOAT,length:a.length?a[0].length:3,data:new Float32Array(a.flat())}].filter((e=>e.location!==-1))};const lh=(e,t=1,n={})=>{if(!n||!n.edges_vertices){return[]}const s=n.edges_vertices.map(((e,t)=>t*8)).flatMap((e=>[e+0,e+1,e+4,e+4,e+1,e+5,e+1,e+2,e+5,e+5,e+2,e+6,e+2,e+3,e+6,e+6,e+3,e+7,e+3,e+0,e+7,e+7,e+0,e+4]));return[{mode:e.TRIANGLES,buffer:e.createBuffer(),data:t===2?new Uint32Array(s):new Uint16Array(s)}]};const dh=Object.freeze({__proto__:null,makeFoldedElementArrays:ih,makeFoldedVertexArrays:ah,makeThickEdgesElementArrays:lh,makeThickEdgesVertexArrays:fh});const uh=5e-6;const mh=(e,t=uh)=>{const n=JSON.parse(JSON.stringify(e));if(!n.edges_assignment){const t=sn.edges(e)||es.edges(e);n.edges_assignment=Array(t).fill("U")}let s=[];if(n.faceOrders){s=ed(n)}else if(n.faces_layer){s=td(n)}const r=Ap(n);Er(n);if(r.faces){const e=pr(r.faces.map);e.forEach(((e,r)=>{const o=s[e];if(!o){return}n.faces_vertices[r].forEach((e=>{const s=y(o.vector,o.layer*t);n.vertices_coords[e]=A(Z(3,n.vertices_coords[e]),s)}))}))}return n};const gh=(e,{projectionMatrix:t,modelViewMatrix:n,frontColor:s,backColor:r,strokeWidth:o,opacity:c})=>({u_matrix:{func:"uniformMatrix4fv",value:Fp(t,n)},u_projection:{func:"uniformMatrix4fv",value:t},u_modelView:{func:"uniformMatrix4fv",value:n},u_frontColor:{func:"uniform3fv",value:sh(s)},u_backColor:{func:"uniform3fv",value:sh(r)},u_strokeWidth:{func:"uniform1f",value:o},u_opacity:{func:"uniform1f",value:c}});const ph=`#version 300 es\nuniform mat4 u_modelView;\nuniform mat4 u_matrix;\nuniform vec3 u_frontColor;\nuniform vec3 u_backColor;\nin vec3 v_position;\nin vec3 v_normal;\nout vec3 front_color;\nout vec3 back_color;\nvoid main () {\n\tgl_Position = u_matrix * vec4(v_position, 1);\n\tvec3 light = abs(normalize((vec4(v_normal, 1) * u_modelView).xyz));\n\tfloat brightness = 0.5 + light.x * 0.15 + light.z * 0.35;\n\tfront_color = u_frontColor * brightness;\n\tback_color = u_backColor * brightness;\n}\n`;const _h=`#version 300 es\nuniform mat4 u_matrix;\nuniform mat4 u_projection;\nuniform mat4 u_modelView;\nuniform float u_strokeWidth;\nin vec3 v_position;\nin vec3 v_color;\nin vec3 edge_vector;\nin vec2 vertex_vector;\nout vec3 blend_color;\nvoid main () {\n\tvec3 edge_norm = normalize(edge_vector);\n\t// axis most dissimilar to edge_vector\n\tvec3 absNorm = abs(edge_norm);\n\tvec3 xory = absNorm.x < absNorm.y ? vec3(1,0,0) : vec3(0,1,0);\n\tvec3 axis = absNorm.x > absNorm.z && absNorm.y > absNorm.z ? vec3(0,0,1) : xory;\n\t// two perpendiculars. with edge_vector these make basis vectors\n\tvec3 one = cross(axis, edge_norm);\n\tvec3 two = cross(one, edge_norm);\n\tvec3 displaceNormal = normalize(\n\t\tone * vertex_vector.x + two * vertex_vector.y\n\t);\n\tvec3 displace = displaceNormal * (u_strokeWidth * 0.5);\n\tgl_Position = u_matrix * vec4(v_position + displace, 1);\n\tblend_color = v_color;\n}\n`;const hh=`#version 300 es\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n#else\n  precision mediump float;\n#endif\nuniform float u_opacity;\nin vec3 front_color;\nin vec3 back_color;\nin vec3 barycentric;\nout vec4 outColor;\nfloat edgeFactor(vec3 barycenter) {\n\tvec3 d = fwidth(barycenter);\n\tvec3 a3 = smoothstep(vec3(0.0), d*3.5, barycenter);\n\treturn min(min(a3.x, a3.y), a3.z);\n}\nvoid main () {\n\tgl_FragDepth = gl_FragCoord.z;\n\tvec3 color = gl_FrontFacing ? front_color : back_color;\n\toutColor = vec4(mix(vec3(0.0), color, edgeFactor(barycentric)), u_opacity);\n}\n`;const vh=`#version 100\nprecision mediump float;\nuniform float u_opacity;\nvarying vec3 barycentric;\nvarying vec3 front_color;\nvarying vec3 back_color;\nvoid main () {\n\tvec3 color = gl_FrontFacing ? front_color : back_color;\n\tvec3 boundary = vec3(0.0, 0.0, 0.0)\n\t// gl_FragDepth = 0.5;\n\tgl_FragColor = any(lessThan(barycentric, vec3(0.02)))\n\t\t? vec4(boundary, u_opacity)\n\t\t: vec4(color, u_opacity);\n}\n`;const bh=`#version 100\nattribute vec3 v_position;\nattribute vec3 v_normal;\nuniform mat4 u_projection;\nuniform mat4 u_modelView;\nuniform mat4 u_matrix;\nuniform vec3 u_frontColor;\nuniform vec3 u_backColor;\nvarying vec3 normal_color;\nvarying vec3 front_color;\nvarying vec3 back_color;\nvoid main () {\n\tgl_Position = u_matrix * vec4(v_position, 1);\n\tvec3 light = abs(normalize((vec4(v_normal, 1) * u_modelView).xyz));\n\tfloat brightness = 0.5 + light.x * 0.15 + light.z * 0.35;\n\tfront_color = u_frontColor * brightness;\n\tback_color = u_backColor * brightness;\n}\n`;const yh=`#version 100\nattribute vec3 v_position;\nattribute vec3 v_color;\nattribute vec3 edge_vector;\nattribute vec2 vertex_vector;\nuniform mat4 u_matrix;\nuniform mat4 u_projection;\nuniform mat4 u_modelView;\nuniform float u_strokeWidth;\nvarying vec3 blend_color;\nvoid main () {\n\tvec3 edge_norm = normalize(edge_vector);\n\t// axis most dissimilar to edge_vector\n\tvec3 absNorm = abs(edge_norm);\n\tvec3 xory = absNorm.x < absNorm.y ? vec3(1,0,0) : vec3(0,1,0);\n\tvec3 axis = absNorm.x > absNorm.z && absNorm.y > absNorm.z ? vec3(0,0,1) : xory;\n\t// two perpendiculars. with edge_vector these make basis vectors\n\tvec3 one = cross(axis, edge_norm);\n\tvec3 two = cross(one, edge_norm);\n\tvec3 displaceNormal = normalize(\n\t\tone * vertex_vector.x + two * vertex_vector.y\n\t);\n\tvec3 displace = displaceNormal * (u_strokeWidth * 0.5);\n\tgl_Position = u_matrix * vec4(v_position + displace, 1);\n\tblend_color = v_color;\n}\n`;const Eh=`#version 100\nprecision mediump float;\nuniform float u_opacity;\nvarying vec3 front_color;\nvarying vec3 back_color;\nvoid main () {\n\tvec3 color = gl_FrontFacing ? front_color : back_color;\n\tgl_FragColor = vec4(color, u_opacity);\n}\n`;const xh=`#version 300 es\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n#else\n  precision mediump float;\n#endif\nin vec3 blend_color;\nout vec4 outColor;\n \nvoid main() {\n\toutColor = vec4(blend_color.rgb, 1);\n}\n`;const Ah=`#version 100\nattribute vec3 v_position;\nattribute vec3 v_normal;\nattribute vec3 v_barycentric;\nuniform mat4 u_projection;\nuniform mat4 u_modelView;\nuniform mat4 u_matrix;\nuniform vec3 u_frontColor;\nuniform vec3 u_backColor;\nvarying vec3 normal_color;\nvarying vec3 barycentric;\nvarying vec3 front_color;\nvarying vec3 back_color;\nvoid main () {\n\tgl_Position = u_matrix * vec4(v_position, 1);\n\tbarycentric = v_barycentric;\n\tvec3 light = abs(normalize((vec4(v_normal, 1) * u_modelView).xyz));\n\tfloat brightness = 0.5 + light.x * 0.15 + light.z * 0.35;\n\tfront_color = u_frontColor * brightness;\n\tback_color = u_backColor * brightness;\n}\n`;const Mh=`#version 300 es\nuniform mat4 u_modelView;\nuniform mat4 u_matrix;\nuniform vec3 u_frontColor;\nuniform vec3 u_backColor;\nin vec3 v_position;\nin vec3 v_normal;\nin vec3 v_barycentric;\nin float v_rawEdge;\nout vec3 front_color;\nout vec3 back_color;\nout vec3 barycentric;\n// flat out int rawEdge;\nflat out int provokedVertex;\nvoid main () {\n\tgl_Position = u_matrix * vec4(v_position, 1);\n\tprovokedVertex = gl_VertexID;\n\tbarycentric = v_barycentric;\n\t// rawEdge = int(v_rawEdge);\n\tvec3 light = abs(normalize((vec4(v_normal, 1) * u_modelView).xyz));\n\tfloat brightness = 0.5 + light.x * 0.15 + light.z * 0.35;\n\tfront_color = u_frontColor * brightness;\n\tback_color = u_backColor * brightness;\n}\n`;const kh=`#version 300 es\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n#else\n  precision mediump float;\n#endif\nuniform float u_opacity;\nin vec3 front_color;\nin vec3 back_color;\nout vec4 outColor;\nvoid main () {\n\tgl_FragDepth = gl_FragCoord.z;\n\tvec3 color = gl_FrontFacing ? front_color : back_color;\n\toutColor = vec4(color, u_opacity);\n}\n`;const wh=`#version 100\nprecision mediump float;\nvarying vec3 blend_color;\nvoid main () {\n\tgl_FragColor = vec4(blend_color.rgb, 1);\n}\n`;const Oh=(e,t=1,n={},s={})=>{const r=mh(n,s.layerNudge);const o=t===1?W_(e,bh,Eh):W_(e,ph,kh);return{program:o,vertexArrays:ah(e,o,r,s),elementArrays:ih(e,t,r),flags:[e.DEPTH_TEST],makeUniforms:gh}};const jh=(e,t=1,n={},s={})=>{const r=t===1?W_(e,yh,wh):W_(e,_h,xh);return{program:r,vertexArrays:fh(e,r,n,s),elementArrays:lh(e,t,n),flags:[e.DEPTH_TEST],makeUniforms:gh}};const Fh=(e,t=1,n={},s={})=>{const r=mh(n,s.layerNudge);const o=t===1?W_(e,Ah,vh):W_(e,Mh,hh);return{program:o,vertexArrays:ah(e,o,r,s),elementArrays:ih(e,t,r),flags:[e.DEPTH_TEST],makeUniforms:gh}};const Ch=Object.freeze({__proto__:null,foldedFormEdges:jh,foldedFormFaces:Oh,foldedFormFacesOutlined:Fh});const Sh=(e,t=1,n={},s={})=>{const r=[];if(s.faces!==false){if(s.outlines===false){r.push(Oh(e,t,n,s))}else{r.push(Fh(e,t,n,s))}}if(s.edges===true){r.push(jh(e,t,n,s))}return r};const Ph=e=>e.map((e=>[0,1].map((t=>e[t]||0))));const Nh=(e,t)=>{if(!e||!e.vertices_coords||!e.edges_vertices){return[]}const n=t&&t.dark?th:nh;const s={...n,...t};const r=Ph(e.edges_vertices.flatMap((t=>t.map((t=>e.vertices_coords[t])))).flatMap((e=>[e,e])));const o=Ph(Gs(e));const c=e.edges_assignment?e.edges_assignment.flatMap((e=>[s[e],s[e],s[e],s[e]])):e.edges_vertices.flatMap((()=>[s.U,s.U,s.U,s.U]));const a=o.flatMap((e=>[e,e,e,e]));const i=e.edges_vertices.flatMap((()=>[[1,0],[-1,0],[-1,0],[1,0]]));return{vertices_coords:r,vertices_color:c,verticesEdgesVector:a,vertices_vector:i}};const Vh=Object.freeze({__proto__:null,makeCPEdgesVertexData:Nh});const zh=(e,t,n,s)=>{if(!n||!n.vertices_coords||!n.edges_vertices){return[]}const{vertices_coords:r,vertices_color:o,verticesEdgesVector:c,vertices_vector:a}=Nh(n,s);return[{location:e.getAttribLocation(t,"v_position"),buffer:e.createBuffer(),type:e.FLOAT,length:2,data:new Float32Array(r.flat())},{location:e.getAttribLocation(t,"v_color"),buffer:e.createBuffer(),type:e.FLOAT,length:o.length?o[0].length:2,data:new Float32Array(o.flat())},{location:e.getAttribLocation(t,"edge_vector"),buffer:e.createBuffer(),type:e.FLOAT,length:c.length?c[0].length:2,data:new Float32Array(c.flat())},{location:e.getAttribLocation(t,"vertex_vector"),buffer:e.createBuffer(),type:e.FLOAT,length:a.length?a[0].length:2,data:new Float32Array(a.flat())}].filter((e=>e.location!==-1))};const Th=(e,t=1,n={})=>{if(!n||!n.edges_vertices){return[]}const s=n.edges_vertices.map(((e,t)=>t*4)).flatMap((e=>[e+0,e+1,e+2,e+2,e+3,e+0]));return[{mode:e.TRIANGLES,buffer:e.createBuffer(),data:t===2?new Uint32Array(s):new Uint16Array(s)}]};const $h=e=>e.map((e=>[0,1].map((t=>e[t]||0))));const Bh=(e,t,n)=>{if(!n||!n.vertices_coords){return[]}return[{location:e.getAttribLocation(t,"v_position"),buffer:e.createBuffer(),type:e.FLOAT,length:2,data:new Float32Array($h(n.vertices_coords).flat())}].filter((e=>e.location!==-1))};const Lh=(e,t=1,n={})=>{if(!n||!n.vertices_coords||!n.faces_vertices){return[]}return[{mode:e.TRIANGLES,buffer:e.createBuffer(),data:t===2?new Uint32Array(vp(n).flat()):new Uint16Array(vp(n).flat())}]};const Ih=Object.freeze({__proto__:null,makeCPEdgesElementArrays:Th,makeCPEdgesVertexArrays:zh,makeCPFacesElementArrays:Lh,makeCPFacesVertexArrays:Bh});const Uh=(e,{projectionMatrix:t,modelViewMatrix:n,cpColor:s,strokeWidth:r})=>({u_matrix:{func:"uniformMatrix4fv",value:Fp(t,n)},u_projection:{func:"uniformMatrix4fv",value:t},u_modelView:{func:"uniformMatrix4fv",value:n},u_cpColor:{func:"uniform3fv",value:sh(s)},u_strokeWidth:{func:"uniform1f",value:r}});const Rh=`#version 300 es\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n#else\n  precision mediump float;\n#endif\nin vec3 blend_color;\nout vec4 outColor;\nvoid main() {\n\toutColor = vec4(blend_color.rgb, 1);\n}\n`;const qh=`#version 100\nprecision mediump float;\nvarying vec3 blend_color;\nvoid main () {\n\tgl_FragColor = vec4(blend_color.rgb, 1);\n}\n`;const Dh=`#version 300 es\nuniform mat4 u_matrix;\nuniform float u_strokeWidth;\nin vec2 v_position;\nin vec3 v_color;\nin vec2 edge_vector;\nin vec2 vertex_vector;\nout vec3 blend_color;\nvoid main () {\n\tfloat sign = vertex_vector[0];\n\tfloat halfWidth = u_strokeWidth * 0.5;\n\tvec2 side = normalize(vec2(edge_vector.y * sign, -edge_vector.x * sign)) * halfWidth;\n\tgl_Position = u_matrix * vec4(side + v_position, 0, 1);\n\tblend_color = v_color;\n}\n`;const Wh=`#version 100\nuniform mat4 u_matrix;\nuniform float u_strokeWidth;\nattribute vec2 v_position;\nattribute vec3 v_color;\nattribute vec2 edge_vector;\nattribute vec2 vertex_vector;\nvarying vec3 blend_color;\nvoid main () {\n\tfloat sign = vertex_vector[0];\n\tfloat halfWidth = u_strokeWidth * 0.5;\n\tvec2 side = normalize(vec2(edge_vector.y * sign, -edge_vector.x * sign)) * halfWidth;\n\tgl_Position = u_matrix * vec4(side + v_position, 0, 1);\n\tblend_color = v_color;\n}\n`;const Gh=`#version 100\nuniform mat4 u_matrix;\nuniform vec3 u_cpColor;\nattribute vec2 v_position;\nvarying vec3 blend_color;\nvoid main () {\n\tgl_Position = u_matrix * vec4(v_position, 0, 1);\n\tblend_color = u_cpColor;\n}\n`;const Hh=`#version 300 es\nuniform mat4 u_matrix;\nuniform vec3 u_cpColor;\nin vec2 v_position;\nout vec3 blend_color;\nvoid main () {\n\tgl_Position = u_matrix * vec4(v_position, 0, 1);\n\tblend_color = u_cpColor;\n}\n`;const Jh=(e,t={},n=undefined)=>{const s=W_(e,Gh,qh);return{program:s,vertexArrays:Bh(e,s,t),elementArrays:Lh(e,1,t),flags:[],makeUniforms:Uh}};const Qh=(e,t={},n=undefined)=>{const s=W_(e,Wh,qh);return{program:s,vertexArrays:zh(e,s,t,n),elementArrays:Th(e,1,t),flags:[],makeUniforms:Uh}};const Zh=(e,t={},n=undefined)=>{const s=W_(e,Hh,Rh);return{program:s,vertexArrays:Bh(e,s,t),elementArrays:Lh(e,2,t),flags:[],makeUniforms:Uh}};const Yh=(e,t={},n=undefined)=>{const s=W_(e,Dh,Rh);return{program:s,vertexArrays:zh(e,s,t,n),elementArrays:Th(e,2,t),flags:[],makeUniforms:Uh}};const Xh=Object.freeze({__proto__:null,cpEdgesV1:Qh,cpEdgesV2:Yh,cpFacesV1:Jh,cpFacesV2:Zh});const Kh=(e,t=1,n={},s=undefined)=>{switch(t){case 1:return[Jh(e,n,s),Qh(e,n,s)];case 2:default:return[Zh(e,n,s),Yh(e,n,s)]}};const ev=Object.assign(Object.create(null),{createProgram:W_,initialize:G_,foldedForm:Sh,creasePattern:Kh},Z_,eh,dh,ch,Ch,Ih,Vh,Xh);const tv=({vertices_coords:e,edges_vertices:t})=>{const n=t.map((t=>t.map((t=>e[t])))).map((e=>I(...e)));const s=n.reduce(((e,t)=>Math.min(e,t)),Infinity);return s===Infinity?undefined:s};const nv=({vertices_coords:e,edges_vertices:t})=>{const n=tv({vertices_coords:e,edges_vertices:t});if(n){return Math.max(n*1e-4,1e-10)}const s=lc({vertices_coords:e});return s&&s.span?Math.max(1e-6*Math.max(...s.span),1e-10):1e-6};const sv=e=>pr(pr(e).reverse());const rv=(e,t)=>{const n=[];const s=Hl(e);const r=e.edges_faces?e.edges_faces:Ls(e);r.forEach(((e,r)=>{if(e.length===1){n[r]="B"}if(e.length===2){const o=e.map((e=>s[e]));if(o[0]===o[1]){n[r]="F";return}const c=e.map((e=>t[e]));const a=c[0]<c[1];const i=o[0]?a:!a;n[r]=i?"V":"M"}}));return n};const ov=e=>{const t=[];e.forEach((e=>{t[e[0]]=undefined;t[e[1]]=undefined}));const n=t.map((()=>[]));e.forEach((([e,t,s])=>{n[e][t]=s;n[t][e]=-s}));return n};const cv=Object.freeze({__proto__:null,faceOrdersToMatrix:ov,facesLayerToEdgesAssignments:rv,flipFacesLayer:sv,makeEpsilon:nv});const av={taco_taco:e=>[[e[0],e[2]],[e[1],e[3]],[e[1],e[2]],[e[0],e[3]],[e[0],e[1]],[e[2],e[3]]],taco_tortilla:e=>[[e[0],e[2]],[e[0],e[1]],[e[1],e[2]]],tortilla_tortilla:e=>[[e[0],e[2]],[e[1],e[3]]],transitivity:e=>[[e[0],e[1]],[e[1],e[2]],[e[2],e[0]]]};const iv=e=>e[0]<e[1]?`${e[0]} ${e[1]}`:`${e[1]} ${e[0]}`;const fv={taco_taco:e=>[iv([e[0],e[2]]),iv([e[1],e[3]]),iv([e[1],e[2]]),iv([e[0],e[3]]),iv([e[0],e[1]]),iv([e[2],e[3]])],taco_tortilla:e=>[iv([e[0],e[2]]),iv([e[0],e[1]]),iv([e[1],e[2]])],tortilla_tortilla:e=>[iv([e[0],e[2]]),iv([e[1],e[3]])],transitivity:e=>[iv([e[0],e[1]]),iv([e[1],e[2]]),iv([e[2],e[0]])]};const lv={0:0,1:1,2:-1};const dv=(e,t)=>{const n=Object.keys(e);const s=n.map((e=>e.split(" ").map((e=>parseInt(e,10)))));s.forEach(((s,r)=>{const o=lv[e[n[r]]];const c=!t[s[1]]?-o:o;s.push(c)}));return s};const uv=Object.freeze({__proto__:null,constraintToFacePairs:av,constraintToFacePairsStrings:fv,solverSolutionToFaceOrders:dv});const mv=({taco_taco:e,taco_tortilla:t,tortilla_tortilla:n,transitivity:s})=>{const r={};r.taco_taco=e.map((e=>[e[0][0],e[1][0],e[0][1],e[1][1]]));r.taco_tortilla=t.map((e=>[e.taco[0],e.tortilla,e.taco[1]]));r.tortilla_tortilla=n.map((e=>[e[0][0],e[0][1],e[1][0],e[1][1]]));r.transitivity=s.map((e=>[e[0],e[1],e[2]]));return r};const gv=e=>{const t={};Object.keys(e).forEach((e=>{t[e]={}}));Object.keys(e).forEach((n=>{e[n].forEach(((e,s)=>fv[n](e).forEach((e=>{if(t[n][e]===undefined){t[n][e]=[]}t[n][e].push(s)}))))}));return t};const pv=({vertices_coords:e,edges_vertices:t,edges_faces:n,faces_center:s})=>{const r=t.map((t=>e[t[0]]));const o=t.map((t=>O(e[t[1]],e[t[0]])));return n.map(((e,t)=>e.map((e=>B(O(s[e],r[t]),o[t]))).map((e=>Math.sign(e)))))};const _v=({vertices_coords:e,edges_vertices:t,faces_center:n},s,r)=>{const o=s.map((n=>t[n[0]].map((t=>e[t]))));const c=o.map((e=>e[0]));const a=o.map((e=>O(e[1],e[0])));const i=r.map((e=>e.map((e=>e.map((e=>n[e]))))));return i.map(((e,t)=>e.map((e=>e.map((e=>B(O(e,c[t]),a[t]))).map((e=>Math.sign(e)))))))};const hv=e=>{if(e[0]===1&&e[1]===-1||e[0]===-1&&e[1]===1){return"both"}if(e[0]===1&&e[1]===1){return"right"}if(e[0]===-1&&e[1]===-1){return"left"}return undefined};const vv=e=>e[0]===e[1]&&e[0]!=="both";const bv=e=>e[0]===e[1]&&e[0]==="both";const yv=e=>e[0]!==e[1]&&(e[0]==="both"||e[1]==="both");const Ev=(e,t,n)=>{const s=t[0]==="left"||t[1]==="left"?-1:1;const r=t[0]==="both"?[...e[1]]:[...e[0]];const o=t[0]==="both"?0:1;const c=n[o][0]===s?e[o][0]:e[o][1];return{taco:r,tortilla:c}};const xv=(e,t)=>{if(e===undefined){return undefined}return t[0][0]===t[1][0]?e:[e[0],[e[1][1],e[1][0]]]};const Av=(e,t,n)=>{const s=t.map((e=>e.length===2&&e[0]!==e[1])).map(((e,t)=>e?t:undefined)).filter((e=>e!==undefined));const r=[];s.forEach((e=>{r[e]=n[e]}));const o=r.map(((t,n)=>t.map((t=>[e[n],[t,t]])))).reduce(((e,t)=>e.concat(t)),[]);return o};const Mv=({vertices_coords:e,edges_vertices:t,edges_faces:n,faces_vertices:s,faces_center:r,edges_vector:o},c=a)=>{if(!r){r=nr({vertices_coords:e,faces_vertices:s})}const i=pv({vertices_coords:e,edges_vertices:t,edges_faces:n,faces_center:r});const f=e_({vertices_coords:e,edges_vertices:t,edges_vector:o},c);const l=r_({vertices_coords:e,edges_vertices:t,edges_faces:n,faces_vertices:s},c);const d=dn(f).filter((e=>e.map((e=>n[e].length>1)).reduce(((e,t)=>e&&t),true)));const u=d.map((e=>e.map((e=>n[e]))));const m=_v({vertices_coords:e,edges_vertices:t,faces_center:r},d,u);const g=m.map((e=>e.map(hv)));const p=g.map(((e,t)=>vv(e)?u[t]:undefined)).filter((e=>e!==undefined));const _=g.map(((e,t)=>bv(e)?u[t]:undefined)).map(((e,t)=>xv(e,m[t]))).filter((e=>e!==undefined));const h=Av(n,i,l);const v=_.concat(h);const b=g.map(((e,t)=>yv(e)?Ev(u[t],g[t],m[t]):undefined)).filter((e=>e!==undefined));const y=l.map(((e,t)=>i[t].length>1&&i[t][0]===i[t][1]?e:[]));const E=y.map(((e,t)=>({taco:n[t],tortillas:e}))).filter((e=>e.tortillas.length));const x=E.flatMap((e=>e.tortillas.map((t=>({taco:[...e.taco],tortilla:t})))));const A=b.concat(x);return{taco_taco:p,tortilla_tortilla:v,taco_tortilla:A}};const kv=({faces_polygon:e},t,n=a)=>{const s=t.map((()=>[]));t.forEach(((e,t)=>e.forEach((e=>{s[t][e]=true;s[e][t]=true}))));const r=[];t.forEach(((t,s)=>t.forEach((t=>{const o=Rd(e[s],e[t],n);if(o){if(!r[s]){r[s]=[]}if(!r[t]){r[t]=[]}r[s][t]=o;r[t][s]=o}}))));const o=[];for(let t=0;t<r.length-1;t+=1){if(!r[t]){continue}for(let c=t+1;c<r.length;c+=1){if(!r[t][c]){continue}for(let a=c+1;a<r.length;a+=1){if(t===a||c===a){continue}if(!s[t][a]||!s[c][a]){continue}const i=Rd(r[t][c],e[a],n);if(i){o.push([t,c,a].sort(((e,t)=>e-t)))}}}}return o};const wv=(e,{taco_taco:t,taco_tortilla:n})=>{const s={};t.map((e=>[e[0][0],e[0][1],e[1][0],e[1][1]].sort(((e,t)=>e-t)))).forEach((e=>[`${e[0]} ${e[1]} ${e[2]}`,`${e[0]} ${e[1]} ${e[3]}`,`${e[0]} ${e[2]} ${e[3]}`,`${e[1]} ${e[2]} ${e[3]}`].forEach((e=>{s[e]=true}))));n.map((e=>[e.taco[0],e.taco[1],e.tortilla].sort(((e,t)=>e-t)).join(" "))).forEach((e=>{s[e]=true}));return e.filter((e=>s[e.join(" ")]===undefined))};const Ov=Object.freeze({__proto__:null,filterTransitivity:wv,makeTransitivity:kv});const jv=({vertices_coords:e,edges_vertices:t,edges_faces:n,faces_vertices:s,faces_edges:r,edges_vector:o},c=a)=>{const i=Hl({vertices_coords:e,faces_vertices:s});const f=Ks({vertices_coords:e,faces_vertices:s},c);i.map(((e,t)=>e?undefined:t)).filter((e=>e!==undefined)).forEach((e=>f[e].reverse()));const l=c_({vertices_coords:e,faces_vertices:s},c);const{taco_taco:d,taco_tortilla:u,tortilla_tortilla:m}=Mv({vertices_coords:e,edges_vertices:t,edges_faces:n,faces_vertices:s,faces_edges:r,edges_vector:o},c);const g=kv({faces_polygon:f},l,c);const p=wv(g,{taco_taco:d,taco_tortilla:u});const _=dn(l).map((e=>e.join(" ")));const h=mv({taco_taco:d,taco_tortilla:u,tortilla_tortilla:m,transitivity:p});const v=gv(h);return{constraints:h,lookup:v,facePairs:_,faces_winding:i}};const Fv=Object.freeze({__proto__:null,setup:jv});const Cv=({edges_faces:e,edges_assignment:t},n,s)=>{const r={0:0,1:2,2:1};const o={M:1,m:1,V:2,v:2};const c={};n.forEach((e=>{c[e]=true}));const a={};e.forEach(((e,n)=>{const i=t[n];const f=o[i];if(e.length<2||f===undefined){return}const l=s[e[0]];const d=l?f:r[f];const u=`${e[0]} ${e[1]}`;const m=`${e[1]} ${e[0]}`;if(u in c){a[u]=d}if(m in c){a[m]=r[d]}}));return a};const Sv=["111112","111121","111222","112111","121112","121222","122111","122212","211121","211222","212111","212221","221222","222111","222212","222221"];const Pv=["112","121","212","221"];const Nv=["11","22"];const Vv=["112","121","122","211","212","221"];const zv=(e,t,n)=>{const s=Array.from(n).map((e=>parseInt(e,10)));if(s.filter((e=>e===0)).length!==t){return}e[t][n]=false;let r=false;for(let n=0;n<s.length;n+=1){const o=[];if(s[n]!==0){continue}for(let r=1;r<=2;r+=1){s[n]=r;if(e[t-1][s.join("")]!==false){o.push([n,r])}}s[n]=0;if(o.length>0&&r===false){r=[]}if(o.length===1){r.push(o[0])}}if(r!==false&&r.length===0){r=true}e[t][n]=r};const Tv=e=>{const t=e[0].length;const n=Array.from(Array(t+1)).map((()=>({})));Array.from(Array(2**t)).map(((e,t)=>t.toString(2))).map((e=>Array.from(e).map((e=>parseInt(e,10)+1)).join(""))).map((e=>`11111${e}`.slice(-t))).forEach((e=>{n[0][e]=false}));e.forEach((e=>{n[0][e]=true}));Array.from(Array(t)).map(((e,t)=>t+1)).map((e=>Array.from(Array(3**t)).map(((e,t)=>t.toString(3))).map((e=>`000000${e}`.slice(-t))).forEach((t=>zv(n,e,t)))));let s=[];Array.from(Array(t+1)).map(((e,n)=>t-n)).forEach((e=>{const t=[];Object.keys(n[e]).forEach((s=>{let r=n[e][s];if(r.constructor===Array){r=r[0]}t.push([s,r])}));s=s.concat(t)}));s.sort(((e,t)=>parseInt(e[0],10)-parseInt(t[0],10)));const r={};s.forEach((e=>{r[e[0]]=Object.freeze(e[1])}));return Object.freeze(r)};const $v={taco_taco:Tv(Sv),taco_tortilla:Tv(Pv),tortilla_tortilla:Tv(Nv),transitivity:Tv(Vv)};const Bv=Object.freeze(Object.keys($v));const Lv=(e,t,...n)=>{const s={0:0,1:2,2:1};const r=av[e](t);const o=r.map((e=>e[1]<e[0]));const c=r.map(((e,t)=>o[t]?`${e[1]} ${e[0]}`:`${e[0]} ${e[1]}`));const a=c.map(((e,t)=>{for(let r=0;r<n.length;r+=1){if(n[r][e]){return o[t]?s[n[r][e]]:n[r][e]}}return 0})).join("");if($v[e][a]===true||$v[e][a]===false){return $v[e][a]}const i=$v[e][a];const f=c[i[0]];const l=o[i[0]]?s[i[1]]:i[1];return[f,l]};const Iv=(e,t,n)=>{const s={};Bv.forEach((r=>{const o=n.flatMap((e=>t[r][e]));s[r]=rn(o).filter((t=>e[r][t]))}));return s};const Uv=(e,t,n,...s)=>{let r=n;const o={};do{const n=Iv(e,t,r);const c={};for(let t=0;t<Bv.length;t+=1){const r=Bv[t];const a=n[r];for(let t=0;t<a.length;t+=1){const n=Lv(r,e[r][a[t]],...s,o);if(n===true){continue}if(n===false){throw new Error(`invalid ${r} ${a[t]}:${e[r][a[t]]}`)}if(o[n[0]]){if(o[n[0]]!==n[1]){throw new Error(`conflict ${r} ${a[t]}:${e[r][a[t]]}`)}}else{const[e,t]=n;c[e]=true;o[n[0]]=t}}}r=Object.keys(c)}while(r.length);return o};const Rv=(e,t,n)=>{const s=Object.keys(t);const r={};e.forEach((e=>{r[e]=true}));let o=0;const c=[];while(o<e.length){if(!r[e[o]]){o+=1;continue}const a=[];const i=[e[o]];const f={[e[o]]:true};do{const e=i.pop();delete r[e];a.push(e);const o={};s.forEach((s=>{const r=n[s][e];if(!r){return}r.map((e=>t[s][e])).map((e=>fv[s](e).forEach((e=>{o[e]=true}))))}));const c=Object.keys(o).filter((e=>r[e])).filter((e=>!f[e]));i.push(...c);c.forEach((e=>{f[e]=true}))}while(i.length);o+=1;c.push(a)}return c};const qv=(e,t,n,...s)=>{if(!n.length){return[]}const r=n[0];const o=[];const c=[];[1,2].forEach((a=>{let i;try{i=Uv(e,t,[r],...s,{[r]:a})}catch(e){return}i[r]=a;if(Object.keys(i).length===n.length){o.push(i)}else{c.push(i)}}));const a=c.map((r=>qv(e,t,n.filter((e=>!(e in r))),...s,r)));return o.map((e=>[...s,e])).concat(...a)};const Dv=({constraints:e,lookup:t,facePairs:s,orders:r})=>{let o;try{o=Uv(e,t,Object.keys(r),r)}catch(e){throw new Error(n.noLayerSolution,{cause:e})}const c=s.filter((e=>!(e in r))).filter((e=>!(e in o)));let a;try{a=Rv(c,e,t).map((n=>qv(e,t,n,r,o)))}catch(e){throw new Error(n.noLayerSolution,{cause:e})}const i={...r,...o};const f=a.map((e=>e.map((e=>Object.assign({},...e)))));return{root:i,branches:f}};const Wv=e=>{const t=e.reduce(((e,t)=>e*t),1);const n=e.slice();for(let e=n.length-2;e>=0;e-=1){n[e]*=n[e+1]}n.push(1);n.shift();return Array.from(Array(t)).map(((t,s)=>e.map(((e,t)=>Math.floor(s/n[t])%e))))};const Gv={count:function(){return this.branches.map((e=>e.length))},faceOrders:function(...e){return dv(this.compile(...e),this.faces_winding)},facesLayer:function(...e){return pr(this.linearize(...e).reverse())},compile:function(...e){const t=Array(this.branches.length).fill(0).map(((t,n)=>e[n]!=null?e[n]:t));const n=this.branches?this.branches.map(((e,n)=>e[t[n]])):[];return Object.assign({},this.root,...n)},directedPairs:function(...e){const t=this.compile(...e);return Object.keys(t).map((e=>t[e]===1?e.split(" "):e.split(" ").reverse())).map((e=>e.map((e=>parseInt(e,10)))))},linearize:function(...e){return Ql(this.directedPairs(...e))},allSolutions:function(){return Wv(this.count()).map((e=>this.compile(...e)))},allFacesLayers:function(){return Wv(this.count()).map((e=>this.facesLayer(...e)))}};const Hv=()=>({root:{},branches:[],faces_winding:[]});const Jv=({vertices_coords:e,edges_vertices:t,edges_faces:n,edges_assignment:s,faces_vertices:r,faces_edges:o,edges_vector:c},a)=>{if(!e||!t||!r){return Object.assign(Object.create(Gv),Hv())}if(!o){o=Ys({edges_vertices:t,faces_vertices:r})}if(!n){n=Bs({edges_vertices:t,faces_edges:o})}if(a===undefined){a=nv({vertices_coords:e,edges_vertices:t})}const{constraints:i,lookup:f,facePairs:l,faces_winding:d}=jv({vertices_coords:e,edges_vertices:t,edges_faces:n,faces_vertices:r,faces_edges:o,edges_vector:c},a);const u=Cv({edges_faces:n,edges_assignment:s},l,d);const{root:m,branches:g}=Dv({constraints:i,lookup:f,facePairs:l,orders:u});return Object.assign(Object.create(Gv),{root:m,branches:g,faces_winding:d})};const Qv=(e,t,n=a)=>{const s=e[0]<e[1]?e:[e[1],e[0]];const r=t[0]<t[1]?t:[t[1],t[0]];const o=Math.min(s[1],r[1])-Math.max(s[0],r[0]);return o>n};const Zv=({vertices_coords:e,edges_vertices:t},n,s,r=a)=>{const o=n.map((n=>t[n].map((t=>e[t]))));const c=o.map((e=>e.map((e=>F(e,s)))));const i=Qv(...c,r);return i};const Yv=(e,t)=>{if(e.orders){e.orders=e.orders.flatMap((e=>dv(e,t)))}if(e.leaves){e.leaves=e.leaves.map((e=>dv(e,t)))}if(e.partitions){e.partitions.forEach((e=>Yv(e,t)))}if(e.node){e.node.forEach((e=>Yv(e,t)))}return e};const Xv=Object.freeze({__proto__:null,doEdgesOverlap:Zv,doRangesOverlap:Qv,reformatSolution:Yv});const Kv=({vertices_coords:e,edges_vertices:t},n=a)=>{const{lines:s,edges_line:r}=io({vertices_coords:e,edges_vertices:t},n);const o=r.map((e=>s[e].vector));const c=Ws({vertices_coords:e,edges_vertices:t}).map(((e,t)=>e.map((e=>F(o[t],e)))));return pr(r).map((e=>e.constructor===Array?e:[e])).flatMap((e=>_n(e).filter((e=>Qv(...e.map((e=>c[e])))))))};const eb=({vertices_coords:e,edges_vertices:t,edges_faces:n,edges_foldAngle:s,faces_center:r},o,c,i,f=a)=>{const l=s.map(Pt);const d=Kv({vertices_coords:e,edges_vertices:t},f).map((e=>e[0]<e[1]?e:e.slice().reverse())).filter((e=>!(l[e[0]]&&l[e[1]]))).filter((e=>e.map((e=>n[e].length===2)).reduce(((e,t)=>e&&t),true))).filter((e=>e.map((e=>o[e]!==undefined)).reduce(((e,t)=>e&&t),true))).filter((e=>Array.from(new Set(e.flatMap((e=>o[e])))).length!==4));const u=d.map((e=>e.map((e=>o[e]))));const m=u.map((e=>Array.from(new Set(e.flat()))));const g=u.map(((e,t)=>{const n={};e.flat().forEach((e=>{n[e]=[]}));e.forEach(((e,s)=>e.forEach((e=>n[e].push(d[t][s])))));return n}));const p=d.map((e=>e.map((e=>n[e]))));const _=p.map(((e,t)=>{const n={};m[t].forEach((e=>{n[e]=[]}));e.flat().forEach((e=>n[c[e]].push(e)));return n}));const h=Ws({vertices_coords:e,edges_vertices:t});const v=m.map(((e,t)=>{const n=h[d[t][0]];const s={};e.forEach((e=>{s[e]=n.map((t=>Op(i[e],t))).map((e=>[e[0],e[1]]))}));return s}));const b=_.map(((e,t)=>{const n={};m[t].forEach((s=>{const o=v[t][s][0];n[s]=e[s].map((e=>B(O(r[e],o),O(v[t][s][1],o)))).map((e=>Math.sign(e)))}));return n}));const y=b.map(((e,t)=>{const n={};m[t].forEach((t=>{n[t]=e[t].reduce(((n,s)=>n&&s===e[t][0]),true)}));return n}));const E=d.map(((e,t)=>{const n={};Object.keys(g[t]).forEach((e=>{n[e]={edges:g[t][e],faces:_[t][e],facesSides:b[t][e],facesSameSide:y[t][e]}}));return{edges:e,sets:n}}));const x=E.filter((e=>{const t=Object.values(e.sets).map((e=>e.faces.length===2)).reduce(((e,t)=>e&&t),true);const n=Object.values(e.sets).map((e=>e.facesSameSide)).reduce(((e,t)=>e&&t),true);return t&&n}));const A=E.filter((e=>{const t=Object.values(e.sets).length===3;const n=Object.values(e.sets).map((e=>e.facesSameSide)).reduce(((e,t)=>e&&t),true);return t&&n}));const M=E.filter((e=>{const t=Object.values(e.sets).map((e=>e.faces.length===2)).reduce(((e,t)=>e&&t),true);const n=Object.values(e.sets).map((e=>e.facesSameSide));const s=n[0]!==n[1];return t&&s}));const k=E.filter((e=>{const t=Object.values(e.sets).filter((e=>e.faces.length===3)).shift();const s=t!==undefined;if(!s){return false}const r=t.facesSides.reduce(((e,t)=>e+t),0);const o=Math.abs(r)===1;if(!o){return false}const c=t.faces.filter(((e,n)=>t.facesSides[n]===r));const a=t.edges.map((e=>n[e].map((e=>c.includes(e))).reduce(((e,t)=>e&&t),true))).reduce(((e,t)=>e||t),false);const i=!a;return s&&o&&i}));if(k.length){console.log("This model contains the third case",k)}return{tortillaTortillaEdges:x,solvable1:A,solvable2:M,solvable3:[]}};const tb=({edges_faces:e},t,n,s)=>{const r=t.map((e=>e.edges)).map((t=>t.map((t=>e[t].slice()))));r.forEach(((e,t)=>{if(n[e[0][0]]!==n[e[1][0]]){r[t][1].reverse()}}));r.map((e=>[e[0][0],e[0][1]])).map((e=>e.map((e=>s[e])))).map(((e,t)=>e[0]!==e[1]?t:undefined)).filter((e=>e!==undefined)).forEach((e=>{const t=r[e][0][1];r[e][0][1]=r[e][1][1];r[e][1][1]=t}));return r};const nb=(e,t,n=a)=>{const s=t.map((t=>Vr(e,t,at,n))).reduce(((e,t)=>e||t),false);if(s){return true}const r=Ud(e,{vector:O(t[1],t[0]),origin:t[0]},at,mt,n);return r!==undefined};const sb=({vertices_coords:e,edges_vertices:t,edges_faces:n,edges_foldAngle:s},r,o,c,i,f,l,d,u=a)=>{const m=c.slice();m.forEach(((e,t)=>{if(e.length<2){delete m[t]}}));const g=n.map((e=>{const t={};e.forEach((e=>{t[e]=true}));return t}));const p=d.map((e=>e.filter((e=>m[e]!==undefined)).map((e=>m[e]))));d.map(((e,t)=>t)).filter((e=>p[e].length<2)).forEach((e=>delete p[e]));const _=p.map(((e,t)=>e.map((e=>e.filter((e=>g[t][e]))))));const h=p.map(((e,t)=>e.map((e=>e.filter((e=>!g[t][e]))))));const v=p.map(((n,s)=>t[s].map((t=>e[t]))));const b=h.map(((e,t)=>e.map((e=>e.map((e=>{const n=v[t].map((t=>Op(o[i[e]],t)));const s=n.map((e=>[e[0],e[1]]));return nb(f[e],s,u)?e:undefined})).filter((e=>e!==undefined))))));const y=p.flatMap(((e,t)=>b[t].flatMap(((e,n)=>{const s=1-n;const r=_[t];return e.map((e=>({edge:t,faces:[r[n][0],r[s][0]],overlap:e,set:i[e]})))}))));const E=y.map((e=>[e.faces[0],e.overlap]));const x=E.map((e=>e[0]<e[1]));x.forEach(((e,t)=>{if(!e){E[t].reverse()}}));const A=y.map((e=>l[e.faces[0]]));const M=y.map((e=>s[e.edge])).map(Math.sign).map((e=>e===1));const k=y.map(((e,t)=>A[t]^M[t]));const w=k.map(((e,t)=>x[t]?e:1-e)).map((e=>e+1));const O={};E.forEach(((e,t)=>{O[e.join(" ")]=w[t]}));return O};const rb=({edges_foldAngle:e,faces_winding:t},n,s)=>{const r=n.map((t=>t.map((t=>e[t]))));const o=s.map((e=>e.map((e=>t[e]))));const c=r.map(((e,t)=>e.map(((e,n)=>o[t][n]?e:-e))));const a=c.map((e=>e[0]>e[1]));const i=s.map((e=>e[0]<e[1]));const f=s.map(((e,t)=>a[t]^i[t]));const l={};const d=s.map(((e,t)=>i[t]?e:e.slice().reverse())).map((e=>e.join(" ")));f.map((e=>e+1)).forEach(((e,t)=>{l[d[t]]=e}));return l};const ob=({edges_foldAngle:e,faces_winding:t},n)=>{const s=n.map((e=>Object.values(e.sets).sort(((e,t)=>t.faces.length-e.faces.length)).shift()));const r=s.map((e=>e.edges));const o=s.map((e=>e.faces));return rb({edges_foldAngle:e,faces_winding:t},r,o)};const cb=({edges_foldAngle:e,faces_winding:t},n)=>{const s=n.map((e=>Object.values(e.sets).filter((e=>e.facesSameSide)).shift()));const r=s.map((e=>e.edges));const o=s.map((e=>e.faces));return rb({edges_foldAngle:e,faces_winding:t},r,o)};const ab=({edges_foldAngle:e,faces_winding:t},n)=>({});const ib=({edges_foldAngle:e,faces_winding:t},n,s,r)=>{const o=ob({edges_foldAngle:e,faces_winding:t},n);const c=cb({edges_foldAngle:e,faces_winding:t},s);const a=ab({edges_foldAngle:e,faces_winding:t});return{...o,...c,...a}};const fb=(e,t,n)=>{const s=(e,t)=>{const n=Op(e,t);return[n[0],n[1]]};const r=e.vertices_coords.map((e=>Z(3,e)));const o=t.map((t=>cc(e,t)));n.forEach(((e,t)=>{o[t].vertices_coords=o[t].vertices_coords.map(((t,n)=>s(e,r[n])))}));const c=e.edges_foldAngle.map(Pt).map(((e,t)=>!e?t:undefined)).filter((e=>e!==undefined));const a=zt(e,"edges");o.forEach((e=>c.forEach((t=>a.forEach((n=>{delete e[n][t]}))))));return o};const lb=Object.freeze({__proto__:null,graphGroupCopies:fb});const db=({edges_vertices:e,faces_edges:t},n)=>{const s=e.map((()=>({})));n.forEach(((e,n)=>t[n].forEach((t=>{s[t][e]=true}))));const r=s.map((e=>Object.keys(e).map((e=>parseInt(e,10))).sort(((e,t)=>e-t))));return r};const ub=({vertices_coords:e,edges_vertices:t,edges_faces:n,edges_foldAngle:s,faces_edges:r,faces_winding:o,faces_center:c},a,i,f,l,d,u,m)=>{const g=u.map((e=>f[e[0]]));const p=pr(g).map((e=>e.constructor===Array?e:[e]));const _=p.map((e=>e.map((e=>d[e]))));const h=db({edges_vertices:t,faces_edges:r},f);h.map(((e,t)=>e.length!==2?t:undefined)).filter((e=>e!==undefined)).forEach((e=>delete h[e]));const{tortillaTortillaEdges:v,solvable1:b,solvable2:y,solvable3:E}=eb({vertices_coords:e,edges_vertices:t,edges_faces:n,edges_foldAngle:s,faces_center:c},h,f,i,m);const x=tb({edges_faces:n},v,f,o);const A=sb({vertices_coords:e,edges_vertices:t,edges_faces:n,edges_foldAngle:s},_,i,a,f,l,o,h,m);const M=ib({edges_foldAngle:s,faces_winding:o},b,y);const k={...A,...M};return{tortillas3D:x,orders:k}};const mb=({vertices_coords:e,edges_vertices:t,edges_faces:n,edges_assignment:s,edges_foldAngle:r,faces_vertices:o,faces_edges:c,faces_faces:i},f=a)=>{const{sets_faces:l,sets_transformXY:d,faces_set:u,faces_winding:m}=Yp({vertices_coords:e,faces_vertices:o,faces_faces:i},f);const g=fb({vertices_coords:e,edges_vertices:t,edges_faces:n,edges_assignment:s,edges_foldAngle:r,faces_vertices:o,faces_edges:c,faces_faces:i},l,d);const p=fn(...g.map((e=>Ks(e,f))));m.map(((e,t)=>e?undefined:t)).filter((e=>e!==undefined)).forEach((e=>p[e].reverse()));const _=fn(...g.map((e=>c_(e,f))));const h=p.map((e=>T(...e)));g.forEach((e=>{e.faces_center=e.faces_vertices.map(((e,t)=>h[t]))}));const v=g.map((e=>Mv(e,f)));const b=v.flatMap((e=>e.taco_taco));const y=v.flatMap((e=>e.taco_tortilla));const E=v.flatMap((e=>e.tortilla_tortilla));const x=kv({faces_polygon:p},_,f);const A=wv(x,{taco_taco:b,taco_tortilla:y});const M=dn(_);const k=M.map((e=>e.join(" ")));const{tortillas3D:w,orders:O}=ub({vertices_coords:e,edges_vertices:t,edges_faces:n,edges_foldAngle:r,faces_edges:c,faces_winding:m,faces_center:h},l,d,u,p,k,M,f);E.push(...w);const j=mv({taco_taco:b,taco_tortilla:y,tortilla_tortilla:E,transitivity:A});const F=gv(j);g.map((e=>Cv(e,k,m))).forEach((e=>Object.assign(O,e)));return{constraints:j,lookup:F,facePairs:k,faces_winding:m,orders:O}};const gb=Object.freeze({__proto__:null,setup:mb});const pb=()=>({root:{},branches:[],faces_winding:[]});const _b=({vertices_coords:e,edges_vertices:t,edges_faces:n,edges_assignment:s,edges_foldAngle:r,faces_vertices:o,faces_edges:c,faces_faces:a},i)=>{if(!e||!t||!o){return Object.assign(Object.create(Gv),pb())}if(!c){c=Ys({edges_vertices:t,faces_vertices:o})}if(!n){n=Bs({edges_vertices:t,faces_edges:c})}if(!a){a=Xs({faces_vertices:o})}if(!r&&s){r=qs({edges_assignment:s})}if(!s){s=Us({edges_foldAngle:r})}if(i===undefined){i=nv({vertices_coords:e,edges_vertices:t})}const{constraints:f,lookup:l,facePairs:d,faces_winding:u,orders:m}=mb({vertices_coords:e,edges_vertices:t,edges_faces:n,edges_assignment:s,edges_foldAngle:r,faces_vertices:o,faces_edges:c,faces_faces:a},i);const{root:g,branches:p}=Dv({constraints:f,lookup:l,facePairs:d,orders:m});return Object.assign(Object.create(Gv),{root:g,branches:p,faces_winding:u})};const hb=(e,t,n)=>{const s=e.map((e=>e?(e[0]+e[1])/2:undefined));const r=[];e.forEach(((o,c)=>{if(!o){return}if(!t&&c===e.length-1){return}const a=o[1];const i=a-n*2;const f=a+n*2;const l=[c,(c+1)%e.length];const d=l.map((e=>s[e])).map((e=>e>a));const u=(!d[0]&&!d[1])*1+(d[0]&&d[1])*2;const m=r.filter((e=>e.min<a&&e.max>a)).shift();const g={faces:l,taco_type:u};if(m){m.pairs.push(g)}else{r.push({min:i,max:f,pairs:[g]})}}));return r.map((e=>e.pairs)).filter((e=>e.length>1)).map((e=>({both:e.filter((e=>e.taco_type===0)).map((e=>e.faces)),left:e.filter((e=>e.taco_type===1)).map((e=>e.faces)),right:e.filter((e=>e.taco_type===2)).map((e=>e.faces))})))};const vb=(e,t,n)=>t<n?e.slice(t+1,n):e.slice(n+1,t);const bb=(e,t,n=true,s=a)=>{const r=pr(t);const o=e.map((e=>e?e[1]:undefined));const c=e.map((e=>e?Math.min(...e):undefined)).map((e=>e+s));const i=e.map((e=>e?Math.max(...e):undefined)).map((e=>e-s));const f=r.length+(n?0:-1);for(let e=0;e<f;e+=1){const n=(e+1)%r.length;if(r[e]===r[n]){continue}const s=vb(t,r[e],r[n]).flat();const a=s.map((t=>o[e]<c[t])).reduce(((e,t)=>e&&t),true);const f=s.map((t=>o[e]>i[t])).reduce(((e,t)=>e&&t),true);if(!a&&!f){return false}}return true};const yb=e=>{const t=on(e);const n={};let s=0;for(let e=0;e<t.length;e+=1){if(n[t[e]]===undefined){s+=1;n[t[e]]=s}else if(n[t[e]]!==undefined){if(n[t[e]]!==s){return false}s-=1;n[t[e]]=undefined}}return true};const Eb=(e,t)=>e.map((e=>t[e])).filter((e=>e!==undefined));const xb=(e,t,n,s,r)=>{const o=ze(t);if(!bb(e,t,s,r)){return false}for(let e=0;e<n.length;e+=1){const t=Eb(o,n[e]);if(!yb(t)){return false}}return true};const Ab={V:true,v:true,M:true,m:true};const Mb=e=>{let t=0;const n=e.slice(1);return[false].concat(n.map((e=>Ab[e]?++t:t)).map((e=>e%2===1)))};const kb={V:1,v:1,M:-1,m:-1};const wb=(e,t)=>t%2===0?kb[e]||0:-(kb[e]||0);const Ob=e=>{let t=0;return e.slice(1).concat([e[0]]).map((e=>{const n=wb(e,t);t+=kb[e]===undefined?0:1;return n}))};const jb=(e,t)=>{const n=Mb(t).map(((t,n)=>e[n]*(t?-1:1)));const s=e.map((()=>undefined));s[0]=[0,n[0]];for(let r=1;r<e.length;r+=1){if(t[r]==="B"||t[r]==="b"){break}const o=(r-1+e.length)%e.length;const c=s[o][1];s[r]=[c,c+n[r]]}return s};const Fb={B:true,b:true};const Cb=(e,t,n=a)=>{const s=jb(e,t);const r=Ob(t);const o=t.map((e=>!Fb[e])).reduce(((e,t)=>e&&t),true);if(o){const e=s[0][0];const t=s[s.length-1][1];if(Math.abs(e-t)>n){return[]}}const c=hb(s,o,n).map((e=>[e.left,e.right].map(pr).filter((e=>e.length>1)))).reduce(((e,t)=>e.concat(t)),[]);const i=(t=[0],a=0,f=0)=>{const l=a+1;const d=r[a];const u=a>=e.length-1;const m=o&&u;if(!xb(s,t,c,m,n)){return[]}if(m){const e=pr(t);const n=e[0];const s=e[a];if(d>0&&s>n){return[]}if(d<0&&s<n){return[]}}if(u){return[t]}if(d===0){t[f]=[l].concat(t[f]);return i(t,l,f)}const g=d===1?Array.from(Array(t.length-f)).map(((e,t)=>f+t+1)):Array.from(Array(f+1)).map(((e,t)=>t));const p=g.map((()=>yr(t)));p.forEach(((e,t)=>e.splice(g[t],0,l)));return p.map(((e,t)=>i(e,l,g[t]))).reduce(((e,t)=>e.concat(t)),[])};return i().map(pr)};const Sb=(e,t,n)=>{if(t==null){t=e.map((()=>"U"))}const s=I_(t);const r=s.map((t=>Cb(e,t,n)));return s.map(((e,t)=>t)).filter((e=>r[e].length>0)).map((e=>({assignment:s[e],layer:r[e]})))};Object.assign(Jv,{table:$v,makeTacosAndTortillas:Mv,...Ov,...cv,...uv,...Fv,layer3d:_b,...gb,...Xv,...lb,singleVertexSolver:Cb,singleVertexAssignmentSolver:Sb,foldStripWithAssignments:jb});Object.assign(Ju,g_);const Pb={graph:Ju,cp:Qu,origami:Zu,axiom:Pm,convert:Sg,math:V_,singleVertex:R_,svg:El,webgl:ev,layer:Jv};gl.ear=Pb;Object.defineProperty(Pb,"window",{enumerable:false,set:e=>{El.window=o(e)}});export{Pb as default};