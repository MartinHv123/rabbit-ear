const e=typeof window!=="undefined"&&typeof window.document!=="undefined";const t=typeof process!=="undefined"&&process.versions!=null&&process.versions.node!=null;const n={planarize:"graph could not planarize",manifold:"valid manifold required",graphCycle:"cycle not allowed",planarBoundary:"planar boundary detection error, bad graph",circularEdge:"circular edges not allowed",replaceModifyParam:"replace() index < value. indices parameter modified",replaceUndefined:"replace() generated undefined",flatFoldAngles:"foldAngles cannot be determined from flat-folded faces without an assignment",noWebGL:"WebGl not Supported",convexFace:"only convex faces are supported",window:"window not set; if using node/deno include package @xmldom/xmldom and set ear.window = xmldom",nonConvexTriangulation:"non-convex triangulation requires vertices_coords",backendStylesheet:"svgToFold found <style> in <svg>. rendering will be incomplete unless run in a major browser.",noLayerSolution:"LayerSolver bad input. no solution possible"};const s={window:undefined};const r=e=>(new e.DOMParser).parseFromString("<!DOCTYPE html><title>.</title>","text/html");const o=e=>{if(!e.document){e.document=r(e)}s.window=e;return s.window};if(e){s.window=window}const c=()=>{if(s.window===undefined){throw new Error(n.window)}return s.window};const a=1e-6;const i=180/Math.PI;const f=Math.PI/180;const l=Math.PI*2;const d=Object.freeze({__proto__:null,D2R:f,EPSILON:a,R2D:i,TWO_PI:l});const u=(e,t)=>e+(t||0);const m=e=>Math.sqrt(e.map((e=>e*e)).reduce(u,0));const g=e=>Math.sqrt(e[0]*e[0]+e[1]*e[1]);const p=e=>Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);const _=e=>e.map((e=>e*e)).reduce(u,0);const h=e=>{const t=m(e);return t===0?e:e.map((e=>e/t))};const v=e=>{const t=g(e);return t===0?e:[e[0]/t,e[1]/t]};const b=e=>{const t=p(e);return t===0?e:[e[0]/t,e[1]/t,e[2]/t]};const y=(e,t)=>e.map((e=>e*t));const E=(e,t)=>[e[0]*t,e[1]*t];const A=(e,t)=>[e[0]*t,e[1]*t,e[2]*t];const x=(e,t)=>e.map(((e,n)=>e+(t[n]||0)));const M=(e,t)=>[e[0]+t[0],e[1]+t[1]];const k=(e,t)=>[e[0]+t[0],e[1]+t[1],e[2]+t[2]];const w=(e,t)=>e.map(((e,n)=>e-(t[n]||0)));const O=(e,t)=>[e[0]-t[0],e[1]-t[1]];const j=(e,t)=>[e[0]-t[0],e[1]-t[1],e[2]-t[2]];const F=(e,t)=>e.map(((n,s)=>e[s]*t[s])).reduce(u,0);const C=(e,t)=>e[0]*t[0]+e[1]*t[1];const S=(e,t)=>e[0]*t[0]+e[1]*t[1]+e[2]*t[2];const P=(e,t)=>e.map(((e,n)=>(e+t[n])/2));const N=(e,t)=>E(M(e,t),.5);const V=(e,t)=>A(k(e,t),.5);const z=function(){if(arguments.length===0){return[]}const e=arguments[0].length>0?arguments[0].length:0;const t=Array(e).fill(0);Array.from(arguments).forEach((e=>t.forEach(((n,s)=>{t[s]+=e[s]||0}))));return t.map((e=>e/arguments.length))};const $=(...e)=>{if(!e.length){return undefined}const t=1/e.length;return e.reduce(((e,t)=>M(e,t)),[0,0]).map((e=>e*t))};const T=(e,t,n)=>{const s=1-n;return e.map(((e,r)=>e*s+(t[r]||0)*n))};const L=(e,t)=>e[0]*t[1]-e[1]*t[0];const B=(e,t)=>[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]];const I=(e,t)=>Math.sqrt(e.map(((n,s)=>(e[s]-t[s])**2)).reduce(u,0));const U=(e,t)=>{const n=e[0]-t[0];const s=e[1]-t[1];return Math.sqrt(n*n+s*s)};const R=(e,t)=>{const n=e[0]-t[0];const s=e[1]-t[1];const r=e[2]-t[2];return Math.sqrt(n*n+s*s+r*r)};const D=e=>e.map((e=>-e));const q=e=>[-e[1],e[0]];const W=e=>[e[1],-e[0]];const G=(e,t=a)=>e.map((e=>Math.abs(e))).reduce(u,0)<t;const H=(e,t,n=a)=>1-Math.abs(F(e,t))<n;const J=(e,t,n=a)=>H(h(e),h(t),n);const Q=(e,t,n=a)=>Math.abs(L(e,t))<n;const Z=(e,t)=>t.length===e?t:Array(e).fill(0).map(((e,n)=>t[n]?t[n]:e));const Y=(e,t)=>[e,t].map((n=>Z(Math.max(e.length,t.length),n)));const X=Object.freeze({__proto__:null,add:x,add2:M,add3:k,average:z,average2:$,cross2:L,cross3:B,degenerate:G,distance:I,distance2:U,distance3:R,dot:F,dot2:C,dot3:S,flip:D,lerp:T,magSquared:_,magnitude:m,magnitude2:g,magnitude3:p,midpoint:P,midpoint2:N,midpoint3:V,normalize:h,normalize2:v,normalize3:b,parallel:J,parallel2:Q,parallelNormalized:H,resize:Z,resizeUp:Y,rotate270:W,rotate90:q,scale:y,scale2:E,scale3:A,subtract:w,subtract2:O,subtract3:j});const K=[1,0,0,1];const ee=K.concat(0,0);const te=(e,t)=>[e[0]*t[0]+e[2]*t[1]+e[4],e[1]*t[0]+e[3]*t[1]+e[5]];const ne=(e,t,n)=>({vector:[e[0]*t[0]+e[2]*t[1],e[1]*t[0]+e[3]*t[1]],origin:[e[0]*n[0]+e[2]*n[1]+e[4],e[1]*n[0]+e[3]*n[1]+e[5]]});const se=(e,t)=>[e[0]*t[0]+e[2]*t[1],e[1]*t[0]+e[3]*t[1],e[0]*t[2]+e[2]*t[3],e[1]*t[2]+e[3]*t[3],e[0]*t[4]+e[2]*t[5]+e[4],e[1]*t[4]+e[3]*t[5]+e[5]];const re=e=>e[0]*e[3]-e[1]*e[2];const oe=e=>{const t=re(e);if(Math.abs(t)<1e-6||Number.isNaN(t)||!Number.isFinite(e[4])||!Number.isFinite(e[5])){return undefined}return[e[3]/t,-e[1]/t,-e[2]/t,e[0]/t,(e[2]*e[5]-e[3]*e[4])/t,(e[1]*e[4]-e[0]*e[5])/t]};const ce=(e=0,t=0)=>K.concat(e,t);const ae=(e=[1,1],t=[0,0])=>[e[0],0,0,e[1],e[0]*-t[0]+t[0],e[1]*-t[1]+t[1]];const ie=(e=1,t=[0,0])=>ae([e,e],t);const fe=(e,t=[0,0])=>{const n=Math.cos(e);const s=Math.sin(e);return[n,s,-s,n,t[0],t[1]]};const le=(e,t=[0,0])=>{const n=Math.atan2(e[1],e[0]);const s=Math.cos(n);const r=Math.sin(n);const o=Math.cos(-n);const c=Math.sin(-n);const a=s*o+r*c;const i=s*-c+r*o;const f=r*o+-s*c;const l=r*-c+-s*o;const d=t[0]+a*-t[0]+-t[1]*f;const u=t[1]+i*-t[0]+-t[1]*l;return[a,i,f,l,d,u]};const de=Object.freeze({__proto__:null,determinant2:re,identity2x2:K,identity2x3:ee,invertMatrix2:oe,makeMatrix2Reflect:le,makeMatrix2Rotate:fe,makeMatrix2Scale:ae,makeMatrix2Translate:ce,makeMatrix2UniformScale:ie,multiplyMatrices2:se,multiplyMatrix2Line2:ne,multiplyMatrix2Vector2:te});const ue=Object.freeze([1,0,0,0,1,0,0,0,1]);const me=Object.freeze(ue.concat(0,0,0));const ge=e=>me.map(((t,n)=>Math.abs(t-e[n])<a)).reduce(((e,t)=>e&&t),true);const pe=(e,t)=>[e[0]*t[0]+e[3]*t[1]+e[6]*t[2]+e[9],e[1]*t[0]+e[4]*t[1]+e[7]*t[2]+e[10],e[2]*t[0]+e[5]*t[1]+e[8]*t[2]+e[11]];const _e=(e,t,n)=>({vector:[e[0]*t[0]+e[3]*t[1]+e[6]*t[2],e[1]*t[0]+e[4]*t[1]+e[7]*t[2],e[2]*t[0]+e[5]*t[1]+e[8]*t[2]],origin:[e[0]*n[0]+e[3]*n[1]+e[6]*n[2]+e[9],e[1]*n[0]+e[4]*n[1]+e[7]*n[2]+e[10],e[2]*n[0]+e[5]*n[1]+e[8]*n[2]+e[11]]});const he=(e,t)=>[e[0]*t[0]+e[3]*t[1]+e[6]*t[2],e[1]*t[0]+e[4]*t[1]+e[7]*t[2],e[2]*t[0]+e[5]*t[1]+e[8]*t[2],e[0]*t[3]+e[3]*t[4]+e[6]*t[5],e[1]*t[3]+e[4]*t[4]+e[7]*t[5],e[2]*t[3]+e[5]*t[4]+e[8]*t[5],e[0]*t[6]+e[3]*t[7]+e[6]*t[8],e[1]*t[6]+e[4]*t[7]+e[7]*t[8],e[2]*t[6]+e[5]*t[7]+e[8]*t[8],e[0]*t[9]+e[3]*t[10]+e[6]*t[11]+e[9],e[1]*t[9]+e[4]*t[10]+e[7]*t[11]+e[10],e[2]*t[9]+e[5]*t[10]+e[8]*t[11]+e[11]];const ve=e=>e[0]*e[4]*e[8]-e[0]*e[7]*e[5]-e[3]*e[1]*e[8]+e[3]*e[7]*e[2]+e[6]*e[1]*e[5]-e[6]*e[4]*e[2];const be=e=>{const t=ve(e);if(Math.abs(t)<1e-6||Number.isNaN(t)||!Number.isFinite(e[9])||!Number.isFinite(e[10])||!Number.isFinite(e[11])){return undefined}const n=[e[4]*e[8]-e[7]*e[5],-e[1]*e[8]+e[7]*e[2],e[1]*e[5]-e[4]*e[2],-e[3]*e[8]+e[6]*e[5],e[0]*e[8]-e[6]*e[2],-e[0]*e[5]+e[3]*e[2],e[3]*e[7]-e[6]*e[4],-e[0]*e[7]+e[6]*e[1],e[0]*e[4]-e[3]*e[1],-e[3]*e[7]*e[11]+e[3]*e[8]*e[10]+e[6]*e[4]*e[11]-e[6]*e[5]*e[10]-e[9]*e[4]*e[8]+e[9]*e[5]*e[7],e[0]*e[7]*e[11]-e[0]*e[8]*e[10]-e[6]*e[1]*e[11]+e[6]*e[2]*e[10]+e[9]*e[1]*e[8]-e[9]*e[2]*e[7],-e[0]*e[4]*e[11]+e[0]*e[5]*e[10]+e[3]*e[1]*e[11]-e[3]*e[2]*e[10]-e[9]*e[1]*e[5]+e[9]*e[2]*e[4]];const s=1/t;return n.map((e=>e*s))};const ye=(e=0,t=0,n=0)=>ue.concat(e,t,n);const Ee=(e,t,n,s,r)=>{const o=ue.concat([0,1,2].map((e=>t[e]||0)));const c=Math.cos(e);const a=Math.sin(e);o[n*3+n]=c;o[n*3+s]=(r?+1:-1)*a;o[s*3+n]=(r?-1:+1)*a;o[s*3+s]=c;return o};const Ae=(e,t=[0,0,0])=>Ee(e,t,1,2,true);const xe=(e,t=[0,0,0])=>Ee(e,t,0,2,false);const Me=(e,t=[0,0,0])=>Ee(e,t,0,1,true);const ke=(e,t=[0,0,1],n=[0,0,0])=>{const s=[0,1,2].map((e=>n[e]||0));const[r,o,c]=Z(3,h(t));const a=Math.cos(e);const i=Math.sin(e);const f=1-a;const l=ue.concat(-s[0],-s[1],-s[2]);const d=ue.concat(s[0],s[1],s[2]);return he(d,he([f*r*r+a,f*o*r+c*i,f*c*r-o*i,f*r*o-c*i,f*o*o+a,f*c*o+r*i,f*r*c+o*i,f*o*c-r*i,f*c*c+a,0,0,0],l))};const we=(e=[1,1,1],t=[0,0,0])=>[e[0],0,0,0,e[1],0,0,0,e[2],e[0]*-t[0]+t[0],e[1]*-t[1]+t[1],e[2]*-t[2]+t[2]];const Oe=(e=1,t=[0,0,0])=>we([e,e,e],t);const je=(e,t=[0,0])=>{const n=le(e,t);return[n[0],n[1],0,n[2],n[3],0,0,0,1,n[4],n[5],0]};const Fe=Object.freeze({__proto__:null,determinant3:ve,identity3x3:ue,identity3x4:me,invertMatrix3:be,isIdentity3x4:ge,makeMatrix3ReflectZ:je,makeMatrix3Rotate:ke,makeMatrix3RotateX:Ae,makeMatrix3RotateY:xe,makeMatrix3RotateZ:Me,makeMatrix3Scale:we,makeMatrix3Translate:ye,makeMatrix3UniformScale:Oe,multiplyMatrices3:he,multiplyMatrix3Line3:_e,multiplyMatrix3Vector3:pe});const Ce=e=>e!=null&&typeof e[Symbol.iterator]==="function";const Se=function(){switch(arguments.length){case 0:return Array.from(arguments);case 1:return Ce(arguments[0])&&typeof arguments[0]!=="string"?Se(...arguments[0]):[arguments[0]];default:return Array.from(arguments).map((e=>Ce(e)?[...Se(e)]:e))}};const Pe=function(){switch(arguments.length){case 0:return Array.from(arguments);case 1:return Ce(arguments[0])&&typeof arguments[0]!=="string"?Pe(...arguments[0]):[arguments[0]];default:return Array.from(arguments).map((e=>Ce(e)?[...Pe(e)]:e)).flat()}};const Ne=Object.freeze({__proto__:null,flattenArrays:Pe,semiFlattenArrays:Se});const Ve=function(){let e=Pe(arguments);const t=e[0];if(typeof t==="object"&&t!==null&&!Number.isNaN(t.x)){e=["x","y","z"].map((e=>t[e])).filter((e=>e!==undefined))}return e.filter((e=>typeof e==="number"))};const ze=function(){return Se(arguments).map((e=>Ve(e)))};const $e=function(){const e=Se(arguments);return e.length===4?[[0,1],[2,3]].map((t=>t.map((t=>e[t])))):e.map((e=>Ve(e)))};const Te=(e,t=[])=>({vector:e,origin:t});const Le=function(){const e=Se(arguments);if(e.length===0||e[0]==null){return Te([],[])}if(e[0].constructor===Object&&e[0].vector!==undefined){return Te(e[0].vector,e[0].origin||[])}return typeof e[0]==="number"?Te(Ve(e)):Te(...e.map((e=>Ve(e))))};const Be=Object.freeze({__proto__:null,getArrayOfVectors:ze,getLine:Le,getSegment:$e,getVector:Ve});const Ie=e=>Array.from(Array(Math.floor(e))).map(((t,n)=>l*(n/e)));const Ue=(e,t)=>e.map((e=>[t*Math.cos(e),t*Math.sin(e)]));const Re=(e=3,t=1)=>Ue(Ie(e),t);const De=(e=3,t=1)=>{const n=Math.PI/e;const s=Ie(e).map((e=>e+n));return Ue(s,t)};const qe=(e=3,t=1)=>Re(e,t/Math.cos(Math.PI/e));const We=(e=3,t=1)=>De(e,t/Math.cos(Math.PI/e));const Ge=(e=3,t=1)=>Re(e,t/2/Math.sin(Math.PI/e));const He=(e=3,t=1)=>De(e,t/2/Math.sin(Math.PI/e));const Je=(e,t=a)=>{const n=e.map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>w(e[1],e[0])));const s=n.map(((e,t,n)=>[e,n[(t+n.length-1)%n.length]])).map((e=>!J(e[1],e[0],t)));return e.filter(((e,t)=>s[t]))};const Qe=(e,t,n)=>{const s=t[0]-e[0];const r=t[1]-e[1];const o=n[0]-e[0];const c=n[1]-e[1];const i=s*(e[0]+t[0])+r*(e[1]+t[1]);const f=o*(e[0]+n[0])+c*(e[1]+n[1]);const l=2*(s*(n[1]-t[1])-r*(n[0]-t[0]));if(Math.abs(l)<a){const s=Math.min(e[0],t[0],n[0]);const r=Math.min(e[1],t[1],n[1]);const o=(Math.max(e[0],t[0],n[0])-s)*.5;const c=(Math.max(e[1],t[1],n[1])-r)*.5;return{origin:[s+o,r+c],radius:Math.sqrt(o*o+c*c)}}const d=[(c*i-r*f)/l,(s*f-o*i)/l];const u=d[0]-e[0];const m=d[1]-e[1];return{origin:d,radius:Math.sqrt(u*u+m*m)}};const Ze=e=>.5*e.map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>L(...e))).reduce(((e,t)=>e+t),0);const Ye=e=>{const t=1/(6*Ze(e));return e.map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>E(M(...e),L(...e)))).reduce(((e,t)=>M(e,t)),[0,0]).map((e=>e*t))};const Xe=(e,t=0)=>{if(!e||!e.length){return undefined}const n=Array(e[0].length).fill(Infinity);const s=Array(e[0].length).fill(-Infinity);e.forEach((e=>e.forEach(((e,r)=>{if(e<n[r]){n[r]=e-t}if(e>s[r]){s[r]=e+t}}))));const r=s.map(((e,t)=>e-n[t]));return{min:n,max:s,span:r}};const Ke=Object.freeze({__proto__:null,boundingBox:Xe,centroid:Ye,circumcircle:Qe,makePolygonCircumradius:Re,makePolygonCircumradiusSide:De,makePolygonInradius:qe,makePolygonInradiusSide:We,makePolygonNonCollinear:Je,makePolygonSideLength:Ge,makePolygonSideLengthSide:He,signedArea:Ze});const et=(e,t,n=a)=>Math.abs(e-t)<n;const tt=(e,t,n=a)=>et(e,t,n)?0:Math.sign(t-e);const nt=(e,t,n=a)=>{for(let s=0;s<Math.max(e.length,t.length);s+=1){if(!et(e[s]||0,t[s]||0,n)){return false}}return true};const st=(e,t=a)=>e>-t;const rt=(e,t=a)=>e>t;const ot=()=>true;const ct=()=>true;const at=st;const it=rt;const ft=(e,t=a)=>e>-t&&e<1+t;const lt=(e,t=a)=>e>t&&e<1-t;const dt=e=>e;const ut=e=>e<-a?0:e;const mt=e=>{if(e<-a){return 0}if(e>1+a){return 1}return e};const gt=Object.freeze({__proto__:null,clampLine:dt,clampRay:ut,clampSegment:mt,epsilonCompare:tt,epsilonEqual:et,epsilonEqualVectors:nt,exclude:rt,excludeL:ct,excludeR:it,excludeS:lt,include:st,includeL:ot,includeR:at,includeS:ft});const pt={file:["file_spec","file_creator","file_author","file_title","file_description","file_classes","file_frames"],frame:["frame_author","frame_title","frame_description","frame_attributes","frame_classes","frame_unit","frame_parent","frame_inherit"],graph:["vertices_coords","vertices_vertices","vertices_faces","edges_vertices","edges_faces","edges_assignment","edges_foldAngle","edges_length","faces_vertices","faces_edges","vertices_edges","edges_edges","faces_faces"],orders:["edgeOrders","faceOrders"]};const _t=["singleModel","multiModel","animation","diagrams"];const ht=["creasePattern","foldedForm","graph","linkage"];const vt=["2D","3D","abstract","manifold","nonManifold","orientable","nonOrientable","selfTouching","nonSelfTouching","selfIntersecting","nonSelfIntersecting"];const bt=Object.freeze({__proto__:null,foldFileClasses:_t,foldFrameAttributes:vt,foldFrameClasses:ht,foldKeys:pt});const yt={vertices:"vertex",edges:"edge",faces:"face"};const Et={vertex:"vertices",edge:"edges",face:"faces"};const At=Array.from("BbMmVvFfJjCcUu");const xt={b:"boundary",m:"mountain",v:"valley",f:"flat",j:"join",c:"cut",u:"unassigned"};Object.keys(xt).forEach((e=>{xt[e.toUpperCase()]=xt[e]}));const Mt={B:0,b:0,M:-180,m:-180,V:180,v:180,F:0,f:0,J:0,j:0,C:0,c:0,U:0,u:0};const kt={B:false,b:false,M:true,m:true,V:true,v:true,F:false,f:false,J:false,j:false,C:false,c:false,U:true,u:true};const wt=e=>Mt[e]||0;const Ot=e=>{if(e>a){return"V"}if(e<-a){return"M"}return"U"};const jt=e=>et(0,e)||et(-180,e)||et(180,e);const Ft=({edges_foldAngle:e})=>{if(!e){return true}for(let t=0;t<e.length;t+=1){if(!jt(e[t])){return false}}return true};const Ct=(e,t)=>Object.keys(e).filter((e=>t(e)));const St=(e,t)=>Ct(e,(e=>e.substring(0,t.length+1)===`${t}_`));const Pt=(e,t)=>Ct(e,(e=>e.substring(e.length-t.length-1,e.length)===`_${t}`));const Nt=(e,t)=>{const n=St(e,t);if(n.length===0){return[]}const s=Math.max(...n.map((t=>e[t].length)));const r=Array.from(Array(s)).map((()=>({})));n.forEach((t=>r.forEach(((n,s)=>{r[s][t]=e[t][s]}))));return r};const Vt=(e,t,n)=>{const s=St(e,t);if(s.length===0){return undefined}const r={};s.forEach((t=>{r[t]=e[t][n]}));return r};const zt=Object.freeze([].concat(pt.file).concat(pt.frame).concat(pt.graph).concat(pt.orders));const $t=(e={})=>Object.keys(e).length===0?0:zt.filter((t=>e[t])).length/Object.keys(e).length;const Tt=({frame_classes:e,file_classes:t})=>e&&e.includes("foldedForm")||t&&t.includes("foldedForm");const Lt=({edges_vertices:e,edges_foldAngle:t,edges_assignment:n})=>{if(n===undefined){return t===undefined?e.map((()=>true)):t.map((e=>e<-a||e>a))}return n.map((e=>kt[e]))};const Bt=e=>{const t={M:"V",m:"v",V:"M",v:"m"};if(e.edges_assignment){e.edges_assignment=e.edges_assignment.map((e=>t[e]?t[e]:e))}if(e.edges_foldAngle){e.edges_foldAngle=e.edges_foldAngle.map((e=>-e))}return e};const It=Object.freeze({__proto__:null,assignmentCanBeFolded:kt,assignmentFlatFoldAngle:Mt,edgeAssignmentToFoldAngle:wt,edgeFoldAngleIsFlat:jt,edgeFoldAngleToAssignment:Ot,edgesAssignmentNames:xt,edgesAssignmentValues:At,edgesFoldAngleAreAllFlat:Ft,filterKeysWithPrefix:St,filterKeysWithSuffix:Pt,invertAssignments:Bt,isFoldObject:$t,isFoldedForm:Tt,makeEdgesIsFolded:Lt,pluralize:Et,singularize:yt,transposeGraphArrayAtIndex:Vt,transposeGraphArrays:Nt});const Ut=function(e,t){Pt(e,"coords").forEach((n=>{e[n]=e[n].map((e=>Z(3,e))).map((e=>pe(t,e)))}));Pt(e,"matrix").forEach((n=>{e[n]=e[n].map((e=>he(e,t)))}));return e};const Rt=(e,...t)=>{const n=t.length===1?[t[0],t[0],t[0]]:[1,1,1].map(((e,n)=>t[n]===undefined?e:t[n]));const s=we(n);return Ut(e,s)};const Dt=(e,...t)=>{const n=Ve(...t);const s=Z(3,n);const r=ye(...s);return Ut(e,r)};const qt=(e,t,n,s)=>Ut(e,ke(t,n,s));const Wt=(e,t,...n)=>{const s=Ve(...n);const r=Z(3,s);const o=Me(t,...r);return Ut(e,o)};const Gt=function(e){if(!e.vertices_coords){return e}const t=Xe(e.vertices_coords);const n=Math.max(...t.span);const s=n===0?1:1/n;const r=t.min;e.vertices_coords=e.vertices_coords.map((e=>w(e,r))).map((e=>e.map((e=>e*s))));return e};const Ht=Object.freeze({__proto__:null,rotate:qt,rotateZ:Wt,scale:Rt,transform:Ut,translate:Dt,unitize:Gt});const Jt=({vertices_coords:e},t=a)=>{if(!e){return[]}const n=[];const s=[];const r=e.map(((e,t)=>({i:t,d:e[0]}))).sort(((e,t)=>e.d-t.d)).map((e=>e.i));let o=0;let c=[0,0];let i=[0,0];const f=t=>e[t][0]>i[0]&&e[t][0]<i[1]&&e[t][1]>c[0]&&e[t][1]<c[1];const l=n=>{const s=n[n.length-1];while(e[s]-e[n[o]]>t){o+=1}const r=n.slice(o,n.length).map((t=>e[t]));const a=r.map((e=>e[1]));c=[Math.min(...a)-t,Math.max(...a)+t];i=[r[0][0]-t,r[r.length-1][0]+t]};while(s.length!==e.length){const t=[];const c=r.shift();t.push(c);s.push(c);o=0;l(t);let a=0;while(a<r.length&&e[r[a]][0]<i[1]){if(f(r[a])){const e=r.splice(a,1).shift();t.push(e);s.push(e);l(t)}else{a+=1}}n.push(t)}return n};const Qt=Object.freeze({__proto__:null,getVerticesClusters:Jt});const Zt=(...e)=>Math.max(0,...e.filter((e=>e!==undefined)).map((e=>e.length)));const Yt=(e,t)=>Zt(...St(e,t).map((t=>e[t])));Yt.vertices=({vertices_coords:e,vertices_faces:t,vertices_vertices:n})=>Zt(e,t,n);Yt.edges=({edges_vertices:e,edges_edges:t,edges_faces:n})=>Zt(e,t,n);Yt.faces=({faces_vertices:e,faces_edges:t,faces_faces:n})=>Zt(e,t,n);const Xt=e=>Array.from(new Set(e));const Kt=e=>{const t={};e.forEach((e=>{if(t[e]===undefined){t[e]=0}t[e]+=1}));return e.filter((e=>t[e]>1))};const en=e=>{const t={};e.forEach((e=>{t[e]=true}));return Object.keys(t).map(parseFloat)};const tn=(...e)=>{const t=[];e.forEach((e=>e.forEach(((e,n)=>{t[n]=e}))));return t};const nn=(e,t)=>{t.sort(((e,t)=>e-t));return[e.slice(t[1]).concat(e.slice(0,t[0]+1)),e.slice(t[0],t[1]+1)]};const sn=e=>{const t=[];const n=[];e.forEach(((e,s)=>e.forEach((e=>{if(s<e){n.push([s,e])}if(s===e&&!t[s]){t[s]=true;n.push([s,e])}}))));return n};const rn=(e,t=a)=>{const n=e.map(((e,t)=>({v:e,i:t}))).sort(((e,t)=>e.v-t.v)).map((e=>e.i));const s=[[n[0]]];for(let r=1;r<n.length;r+=1){const o=n[r];const c=s.length-1;const a=s[c][s[c].length-1];if(Math.abs(e[a]-e[o])<t){s[c].push(o)}else{s.push([o])}}return s};const on=(e,t=a)=>{const n=[[0]];for(let s=1;s<e.length;s+=1){let r=false;for(let o=0;o<n.length;o+=1){const c=n[o][0];if(J(e[s],e[c],t)){n[o].push(s);r=true;break}}if(!r){n.push([s])}}return n};const cn=e=>{const t=Array(e.length*(e.length-1)/2);let n=0;for(let s=0;s<e.length-1;s+=1){for(let r=s+1;r<e.length;r+=1,n+=1){t[n]=[e[s],e[r]]}}return t};const an=Object.freeze({__proto__:null,chooseTwoPairs:cn,clusterParallelVectors:on,clusterScalars:rn,flatSort:tn,nonUniqueElements:Kt,selfRelationalUniqueIndexPairs:sn,splitCircularArray:nn,uniqueElements:Xt,uniqueSortedNumbers:en});const fn=(e,t,s)=>{const r=Yt(e,t);let o=false;Object.entries(s).filter((([e,t])=>e<t)).forEach((([e,t])=>{o=true;delete s[e];s[t]=e}));if(o){console.warn(n.replaceModifyParam)}const c=Object.keys(s).map((e=>parseInt(e,10)));const a=en(c);const i=[];for(let e=0,t=0,o=0;e<r;e+=1,t+=1){while(e===a[o]){i[e]=i[s[a[o]]];if(i[e]===undefined){throw new Error(n.replaceUndefined)}e+=1;o+=1}if(e<r){i[e]=t}}Pt(e,t).forEach((t=>e[t].forEach(((n,s)=>e[t][s].forEach(((n,r)=>{e[t][s][r]=i[n]}))))));a.reverse();St(e,t).forEach((t=>a.forEach((n=>e[t].splice(n,1)))));return i};const ln=(e,t)=>Jt(e,t).filter((e=>e.length>1));const dn=(e,t=a)=>{const n=[];const s=[];const r=Jt(e,t).filter((e=>e.length>1));r.forEach((e=>{if(Math.min(...e)!==e[0]){e.sort(((e,t)=>e-t))}for(let t=1;t<e.length;t+=1){n[e[t]]=e[0];s.push(e[t])}}));r.map((t=>t.map((t=>e.vertices_coords[t])))).map((e=>z(...e))).forEach(((t,n)=>{e.vertices_coords[r[n][0]]=t}));return{map:fn(e,"vertices",n),remove:s}};const un=Object.freeze({__proto__:null,duplicateVertices:ln,removeDuplicateVertices:dn});const mn=(e,t,n)=>{const s=Yt(e,t);const r=en(n);const o=[];for(let e=0,t=0,n=0;e<s;e+=1,t+=1){while(e===r[n]){o[e]=undefined;e+=1;n+=1}if(e<s){o[e]=t}}Pt(e,t).forEach((t=>e[t].forEach(((n,s)=>e[t][s].forEach(((n,r)=>{e[t][s][r]=o[n]}))))));r.reverse();St(e,t).forEach((t=>r.forEach((n=>e[t].splice(n,1)))));return o};const gn=({vertices_coords:e,edges_vertices:t})=>{if(!e||!t){return[]}let n=e.length;const s=Array(n).fill(false);t.forEach((e=>{e.filter((e=>!s[e])).forEach((e=>{s[e]=true;n-=1}))}));return s.map(((e,t)=>e?undefined:t)).filter((e=>e!==undefined))};const pn=({vertices_coords:e,faces_vertices:t})=>{if(!e||!t){return[]}let n=e.length;const s=Array(n).fill(false);t.forEach((e=>{e.filter((e=>!s[e])).forEach((e=>{s[e]=true;n-=1}))}));return s.map(((e,t)=>e?undefined:t)).filter((e=>e!==undefined))};const _n=({vertices_coords:e,edges_vertices:t,faces_vertices:n})=>{if(!e){return[]}let s=e.length;const r=Array(s).fill(false);if(t){t.forEach((e=>{e.filter((e=>!r[e])).forEach((e=>{r[e]=true;s-=1}))}))}if(n){n.forEach((e=>{e.filter((e=>!r[e])).forEach((e=>{r[e]=true;s-=1}))}))}return r.map(((e,t)=>e?undefined:t)).filter((e=>e!==undefined))};const hn=(e,t)=>{if(!t){t=_n(e)}return{map:mn(e,"vertices",t),remove:t}};const vn=Object.freeze({__proto__:null,edgeIsolatedVertices:gn,faceIsolatedVertices:pn,isolatedVertices:_n,removeIsolatedVertices:hn});const bn=e=>Math.atan2(e[1],e[0]);const yn=e=>[Math.cos(e),Math.sin(e)];const En=(...e)=>{const t=ze(...e);return{vector:w(t[1],t[0]),origin:t[0]}};const An=({vector:e,origin:t})=>{const n=m(e);const s=q(e);const r=F(t,s)/n;return{normal:y(s,1/n),distance:r}};const xn=({normal:e,distance:t})=>({vector:W(e),origin:y(e,t)});const Mn=Object.freeze({__proto__:null,angleToVector:yn,pointsToLine:En,uniqueLineToVecLine:xn,vecLineToUniqueLine:An,vectorToAngle:bn});const kn=(e,t,n)=>{while(n<t){n+=l}while(e>t){e-=l}while(e<t){e+=l}return e<n};const wn=(e,t)=>{while(e<0){e+=l}while(t<0){t+=l}while(e>l){e-=l}while(t>l){t-=l}const n=e-t;return n>=0?n:l-(t-e)};const On=(e,t)=>{while(e<0){e+=l}while(t<0){t+=l}while(e>l){e-=l}while(t>l){t-=l}const n=t-e;return n>=0?n:l-(e-t)};const jn=(e,t)=>{const n=t[0]*e[0]+t[1]*e[1];const s=t[0]*e[1]-t[1]*e[0];let r=Math.atan2(s,n);if(r<0){r+=l}return r};const Fn=(e,t)=>{const n=e[0]*t[0]+e[1]*t[1];const s=e[0]*t[1]-e[1]*t[0];let r=Math.atan2(s,n);if(r<0){r+=l}return r};const Cn=(e,t)=>yn(bn(e)-jn(e,t)/2);const Sn=(e,t)=>yn(bn(e)+Fn(e,t)/2);const Pn=(e,t,n)=>{const s=wn(e,t)/n;return Array.from(Array(n-1)).map(((t,n)=>e+s*(n+1)))};const Nn=(e,t,n)=>{const s=On(e,t)/n;return Array.from(Array(n-1)).map(((t,n)=>e+s*(n+1)))};const Vn=(e,t,n)=>{const s=Math.atan2(e[1],e[0]);const r=Math.atan2(t[1],t[0]);return Pn(s,r,n).map(yn)};const zn=(e,t,n)=>{const s=Math.atan2(e[1],e[0]);const r=Math.atan2(t[1],t[0]);return Nn(s,r,n).map(yn)};const $n=(...e)=>{const t=e.flat();const n=t.map(((e,t)=>t)).sort(((e,n)=>t[e]-t[n]));return n.slice(n.indexOf(0),n.length).concat(n.slice(0,n.indexOf(0)))};const Tn=function(){return $n(Se(arguments).map(bn))};const Ln=function(){const e=Array.from(arguments).flat();const t=$n(e).map((t=>e[t]));return t.map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>On(e[0],e[1])))};const Bn=function(){return Ln(Se(arguments).map(bn))};const In=(e,t,n,s=a)=>{const r=v(O(t,e));const o=v(O(n,e));const c=L(r,o);if(!et(c,0,s)){return Math.sign(c)}return et(U(e,t)+U(t,n),U(e,n))?0:undefined};const Un=Object.freeze({__proto__:null,clockwiseAngle2:jn,clockwiseAngleRadians:wn,clockwiseBisect2:Cn,clockwiseSubsect2:Vn,clockwiseSubsectRadians:Pn,counterClockwiseAngle2:Fn,counterClockwiseAngleRadians:On,counterClockwiseBisect2:Sn,counterClockwiseOrder2:Tn,counterClockwiseOrderRadians:$n,counterClockwiseSectors2:Bn,counterClockwiseSectorsRadians:Ln,counterClockwiseSubsect2:zn,counterClockwiseSubsectRadians:Nn,isCounterClockwiseBetween:kn,threePointTurnDirection:In});const Rn=e=>{let t=-1;e.filter((e=>e!==undefined)).forEach((e=>e.forEach((e=>e.forEach((e=>{if(e>t){t=e}}))))));return t};const Dn=e=>{let t=-1;e.forEach((e=>{if(e[0]>t){t=e[0]}if(e[1]>t){t=e[1]}}));return t};const qn={edges:"edgeOrders",faces:"faceOrders"};const Wn=(e,t)=>Math.max(Rn(Pt(e,t).map((t=>e[t]))),e[qn[t]]?Dn(e[qn[t]]):-1)+1;Wn.vertices=e=>Wn(e,"vertices");Wn.edges=e=>Wn(e,"edges");Wn.faces=e=>Wn(e,"faces");const Gn=({vertices_vertices:e,vertices_sectors:t},n,s,r={})=>{const o={};const c={vertices:[n],edges:[],angles:[]};let a=n;let i=s;while(true){const n=e[i];const s=n.indexOf(a);const f=(s+n.length-1)%n.length;const l=n[f];const d=`${i} ${l}`;if(o[d]){Object.assign(r,o);c.vertices.pop();return c}o[d]=true;if(r[d]){return undefined}c.vertices.push(i);c.edges.push(d);if(t){c.angles.push(t[i][f])}a=i;i=l}};const Hn=({vertices_vertices:e,vertices_sectors:t})=>{const n={vertices_vertices:e,vertices_sectors:t};const s={};return e.map(((e,t)=>e.map((e=>Gn(n,t,e,s))).filter((e=>e!==undefined)))).flat()};const Jn=e=>e.filter((e=>e.angles.map((e=>Math.PI-e)).reduce(((e,t)=>e+t),0)>0));const Qn=Object.freeze({__proto__:null,counterClockwiseWalk:Gn,filterWalkedBoundaryFace:Jn,planarVertexWalk:Hn});const Zn=(e,t,n)=>{const s=e.map(((e,s)=>({i:s,d:n(t,e)})));let r;let o=Infinity;for(let e=0;e<s.length;e+=1){if(s[e].d<o){r=e;o=s[e].d}}return r};const Yn=(e,t,n,s)=>{let r=[0];for(let o=1;o<e.length;o+=1){switch(n(e[o][t],e[r[0]][t],s)){case 0:r.push(o);break;case 1:r=[o];break}}return r};const Xn=(e,t=a)=>{if(!e||!e.length){return undefined}const n=Yn(e,0,tt,t);let s=0;for(let t=1;t<n.length;t+=1){if(e[n[t]][1]<e[n[s]][1]){s=t}}return n[s]};const Kn=Object.freeze({__proto__:null,minimum2DPointIndex:Xn,smallestComparisonSearch:Zn});const es=(e,t,n)=>e.map(((e,s)=>({i:s,n:n(e,t)}))).sort(((e,t)=>e.n-t.n)).map((e=>e.i));const ts=(e,t)=>es(e,t,F);const ns=(e,t=a)=>{const n=[[0]];let s=0;for(let r=1;r<e.length;r+=1){if(et(e[r],e[r-1],t)){n[s].push(r)}else{s=n.length;n.push([r])}}return n};const ss=(e,t=a)=>{const n=Xn(e,t);if(n===undefined){return[]}const s=e.map((t=>O(t,e[n]))).map((e=>v(e))).map((e=>C([0,1],e)));const r=s.map(((e,t)=>({a:e,i:t}))).sort(((e,t)=>e.a-t.a)).map((e=>e.i)).filter((e=>e!==n));return[[n]].concat(ns(r.map((e=>s[e])),t).map((e=>e.map((e=>r[e])))).map((t=>t.length===1?t:t.map((t=>({i:t,len:U(e[t],e[n])}))).sort(((e,t)=>e.len-t.len)).map((e=>e.i)))))};const rs=Object.freeze({__proto__:null,clusterIndicesOfSortedNumbers:ns,radialSortPointIndices2:ss,sortAgainstItem:es,sortPointsAlongVector:ts});const os=({vertices_coords:e},t,n)=>t.map((t=>e[t])).map((t=>w(t,e[n]))).map((e=>Math.atan2(e[1],e[0]))).map((e=>e>-a?e:e+Math.PI*2)).map(((e,t)=>({a:e,i:t}))).sort(((e,t)=>e.a-t.a)).map((e=>e.i)).map((e=>t[e]));const cs=({vertices_coords:e},t,n)=>ts(t.map((t=>e[t])),n).map((e=>t[e]));const as=Object.freeze({__proto__:null,sortVerticesAlongVector:cs,sortVerticesCounterClockwise:os});const is=({vertices_coords:e,faces_vertices:t})=>t.map((t=>t.map((t=>e[t])))).map((e=>{const t=Z(3,w(e[1],e[0]));const n=Z(3,w(e[2],e[0]));return b(B(t,n))}));const fs=({vertices_coords:e,faces_vertices:t,faces_normal:n})=>{const s=(e,t)=>{e[0]+=t[0];e[1]+=t[1];e[2]+=t[2]};if(!n){n=is({vertices_coords:e,faces_vertices:t})}const r=e.map((()=>[0,0,0]));t.forEach(((e,t)=>e.forEach((e=>s(r[e],n[t])))));return r.map((e=>b(e)))};const ls=Object.freeze({__proto__:null,makeFacesNormal:is,makeVerticesNormal:fs});const ds=({edges_vertices:e})=>{const t=[];e.forEach(((e,n)=>e.forEach((e=>{if(t[e]===undefined){t[e]=[]}t[e].push(n)}))));return t};const us=({edges_vertices:e,vertices_vertices:t})=>{const n=bs({edges_vertices:e});return t.map(((e,t)=>e.map((e=>n[`${t} ${e}`]))))};const ms=({vertices_coords:e,vertices_edges:t,edges_vertices:n})=>{if(!t){t=ds({edges_vertices:n})}const s=t.map(((e,t)=>e.map((e=>n[e].filter((e=>e!==t)))).reduce(((e,t)=>e.concat(t)),[])));return e===undefined?s:s.map(((t,n)=>os({vertices_coords:e},t,n)))};const gs=({vertices_coords:e,vertices_faces:t,faces_vertices:n})=>{if(!t){t=hs({vertices_coords:e,faces_vertices:n})}const s=t.map((e=>e.map((e=>n[e]))));const r=s.map(((e,t)=>e.map((e=>e.indexOf(t)))));const o=s.map(((e,t)=>e.map(((e,n)=>[(r[t][n]+e.length-1)%e.length,r[t][n],(r[t][n]+1)%e.length]))));const c=o.map(((e,t)=>e.map(((e,n)=>e.map((e=>s[t][n][e]))))));const a=c.map((e=>{const t=e.map((e=>[[0,1],[1,2]].map((t=>t.map((t=>e[t])).join(" ")))));const n={};const s={};t.forEach(((e,t)=>{n[e[0]]=t;s[e[1]]=t}));return{facesVerts:t,to:s,from:n}}));return a.map((e=>{const t=Object.keys(e.to);const n=t.map((e=>e.split(" ").reverse().join(" ")));const s=t.filter(((t,s)=>!(n[s]in e.from)));if(s.length>2){console.warn("vertices_vertices found an unsolvable vertex");return[]}const r=s.length?s:[t[0]];const o=[];const c={};for(let t=0;t<r.length;t+=1){const n=r[t];const s=[n];c[n]=true;let a=false;do{const t=s[s.length-1];const n=e.to[t];if(!(n in e.facesVerts)){break}let r;if(e.facesVerts[n][0]===t){r=e.facesVerts[n][1]}if(e.facesVerts[n][1]===t){r=e.facesVerts[n][0]}if(r===undefined){return"not found"}const o=r.split(" ").reverse().join(" ");s.push(r);a=o in c;if(!a){s.push(o)}c[r]=true;c[o]=true}while(!a);const i=s.filter(((e,t)=>t%2===0)).map((e=>e.split(" ")[1])).map((e=>parseInt(e,10)));o.push(...i)}return o}))};const ps=e=>{if(!e.vertices_coords||!e.vertices_coords.length){return[]}switch(e.vertices_coords[0].length){case 3:return gs(e);default:return ms(e)}};const _s=({vertices_edges:e,edges_vertices:t})=>{if(!e){e=ds({edges_vertices:t})}return e.map(((e,n)=>e.flatMap((e=>t[e].filter((e=>e!==n))))))};const hs=({vertices_coords:e,faces_vertices:t})=>{if(!t){return e.map((()=>[]))}const n=e!==undefined?e.map((()=>[])):Array.from(Array(Wn.vertices({faces_vertices:t}))).map((()=>[]));t.forEach(((e,t)=>{const s=[];e.forEach((e=>{s[e]=t}));s.forEach(((e,t)=>n[t].push(e)))}));return n};const vs=({vertices_coords:e,vertices_vertices:t,faces_vertices:n})=>{if(!n){return e.map((()=>[]))}if(!t){return hs({vertices_coords:e,faces_vertices:n})}const s=Es({faces_vertices:n});return t.map(((e,t)=>e.map(((e,n,s)=>[s[(n+1)%s.length],t,e].join(" "))))).map((e=>e.map((e=>s[e]))))};const bs=({edges_vertices:e})=>{const t={};e.map((e=>e.join(" "))).forEach(((e,n)=>{t[e]=n}));e.map((e=>`${e[1]} ${e[0]}`)).forEach(((e,n)=>{t[e]=n}));return t};const ys=({edges_vertices:e})=>{const t={};e.map((e=>e.join(" "))).forEach(((e,n)=>{t[e]=n}));return t};const Es=({faces_vertices:e})=>{const t={};e.forEach(((e,n)=>e.map(((t,n)=>[0,1,2].map((t=>(n+t)%e.length)).map((t=>e[t])).join(" "))).forEach((e=>{t[e]=n}))));return t};const As=({vertices_coords:e,vertices_vertices:t,edges_vertices:n,edges_vector:s})=>{if(!s){s=Ns({vertices_coords:e,edges_vertices:n})}const r=ys({edges_vertices:n});return t.map(((e,n)=>t[n].map((e=>{const t=r[`${n} ${e}`];const o=r[`${e} ${n}`];if(t!==undefined){return s[t]}if(o!==undefined){return D(s[o])}}))))};const xs=({vertices_coords:e,vertices_vertices:t,edges_vertices:n,edges_vector:s})=>As({vertices_coords:e,vertices_vertices:t,edges_vertices:n,edges_vector:s}).map((e=>e.length===1?[l]:Bn(e)));const Ms=({edges_vertices:e,vertices_edges:t})=>e.map(((e,n)=>{const s=t[e[0]].filter((e=>e!==n));const r=t[e[1]].filter((e=>e!==n));return s.concat(r)}));const ks=({edges_vertices:e,faces_edges:t})=>{const n=e!==undefined?e.map((()=>[])):Array.from(Array(Wn.edges({faces_edges:t}))).map((()=>[]));t.forEach(((e,t)=>{const s=[];e.forEach((e=>{s[e]=t}));s.forEach(((e,t)=>n[t].push(e)))}));return n};const ws=({vertices_coords:e,edges_vertices:t,edges_vector:n,faces_vertices:s,faces_edges:r,faces_center:o})=>{if(!t||!s&&!r){return ks({faces_edges:r})}if(!s){s=Ts({edges_vertices:t,faces_edges:r})}if(!r){r=Ls({edges_vertices:t,faces_vertices:s})}if(!n){n=Ns({vertices_coords:e,edges_vertices:t})}const c=t.map((t=>e[t[0]]));if(!o){o=Ds({vertices_coords:e,faces_vertices:s})}const a=t.map((()=>[]));r.forEach(((e,t)=>{const n=[];e.forEach((e=>{n[e]=t}));n.forEach(((e,t)=>a[t].push(e)))}));a.forEach(((e,t)=>{const s=e.map((e=>o[e])).map((e=>O(e,c[t]))).map((e=>L(e,n[t])));e.sort(((e,t)=>s[e]-s[t]))}));return a};const Os={M:-180,m:-180,V:180,v:180};const js=({edges_foldAngle:e})=>e.map((e=>{if(e===0){return"F"}return e<0?"M":"V"}));const Fs=({edges_vertices:e,edges_foldAngle:t,edges_faces:n,faces_vertices:s,faces_edges:r})=>{if(!n){if(!r){r=Ls({edges_vertices:e,faces_vertices:s})}n=ks({edges_vertices:e,faces_edges:r})}return t.map(((e,t)=>{if(n[t].length<2){return"B"}if(e===0){return"F"}return e<0?"M":"V"}))};const Cs=({edges_assignment:e})=>e.map((e=>Os[e]||0));const Ss=({vertices_coords:e,edges_vertices:t,edges_faces:s,edges_assignment:r,faces_vertices:o,faces_edges:c,faces_normal:a,faces_center:i})=>{if(!s){if(!c){c=Ls({edges_vertices:t,faces_vertices:o})}s=ks({edges_vertices:t,faces_edges:c})}if(!a){a=is({vertices_coords:e,faces_vertices:o})}if(!i){i=Ds({vertices_coords:e,faces_vertices:o})}return s.map(((e,t)=>{if(e.length>2){throw new Error(n.manifold)}if(e.length<2){return 0}const s=a[e[0]];const o=a[e[1]];const c=h(w(i[e[1]],i[e[0]]));let f=Math.sign(F(s,c));if(f===0){if(r&&r[t]){if(r[t]==="F"||r[t]==="F"){f=0}if(r[t]==="M"||r[t]==="m"){f=-1}if(r[t]==="V"||r[t]==="v"){f=1}}else{throw new Error(n.flatFoldAngles)}}return Math.acos(F(s,o))*(180/Math.PI)*f}))};const Ps=({vertices_coords:e,edges_vertices:t})=>t.map((t=>t.map((t=>e[t]))));const Ns=({vertices_coords:e,edges_vertices:t})=>Ps({vertices_coords:e,edges_vertices:t}).map((e=>w(e[1],e[0])));const Vs=({vertices_coords:e,edges_vertices:t})=>Ns({vertices_coords:e,edges_vertices:t}).map((e=>m(e)));const zs=({vertices_coords:e,edges_vertices:t,edges_coords:n},s=0)=>{if(!n){n=Ps({vertices_coords:e,edges_vertices:t})}return n.map((e=>Xe(e,s)))};const $s=({vertices_coords:e,vertices_vertices:t,vertices_edges:n,vertices_sectors:s,edges_vertices:r,edges_vector:o})=>{if(!t){t=ps({vertices_coords:e,edges_vertices:r,vertices_edges:n})}if(!s){s=xs({vertices_coords:e,vertices_vertices:t,edges_vertices:r,edges_vector:o})}const c=bs({edges_vertices:r});const a=Jn(Hn({vertices_vertices:t,vertices_sectors:s})).map((e=>({...e,edges:e.edges.map((e=>c[e]))})));return{faces_vertices:a.map((e=>e.vertices)),faces_edges:a.map((e=>e.edges)),faces_sectors:a.map((e=>e.angles))}};const Ts=({edges_vertices:e,faces_edges:t})=>t.map((t=>t.map((t=>e[t])).map(((e,t,n)=>{const s=n[(t+1)%n.length];return e[0]===s[0]||e[0]===s[1]?e[1]:e[0]}))));const Ls=({edges_vertices:e,faces_vertices:t})=>{const n=bs({edges_vertices:e});return t.map((e=>e.map(((e,t,n)=>[e,n[(t+1)%n.length]].join(" "))))).map((e=>e.map((e=>n[e]))))};const Bs=({faces_vertices:e})=>{const t=e.map((()=>[]));const n={};e.forEach(((e,t)=>e.forEach(((s,r,o)=>{let c=o[(r+1)%e.length];if(c<s){[s,c]=[c,s]}const a=`${s} ${c}`;if(n[a]===undefined){n[a]={}}n[a][t]=true}))));Object.values(n).map((e=>Object.keys(e))).filter((e=>e.length>1)).forEach((e=>{t[e[0]].push(parseInt(e[1],10));t[e[1]].push(parseInt(e[0],10))}));return t};const Is=({vertices_coords:e,faces_vertices:t},n)=>t.map((t=>t.map((t=>e[t])))).map((e=>Je(e,n)));const Us=({vertices_coords:e,faces_vertices:t})=>t.map((t=>t.map((t=>e[t]))));const Rs=({vertices_coords:e,faces_vertices:t})=>t.map((t=>t.map((t=>e[t])))).map((e=>Ye(e)));const Ds=({vertices_coords:e,faces_vertices:t})=>t.map((t=>t.map((t=>e[t])).reduce(((e,t)=>x(e,t)),Array(e[0].length).fill(0)).map((e=>e/t.length))));const qs=Object.freeze({__proto__:null,makeEdgesAssignment:Fs,makeEdgesAssignmentSimple:js,makeEdgesBoundingBox:zs,makeEdgesCoords:Ps,makeEdgesEdges:Ms,makeEdgesFaces:ws,makeEdgesFacesUnsorted:ks,makeEdgesFoldAngle:Cs,makeEdgesFoldAngleFromFaces:Ss,makeEdgesLength:Vs,makeEdgesVector:Ns,makeFacesCenter2D:Rs,makeFacesConvexCenter:Ds,makeFacesEdgesFromVertices:Ls,makeFacesFaces:Bs,makeFacesPolygon:Is,makeFacesPolygonQuick:Us,makeFacesVerticesFromEdges:Ts,makePlanarFaces:$s,makeVerticesEdges:us,makeVerticesEdgesUnsorted:ds,makeVerticesFaces:vs,makeVerticesFacesUnsorted:hs,makeVerticesSectors:xs,makeVerticesToEdge:ys,makeVerticesToEdgeBidirectional:bs,makeVerticesToFace:Es,makeVerticesVertices:ps,makeVerticesVertices2D:ms,makeVerticesVerticesFromFaces:gs,makeVerticesVerticesUnsorted:_s,makeVerticesVerticesVector:As});const Ws=({edges_vertices:e})=>{if(!e){return[]}const t=[];const n={};for(let s=0;s<e.length;s+=1){const r=`${e[s][0]} ${e[s][1]}`;const o=`${e[s][1]} ${e[s][0]}`;if(n[r]!==undefined){t[s]=n[r]}else{n[r]=s;n[o]=s}}return t};const Gs=(e,t)=>{if(!t){t=Ws(e)}const n=Object.keys(t).map((e=>parseInt(e,10)));const s=fn(e,"edges",t);if(n.length){if(e.vertices_edges||e.vertices_vertices||e.vertices_faces){e.vertices_edges=ds(e);e.vertices_vertices=ps(e);e.vertices_edges=us(e);e.vertices_faces=vs(e)}}return{map:s,remove:n}};const Hs=Object.freeze({__proto__:null,duplicateEdges:Ws,removeDuplicateEdges:Gs});const Js=({edges_vertices:e})=>{if(!e){return[]}const t=[];for(let n=0;n<e.length;n+=1){if(e[n][0]===e[n][1]){t.push(n)}}return t};const Qs=(e,t,n)=>{const s={};n.forEach((e=>{s[e]=true}));Pt(e,t).forEach((t=>e[t].forEach(((n,r)=>{for(let o=n.length-1;o>=0;o-=1){if(s[n[o]]===true){e[t][r].splice(o,1)}}}))))};const Zs=(e,t)=>{if(!t){t=Js(e)}if(t.length){Qs(e,"edges",t)}return{map:mn(e,"edges",t),remove:t}};const Ys=Object.freeze({__proto__:null,circularEdges:Js,removeCircularEdges:Zs});const Xs=(...e)=>{if(e.length===0){return[]}const t=e[0].map(((e,t)=>t));e.forEach((e=>t.forEach(((n,s)=>{t[s]=e[n]}))));return t};const Ks=(...e)=>{if(e.length===0){return[]}const t=e[0].map(((e,t)=>[t]));e.forEach((e=>{t.forEach(((n,s)=>n.forEach(((n,r)=>{t[s][r]=e[n]}))));t.forEach(((e,n)=>{t[n]=e.reduce(((e,t)=>e.concat(t)),[]).filter((e=>e!==undefined))}))}));return t};const er=(...e)=>{if(e.length===0){return[]}let t=e[0].map(((e,t)=>t));e.forEach((e=>{const n=e.map((e=>t[e]));t=n}));return t};const tr=(...e)=>{if(e.length===0){return[]}let t=e[0].reduce(((e,t)=>e.concat(t)),[]).map(((e,t)=>[t]));e.forEach((e=>{const n=[];e.forEach(((e,s)=>{if(typeof e==="number"){n[s]=t[e]}else{n[s]=e.map((e=>t[e])).reduce(((e,t)=>e.concat(t)),[])}}));t=n}));return t};const nr=e=>{const t=[];const n=(e,n)=>{if(t[e]!==undefined){if(typeof t[e]==="number"){t[e]=[t[e],n]}else{t[e].push(n)}}else{t[e]=n}};e.forEach(((e,t)=>{if(e==null){return}if(typeof e==="number"){n(e,t)}if(e.constructor===Array){e.forEach((e=>n(e,t)))}}));return t};const sr=e=>{const t=[];e.forEach(((e,n)=>{t[e]=n}));return t};const rr=Object.freeze({__proto__:null,invertMap:nr,invertSimpleMap:sr,mergeBackmaps:tr,mergeNextmaps:Ks,mergeSimpleBackmaps:er,mergeSimpleNextmaps:Xs});const or=(e,t)=>{const n=dn(e,t);const s=Zs(e);const r=Gs(e);const o=hn(e);const c=sr(n.map);const a=o.remove.map((e=>c[e]));const i=sr(s.map);const f=r.remove.map((e=>i[e]));return{vertices:{map:Xs(n.map,o.map),remove:n.remove.concat(a)},edges:{map:Xs(s.map,r.map),remove:s.remove.concat(f)}}};const cr=function(e){let t;let n;if(typeof e!=="object"){return e}if(!e){return e}if(Object.prototype.toString.apply(e)==="[object Array]"){t=[];for(n=0;n<e.length;n+=1){t[n]=cr(e[n])}return t}t={};for(n in e){if(e.hasOwnProperty(n)){t[n]=cr(e[n])}}return t};const ar=e=>{if(!e.faces_vertices){return{}}const t=e.faces_edges?e.faces_edges:Ls(e);const n=e.faces_vertices.flatMap((e=>e));const s=t.flatMap((e=>e));let r=0;let o=0;let c=0;e.faces_vertices=e.faces_vertices.map((e=>e.map((()=>r++))));e.faces_edges=e.faces_edges.map((e=>e.map((()=>o++))));e.edges_vertices=e.faces_edges.flatMap((e=>e.map(((e,t,n)=>{const s=t===n.length-1?[c,c+1-n.length]:[c,c+1];c+=1;return s}))));if(e.vertices_coords){e.vertices_coords=cr(n.map((t=>e.vertices_coords[t])))}if(e.edges_assignment){e.edges_assignment=cr(s.map((t=>e.edges_assignment[t])))}if(e.edges_foldAngle){e.edges_foldAngle=cr(s.map((t=>e.edges_foldAngle[t])))}if(e.vertices_vertices){delete e.vertices_vertices}if(e.vertices_edges){delete e.vertices_edges}if(e.vertices_faces){delete e.vertices_faces}if(e.edges_edges){delete e.edges_edges}if(e.edges_faces){delete e.edges_faces}if(e.faces_faces){delete e.faces_faces}return{vertices:{map:n},edges:{map:s}}};const ir=e=>{const t=e.faces_vertices.flatMap((t=>t.map((t=>e.vertices_coords[t]))));let n=0;const s=e.faces_vertices.map((e=>e.map((()=>n++))));return{vertices_coords:JSON.parse(JSON.stringify(t)),faces_vertices:s}};const fr=e=>{const t=e.edges_vertices.flatMap((t=>t.map((t=>e.vertices_coords[t]))));let n=0;const s=e.edges_vertices.map((e=>e.map((()=>n++))));return{vertices_coords:JSON.parse(JSON.stringify(t)),edges_vertices:s}};const lr=Object.freeze({__proto__:null,explode:ar,explodeEdges:fr,explodeFaces:ir});const dr=(e,t)=>{const n=Zn(e,t,U);return n===undefined?undefined:e[n]};const ur=(e,t)=>{const n=Zn(e,t,I);return n===undefined?undefined:e[n]};const mr=({vector:e,origin:t},n,s=dt,r=a)=>{t=Z(e.length,t);n=Z(e.length,n);const o=_(e);const c=w(n,t);const i=F(e,c);const f=i/o;const l=s(f,r);return x(t,y(e,l))};const gr=(e,t)=>e.map(((e,t,n)=>w(n[(t+1)%n.length],e))).map(((t,n)=>({vector:t,origin:e[n]}))).map((e=>mr(e,t,mt))).map(((e,n)=>({point:e,edge:n,distance:I(e,t)}))).sort(((e,t)=>e.distance-t.distance)).shift();const pr=({radius:e,origin:t},n)=>x(t,y(h(w(n,t)),e));const _r=Object.freeze({__proto__:null,nearestPoint:ur,nearestPoint2:dr,nearestPointOnCircle:pr,nearestPointOnLine:mr,nearestPointOnPolygon:gr});const hr=({vector:e,origin:t},n,s=ot,r=a)=>{const o=O(n,t);const c=_(e);const i=Math.sqrt(c);if(i<r){return false}const f=L(o,e.map((e=>e/i)));const l=C(o,e)/c;return Math.abs(f)<r&&s(l,r/i)};const vr=(e,t,n=ot,s=ot,r=a)=>{const o=L(e.vector,t.vector);const c=-o;const i=O(t.origin,e.origin);const f=[-i[0],-i[1]];if(Math.abs(o)<r){if(Math.abs(L(i,e.vector))>r){return false}const o=f;const c=M(o,e.vector);const a=N(o,c);const l=i;const d=M(l,t.vector);const u=N(l,d);const m=C(e.vector,e.vector);const g=C(t.vector,t.vector);const p=C(o,t.vector)/g;const _=C(c,t.vector)/g;const h=C(a,t.vector)/g;const v=C(l,e.vector)/m;const b=C(d,e.vector)/m;const y=C(u,e.vector)/m;return n(v,r)||n(b,r)||s(p,r)||s(_,r)||n(y,r)||s(h,r)}const l=L(i,t.vector)/o;const d=L(f,e.vector)/c;return n(l,r/g(e.vector))&&s(d,r/g(t.vector))};const br=({radius:e,origin:t},n,s=rt,r=a)=>s(e-U(t,n),r);const yr=(e,t,n=rt,s=a)=>e.map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>L(v(O(e[1],e[0])),O(t,e[0])))).map((e=>n(e,s))).map(((e,t,n)=>e===n[0])).reduce(((e,t)=>e&&t),true);const Er=(e,t,n=a)=>{for(let s=0;s<2;s+=1){const r=s===0?e:t;const o=s===0?t:e;for(let e=0;e<r.length;e+=1){const t=r[e];const s=q(O(r[(e+1)%r.length],r[e]));const c=o.map((e=>O(e,t))).map((e=>C(s,e)));const a=r[(e+2)%r.length];const i=C(s,O(a,t));const f=i>0;const l=c.map((e=>f?e<n:e>-n)).reduce(((e,t)=>e&&t),true);if(l){return false}}}return true};const Ar=(e,t,n=a)=>{const s=Math.min(e.min.length,t.min.length);for(let r=0;r<s;r+=1){if(e.min[r]>t.max[r]+n||e.max[r]<t.min[r]-n){return false}}return true};const xr=Object.freeze({__proto__:null,overlapBoundingBoxes:Ar,overlapCirclePoint:br,overlapConvexPolygonPoint:yr,overlapConvexPolygons:Er,overlapLineLine:vr,overlapLinePoint:hr});const Mr=({vertices_coords:e},t)=>{if(!e){return undefined}const n=Z(e[0].length,t);const s=e.map(((e,t)=>({d:I(n,e),i:t}))).sort(((e,t)=>e.d-t.d)).shift();return s?s.i:undefined};const kr=({vertices_coords:e,edges_vertices:t},n)=>{if(!e||!t){return undefined}const s=t.map((t=>t.map((t=>e[t])))).map((e=>mr({vector:w(e[1],e[0]),origin:e[0]},n,mt)));return Zn(s,n,I)};const wr=({vertices_coords:e,faces_vertices:t},n)=>{if(!e||!t){return undefined}const s=t.map(((t,n)=>({face:t.map((t=>e[t])),i:n}))).filter((e=>yr(e.face,n))).shift();return s===undefined?undefined:s.i};const Or=(e,t)=>{const n=wr(e,t);if(n!==undefined){return n}if(e.edges_faces){const n=kr(e,t);const s=e.edges_faces[n];if(s.length===1){return s[0]}if(s.length>1){const n=Ds({vertices_coords:e.vertices_coords,faces_vertices:s.map((t=>e.faces_vertices[t]))});const r=n.map((e=>I(e,t)));let o=0;for(let e=0;e<r.length;e+=1){if(r[e]<r[o]){o=e}}return s[o]}}return undefined};const jr=(e,...t)=>{const n={vertices:Mr,edges:kr,faces:Or};const s=Ve(...t);const r=Object.create(null);["vertices","edges","faces"].forEach((t=>{Object.defineProperty(r,yt[t],{enumerable:true,get:()=>n[t](e,s)});St(e,t).forEach((n=>Object.defineProperty(r,n,{enumerable:true,get:()=>e[n][r[yt[t]]]})))}));return r};const Fr=Object.freeze({__proto__:null,faceContainingPoint:wr,nearest:jr,nearestEdge:kr,nearestFace:Or,nearestVertex:Mr});const Cr=({vertices_coords:e,faces_vertices:t},n=0)=>t.map((t=>[t.reduce(((t,s)=>e[t][n]<e[s][n]?t:s)),t.reduce(((t,s)=>e[t][n]>e[s][n]?t:s))]));const Sr=({vertices_coords:e},t=0,n=a)=>rn(e.map((e=>e[t])),n).map((n=>({vertices:n,t:n.reduce(((n,s)=>n+e[s][t]),0)/n.length})));const Pr=(e,{edges_vertices:t,vertices_edges:n},s=a)=>{if(!n){n=ds({edges_vertices:t})}const r=t.map((t=>t.map((t=>e[t]))));const o=r.map((e=>et(...e,s)));const c=r.map((([e,t])=>Math.sign(e-t)));const i=t.map((([e,t],n)=>o[n]?{[e]:0,[t]:0}:{[e]:c[n],[t]:-c[n]}));return rn(e,s).map((e=>e.filter((e=>n[e])))).filter((e=>e.length)).map((t=>({vertices:t,t:t.reduce(((t,n)=>t+e[n]),0)/t.length,start:Xt(t.flatMap((e=>n[e].filter((t=>i[t][e]<=0))))),end:Xt(t.flatMap((e=>n[e].filter((t=>i[t][e]>=0)))))})))};const Nr=({vertices_coords:e,edges_vertices:t,vertices_edges:n},s=0,r=a)=>Pr(e.map((e=>e[s])),{edges_vertices:t,vertices_edges:n},r);const Vr=({vertices_coords:e,faces_vertices:t},n=0,s=a)=>Pr(e.map((e=>e[n])),{edges_vertices:Cr({vertices_coords:e,faces_vertices:t},n)},s);const zr=({vertices_coords:e,edges_vertices:t,faces_vertices:n},s=0,r=a)=>{const o=e.map((e=>e[s]));const c=Cr({vertices_coords:e,faces_vertices:n},s);const i=ds({edges_vertices:t});const f=ds({edges_vertices:c});const l=t.map((e=>e.map((e=>o[e]))));const d=c.map((e=>e.map((e=>o[e]))));const u=l.map((e=>et(...e,r)));const m=d.map((e=>et(...e,r)));const g=l.map((([e,t])=>Math.sign(e-t)));const p=d.map((([e,t])=>Math.sign(e-t)));const _=t.map((([e,t],n)=>u[n]?{[e]:0,[t]:0}:{[e]:g[n],[t]:-g[n]}));const h=n.map((([e,t],n)=>m[n]?{[e]:0,[t]:0}:{[e]:p[n],[t]:-p[n]}));return rn(o,r).map((e=>({vertices:e,t:e.reduce(((e,t)=>e+o[t]),0)/e.length,edges:{start:Xt(e.filter((e=>i[e]!==undefined)).flatMap((e=>i[e].filter((t=>_[t][e]<=0))))),end:Xt(e.filter((e=>i[e]!==undefined)).flatMap((e=>i[e].filter((t=>_[t][e]>=0)))))},faces:{start:Xt(e.filter((e=>f[e]!==undefined)).flatMap((e=>f[e].filter((t=>h[t][e]<=0))))),end:Xt(e.filter((e=>f[e]!==undefined)).flatMap((e=>f[e].filter((t=>h[t][e]>=0)))))}})))};const $r=Object.freeze({__proto__:null,sweep:zr,sweepEdges:Nr,sweepFaces:Vr,sweepVertices:Sr});const Tr=({vertices_coords:e,edges_vertices:t,vertices_edges:n,edges_vector:s},r=a)=>{if(!s){s=Ns({vertices_coords:e,edges_vertices:t})}const o=t.map(((n,r)=>({vector:s[r],origin:e[t[r][0]]})));const c=t.map((t=>t.map((t=>e[t][1])))).map((e=>e[0]<e[1]?e:[e[1],e[0]])).map((e=>[e[0]-r,e[1]+r]));const i=[];const f=[];Nr({vertices_coords:e,edges_vertices:t,vertices_edges:n},r).forEach((n=>{n.start.forEach((e=>{f[e]=true}));f.forEach(((s,a)=>n.vertices.forEach((n=>{if(t[a][0]===n||t[a][1]===n){return}const s=e[n][1];if(s<c[a][0]||s>c[a][1]){return}if(!i[a]){i[a]=[]}i[a][n]=hr(o[a],e[n],lt,r)}))));n.end.forEach((e=>delete f[e]))}));return i.map((e=>e.map(((e,t)=>e?t:undefined)).filter((e=>e!==undefined))))};const Lr=Object.freeze({__proto__:null,getVerticesEdgesOverlap:Tr});const Br=(e,t,n=ot,s=ot,r=a)=>{const o=L(v(e.vector),v(t.vector));if(Math.abs(o)<r){return undefined}const c=L(e.vector,t.vector);const i=-c;const f=[t.origin[0]-e.origin[0],t.origin[1]-e.origin[1]];const l=[-f[0],-f[1]];const d=L(f,t.vector)/c;const u=L(l,e.vector)/i;if(n(d,r/g(e.vector))&&s(u,r/g(t.vector))){return M(e.origin,E(e.vector,d))}return undefined};const Ir=(e,t,n=st,s=ot,r=a)=>{const o=t.vector[0]**2+t.vector[1]**2;const c=Math.sqrt(o);const i=c===0?t.vector:t.vector.map((e=>e/c));const f=q(i);const l=O(t.origin,e.origin);const d=L(l,i);if(Math.abs(d)>e.radius+r){return undefined}const u=Math.sqrt(e.radius**2-d**2);const m=(t,n)=>e.origin[n]-f[n]*d+i[n]*t;const g=Math.abs(e.radius-Math.abs(d))<r?[u].map((e=>[e,e].map(m))):[-u,u].map((e=>[e,e].map(m)));const p=g.map((e=>e.map(((e,n)=>e-t.origin[n])))).map((e=>e[0]*t.vector[0]+t.vector[1]*e[1])).map((e=>e/o));return g.filter(((e,t)=>s(p[t],r)))};const Ur=e=>{if(e>=1)return 0;if(e<=-1)return Math.PI;return Math.acos(e)};const Rr=(e,t,n)=>{const s=t[0]-e[0];const r=t[1]-e[1];const o=s*Math.cos(n)+r*Math.sin(n);const c=r*Math.cos(n)-s*Math.sin(n);return[e[0]+o,e[1]+c]};const Dr=(e,t,n=st,s=st,r=a)=>{const o=e.radius<t.radius?e.radius:t.radius;const c=e.radius<t.radius?t.radius:e.radius;const i=e.radius<t.radius?e.origin:t.origin;const f=e.radius<t.radius?t.origin:e.origin;const l=[i[0]-f[0],i[1]-f[1]];const d=Math.sqrt(l[0]**2+l[1]**2);if(d<r){return undefined}const u=l.map(((e,t)=>e/d*c+f[t]));if(Math.abs(c+o-d)<r||Math.abs(c-(o+d))<r){return[u]}if(d+o<c||c+o<d){return undefined}const m=Ur((o*o-d*d-c*c)/(-2*d*c));const g=Rr(f,u,+m);const p=Rr(f,u,-m);return[g,p]};const qr=e=>{for(let t=1;t<e.length;t+=1){if(!nt(e[0],e[t])){return[e[0],e[t]]}}return undefined};const Wr=(e,{vector:t,origin:n},s=ft,r=ot,o=a)=>{const c=e.map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>Br({vector:O(e[1],e[0]),origin:e[0]},{vector:t,origin:n},s,r,o))).filter((e=>e!==undefined));switch(c.length){case 0:return undefined;case 1:return[c];default:return qr(c)||[c[0]]}};const Gr=(e,{vector:t,origin:n},s=ft,r=ct,o=a)=>{const c=Wr(e,{vector:t,origin:n},s,r,o);let i;switch(r){case it:i=at;break;case lt:i=ft;break;default:return c}const f=Wr(e,{vector:t,origin:n},ft,i,o);if(f===undefined){return undefined}const l=qr(f);if(l===undefined){switch(r){case it:return yr(e,n,rt,o)?f:undefined;case lt:return yr(e,M(n,t),rt,o)||yr(e,n,rt,o)?f:undefined;case ct:return undefined;default:return undefined}}return yr(e,N(...l),rt,o)?l:c};const Hr=Object.freeze({__proto__:null,intersectCircleCircle:Dr,intersectCircleLine:Ir,intersectConvexPolygonLine:Gr,intersectLineLine:Br});const Jr=({vertices_coords:e,edges_vertices:t,vertices_edges:n,edges_vector:s,edges_origin:r},o=a)=>{if(!s){s=Ns({vertices_coords:e,edges_vertices:t})}if(!r){r=t.map((t=>e[t[0]]))}const c=[];const i=[];Nr({vertices_coords:e,edges_vertices:t,vertices_edges:n},o).forEach((e=>{e.start.forEach((e=>{i[e]=true}));i.forEach(((t,n)=>e.start.forEach((e=>{if(n===e){return}const t=Br({vector:s[n],origin:r[n]},{vector:s[e],origin:r[e]},lt,lt,o);if(t){if(!c[n]){c[n]=[]}if(!c[e]){c[e]=[]}c[n][e]=t;c[e][n]=t}}))));e.end.forEach((e=>delete i[e]))}));return c};const Qr=({vertices_coords:e,edges_vertices:t,edges_vector:n},s=a)=>{if(!n){n=Ns({vertices_coords:e,edges_vertices:t})}const r=n.map((e=>h(e)));const o=t.map((()=>[]));r.forEach(((e,t)=>{r.forEach(((e,n)=>{if(n>=t){return}if(1-Math.abs(F(r[t],r[n]))<s){o[t].push(n);o[n].push(t)}}))}));return o};const Zr=({vertices_coords:e,edges_vertices:t,edges_vector:n},s)=>{if(!n){n=Ns({vertices_coords:e,edges_vertices:t})}const r=t.map((t=>e[t[0]]));const o=n.map(((e,t)=>({vector:e,origin:r[t]})));return Qr({vertices_coords:e,edges_vertices:t,edges_vector:n},s).map(((e,t)=>e.filter((e=>vr(o[t],o[e],lt,lt,s)))))};const Yr=Object.freeze({__proto__:null,getEdgesEdgesIntersection:Jr,makeEdgesEdgesParallelOverlap:Zr});const Xr=(e,t=a)=>{const n=e.edges_vertices.map((t=>t.map((t=>e.vertices_coords[t]))));const s=n.map((e=>w(e[1],e[0])));const r=n.map((e=>e[0]));const o=ds(e);const c=Jr({vertices_coords:e.vertices_coords,vertices_edges:o,edges_vertices:e.edges_vertices,edges_vector:s,edges_origin:r},1e-6);const i=Tr({vertices_coords:e.vertices_coords,vertices_edges:o,edges_vertices:e.edges_vertices,edges_vector:s},t);if(c.flat().filter((e=>e!==undefined)).length===0&&i.flat().filter((e=>e!==undefined)).length===0){return undefined}const f={vertices:e.vertices_coords.length};c.forEach((t=>t.filter((e=>e!==undefined)).filter((e=>e.length===2)).forEach((t=>{const n=e.vertices_coords.length;e.vertices_coords.push([...t]);t.splice(0,2);t.push(n)}))));c.forEach(((e,t)=>{e.forEach(((e,n)=>{if(e){c[t][n]=e[0]}}))}));const l=c.map((e=>e.filter((e=>e!==undefined))));e.edges_vertices.forEach(((e,t)=>{if(l[t]){e.push(...l[t])}if(i[t]){e.push(...i[t])}}));e.edges_vertices.forEach(((t,n)=>{e.edges_vertices[n]=cs({vertices_coords:e.vertices_coords},t,s[n])}));const d=e.edges_vertices.map(((e,t)=>Array(e.length-1).fill(t))).flat();e.edges_vertices=e.edges_vertices.map((e=>Array.from(Array(e.length-1)).map(((t,n,s)=>[e[n],e[n+1]])))).flat();if(e.edges_assignment&&e.edges_foldAngle&&e.edges_foldAngle.length>e.edges_assignment.length){for(let t=e.edges_assignment.length;t<e.edges_foldAngle.length;t+=1){e.edges_assignment[t]=Ot(e.edges_foldAngle[t])}}if(e.edges_assignment){e.edges_assignment=d.map((t=>e.edges_assignment[t]||"U"))}if(e.edges_foldAngle){e.edges_foldAngle=d.map((t=>e.edges_foldAngle[t])).map(((t,n)=>t===undefined?wt(e.edges_assignment[n]):t))}return{vertices:{new:Array.from(Array(e.vertices_coords.length-f.vertices)).map(((e,t)=>f.vertices+t))},edges:{backmap:d}}};const Kr=["vertices_coords","edges_vertices","edges_assignment","edges_foldAngle"];const eo=(e,t=a)=>{e.vertices_coords=e.vertices_coords.map((e=>e.slice(0,2)));["vertices","edges","faces"].map((t=>St(e,t))).flat().filter((e=>!Kr.includes(e))).forEach((t=>delete e[t]));const s={vertices:{},edges:{}};let r;for(r=0;r<20;r+=1){const n=dn(e,t/2);const r=Gs(e);const o=Zs(e);const c=Xr(e,t);if(c===undefined){s.vertices.map=s.vertices.map===undefined?n.map:Ks(s.vertices.map,n.map);s.edges.map=s.edges.map===undefined?Ks(r.map,o.map):Ks(s.edges.map,r.map,o.map);break}const a=nr(c.edges.backmap);const i=Ks(r.map,o.map,a);s.vertices.map=s.vertices.map===undefined?n.map:Ks(s.vertices.map,n.map);s.edges.map=s.edges.map===undefined?i:Ks(s.edges.map,i)}if(r===20){throw new Error(n.planarize)}return s};const to=e=>{const t=e.edges_vertices.length;if(!e.edges_assignment){e.edges_assignment=[]}if(!e.edges_foldAngle){e.edges_foldAngle=[]}if(e.edges_assignment.length>e.edges_foldAngle.length){for(let t=e.edges_foldAngle.length;t<e.edges_assignment.length;t+=1){e.edges_foldAngle[t]=wt(e.edges_assignment[t])}}if(e.edges_foldAngle.length>e.edges_assignment.length){for(let t=e.edges_assignment.length;t<e.edges_foldAngle.length;t+=1){e.edges_assignment[t]=Ot(e.edges_foldAngle[t])}}for(let n=e.edges_assignment.length;n<t;n+=1){e.edges_assignment[n]="U";e.edges_foldAngle[n]=0}};const no=(e,t)=>{if(t===undefined&&!e.faces_vertices&&!e.faces_edges){t=true}if(t&&e.vertices_coords){const t=$s(e);e.faces_vertices=t.faces_vertices;e.faces_edges=t.faces_edges;return}if(e.faces_vertices&&e.faces_edges){return}if(e.faces_vertices&&!e.faces_edges){e.faces_edges=Ls(e)}else if(e.faces_edges&&!e.faces_vertices){e.faces_vertices=Ts(e)}else{e.faces_vertices=[];e.faces_edges=[]}};const so=(e,t)=>{if(typeof e!=="object"){return e}if(!e.edges_vertices){return e}e.vertices_edges=ds(e);e.vertices_vertices=ps(e);e.vertices_edges=us(e);to(e);no(e,t);e.vertices_faces=vs(e);e.edges_faces=ks(e);e.faces_faces=Bs(e);return e};const ro=({vertices_faces:e,edges_vertices:t,edges_faces:n,faces_edges:s,faces_vertices:r},o)=>{if(n&&n[o]){return n[o]}const c=t[o];if(e!==undefined){const t=[];for(let n=0;n<e[c[0]].length;n+=1){for(let s=0;s<e[c[1]].length;s+=1){if(e[c[0]][n]===e[c[1]][s]){if(e[c[0]][n]===undefined){continue}t.push(e[c[0]][n])}}}return t}if(s){const e=[];for(let t=0;t<s.length;t+=1){for(let n=0;n<s[t].length;n+=1){if(s[t][n]===o){e.push(t)}}}return e}if(r){console.warn("todo: findAdjacentFacesToEdge")}};const oo=({vertices_vertices:e},t,n)=>{if(!e){return}e[t]=[...n];n.forEach(((n,s,r)=>{const o=r[(s+1)%r.length];const c=e[n].indexOf(o);e[n][c]=t}))};const co=({vertices_coords:e,vertices_vertices:t,vertices_sectors:n},s)=>{if(!n){return}n[s]=t[s].length===1?[l]:Bn(t[s].map((t=>O(e[t],e[s]))))};const ao=({vertices_edges:e},t,n,s,r)=>{if(!e){return}e[n]=[...r];s.map((n=>e[n].indexOf(t))).forEach(((t,n)=>{e[s[n]][t]=r[n]}))};const io=({vertices_faces:e},t,n)=>{if(!e){return}e[t]=[...n]};const fo=({edges_faces:e},t,n)=>{if(!e){return}t.forEach((t=>{e[t]=[...n]}))};const lo=({faces_vertices:e},t,n,s)=>{if(!e){return}s.map((t=>e[t])).forEach((e=>e.map(((e,t,s)=>{const r=(t+1)%s.length;return e===n[0]&&s[r]===n[1]||e===n[1]&&s[r]===n[0]?r:undefined})).filter((e=>e!==undefined)).sort(((e,t)=>t-e)).forEach((n=>e.splice(n,0,t)))))};const uo=({edges_vertices:e,faces_vertices:t,faces_edges:n},s)=>{const r=bs({edges_vertices:e});s.map((e=>t[e].map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>r[e.join(" ")])))).forEach(((e,t)=>{n[s[t]]=e}))};const mo=(e,t,n)=>{const s=e.edges_vertices[t];const r=[{edges_vertices:[s[0],n]},{edges_vertices:[n,s[1]]}];r.forEach((n=>["edges_assignment","edges_foldAngle"].filter((n=>e[n]&&e[n][t]!==undefined)).forEach((s=>{n[s]=e[s][t]}))));return r};const go=(e,t,n,s=a)=>{if(e.edges_vertices.length<t){return{}}const r=e.edges_vertices[t];if(!n){n=P(...r)}const o=r.map((t=>e.vertices_coords[t])).map((e=>I(e,n)<s));if(o[0]){return{vertex:r[0],edges:{}}}if(o[1]){return{vertex:r[1],edges:{}}}const c=e.vertices_coords.length;e.vertices_coords[c]=n;const i=[0,1].map((t=>t+e.edges_vertices.length));mo(e,t,c).forEach(((t,n)=>Object.keys(t).forEach((s=>{e[s][i[n]]=t[s]}))));oo(e,c,r);co(e,c);ao(e,t,c,r,i);const f=ro(e,t);if(f){io(e,c,f);fo(e,i,f);lo(e,c,r,f);uo(e,f)}const l=mn(e,"edges",[t]);i.forEach(((e,t)=>{i[t]=l[i[t]]}));l.splice(-2);l[t]=i;return{vertex:c,edges:{map:l,new:i,remove:t}}};const po=({vertices_coords:e},t,n)=>{const s=t.map((t=>e[t])).reverse();return{edges_vertices:[...t],edges_foldAngle:0,edges_assignment:"U",edges_length:I(...s),edges_vector:w(...s),edges_faces:[n,n]}};const _o=(e,t,n)=>{const s=e.edges_vertices.length;const r=po(e,n,t);Object.keys(r).filter((t=>e[t]!==undefined)).forEach((t=>{e[t][s]=r[t]}));return s};const ho=({edges_vertices:e,faces_vertices:t,faces_edges:n},s,r)=>{const o=r.map((e=>t[s].indexOf(e)));const c=nn(t[s],o).map((e=>({faces_vertices:e})));if(n){const t=bs({edges_vertices:e});c.map((e=>e.faces_vertices.map(((e,t,n)=>`${e} ${n[(t+1)%n.length]}`)).map((e=>t[e])))).forEach(((e,t)=>{c[t].faces_edges=e}))}return c};const vo=(e,t,n)=>{const s=[0,1].map((t=>e.faces_vertices.length+t));ho(e,t,n).forEach(((t,n)=>Object.keys(t).forEach((r=>{e[r][s[n]]=t[r]}))));return s};const bo=(e,{vertices:t,edges:n})=>{let s;const r=n.map((t=>{const n=go(e,s?s[t.edge]:t.edge,t.coords);s=s?Ks(s,n.edges.map):n.edges.map;return n}));t.push(...r.map((e=>e.vertex)));let o;r.forEach((e=>{e.edges.remove=o?o[e.edges.remove]:e.edges.remove;const t=sr(e.edges.map);o=o?tr(o,t):t}));return{vertices:t,edges:{map:s,remove:r.map((e=>e.edges.remove))}}};const yo=({vertices_coords:e,vertices_vertices:t,edges_vertices:n},s)=>{const r=n[s][0];const o=n[s][1];t[r]=os({vertices_coords:e},t[r].concat(o),r);t[o]=os({vertices_coords:e},t[o].concat(r),o)};const Eo=({edges_vertices:e,vertices_edges:t,vertices_vertices:n},s)=>{if(!t||!n){return}const r=e[s];r.map((e=>n[e])).map(((e,t)=>e.indexOf(r[(t+1)%r.length]))).forEach(((e,n)=>t[r[n]].splice(e,0,s)))};const Ao=(e,t,s)=>{const r={};s.forEach((t=>e.faces_vertices[t].forEach((e=>{if(!r[e]){r[e]=[]}r[e].push(t)}))));e.faces_vertices[t].forEach((s=>{const o=e.vertices_faces[s].indexOf(t);const c=r[s];if(o===-1||!c){throw new Error(n.convexFace)}e.vertices_faces[s].splice(o,1,...c)}))};const xo=(e,t,s,r)=>{const o={};r.forEach((t=>e.faces_edges[t].forEach((e=>{if(!o[e]){o[e]=[]}o[e].push(t)}))));const c=[...e.faces_edges[t],s];c.forEach((s=>{const r=o[s];const c=[];for(let n=0;n<e.edges_faces[s].length;n+=1){if(e.edges_faces[s][n]===t){c.push(n)}}if(c.length===0||!r){throw new Error(n.convexFace)}c.reverse().forEach((t=>e.edges_faces[s].splice(t,1)));const a=c[c.length-1];e.edges_faces[s].splice(a,0,...r)}))};const Mo=({faces_vertices:e,faces_faces:t},n,s)=>{const r=t[n];const o=s.map((t=>e[t]));const c=r.map((t=>{const n=e[t];const r=[0,0];for(let e=0;e<o.length;e+=1){let t=0;for(let s=0;s<n.length;s+=1){if(o[e].indexOf(n[s])!==-1){t+=1}}r[e]=t}if(r[0]>=2){return s[0]}if(r[1]>=2){return s[1]}}));s.forEach(((e,n,r)=>{t[e]=[r[(n+1)%s.length]]}));r.forEach(((e,s)=>{for(let r=0;r<t[e].length;r+=1){if(t[e][r]===n){t[e][r]=c[s];t[c[s]].push(e)}}}))};const ko=()=>0;const wo=(e,t)=>e<-t?-1:0;const Oo=(e,t)=>e<-t?-1:e>1+t?1:0;const jo=({vertices_coords:e,faces_vertices:t},{vector:n,origin:s},r=ko,o=a)=>{const c=C(n,n);const i=v(n);const f=e.map((e=>O(e,s))).map((e=>v(e))).map((e=>L(i,e))).map((e=>Math.abs(e)<o?0:Math.sign(e)));const l=e.map((e=>O(e,s))).map((e=>C(e,n))).map((e=>e/c)).map((e=>r(e,o)));const d=t.map((e=>e.map((e=>f[e])).map(((e,t,n)=>e===n[0])).reduce(((e,t)=>e&&t),true))).map((e=>!e));const u=t.map((e=>e.map((e=>l[e])).map(((e,t,n)=>e===n[0])).reduce(((e,t)=>e&&t),true))).map((e=>!e)).map(((e,n)=>e||l[t[n][0]]===0));return t.map(((e,t)=>t)).filter((e=>d[e]&&u[e]))};const Fo=(e,{vector:t,origin:n},s=a)=>jo(e,{vector:t,origin:n},ko,s);const Co=(e,{vector:t,origin:n},s=a)=>jo(e,{vector:t,origin:n},wo,s);const So=(e,t,n=a)=>{const s=O(t[1],t[0]);const r=t[0];return jo(e,{vector:s,origin:r},Oo,n)};const Po=({vertices_coords:e,edges_vertices:t,faces_vertices:n,faces_edges:s},r,{vector:o,origin:c},i=a)=>{const f=n[r].map((t=>e[t])).map((e=>hr({vector:o,origin:c},e,(()=>true),i))).map(((e,t)=>e?t:undefined)).filter((e=>e!==undefined));const l=f.map((e=>n[r][e]));const d=f.concat(f.map((e=>e+n[r].length))).map(((e,t,n)=>n[t+1]-e===1)).reduce(((e,t)=>e||t),false);if(d){return undefined}if(l.length>1){return{vertices:l,edges:[]}}const u=s[r].map((n=>t[n].map((t=>e[t])))).map((e=>Br({vector:o,origin:c},{vector:O(e[1],e[0]),origin:e[0]},ot,lt,i))).map(((e,t)=>({coords:e,edge:s[r][t]}))).filter((e=>e.coords!==undefined)).filter((e=>!l.map((n=>t[e.edge].includes(n))).reduce(((e,t)=>e||t),false)));return u.length+l.length===2?{vertices:l,edges:u}:undefined};const No=Object.freeze({__proto__:null,facesLineTypeOverlap:jo,getFacesLineOverlap:Fo,getFacesRayOverlap:Co,getFacesSegmentOverlap:So,intersectConvexFaceLine:Po});const Vo=(e,t,n,s)=>{const r=Po(e,t,n,s);if(r===undefined){return undefined}const o=bo(e,r);o.edges.new=_o(e,t,o.vertices);yo(e,o.edges.new);Eo(e,o.edges.new);const c=vo(e,t,o.vertices);Ao(e,t,c);xo(e,t,o.edges.new,c);Mo(e,t,c);const a=mn(e,"faces",[t]);c.forEach(((e,t)=>{c[t]=a[c[t]]}));a.splice(-2);a[t]=c;o.faces={map:a,new:c,remove:t};return o};const zo=(e,t)=>{const n={};t.forEach((e=>{n[e]=true}));const s=[];t.forEach((t=>{s[t]=e[t].filter((e=>n[e]))}));return s};const $o=(e,t={})=>{if(!t.vertices){t.vertices=[]}if(!t.edges){t.edges=[]}if(!t.faces){t.faces=[]}const n=["faces","edges","vertices"];const s={};n.forEach((e=>{s[e]={}}));n.forEach((e=>t[e].forEach((t=>{s[e][t]=true}))));const r={};n.forEach((t=>{St(e,t).forEach((e=>{r[e]={}}));Pt(e,t).forEach((e=>{r[e]={}}))}));n.forEach((t=>{St(e,t).forEach((e=>{r[e].prefix=t}));Pt(e,t).forEach((e=>{r[e].suffix=t}))}));const o={...e};pt.graph.forEach((e=>delete o[e]));delete o.file_frames;Object.keys(r).forEach((e=>{o[e]=[]}));Object.keys(r).forEach((n=>{const{prefix:c,suffix:a}=r[n];if(c&&a){t[c].forEach((t=>{o[n][t]=e[n][t].filter((e=>s[a][e]))}))}else if(c){t[c].forEach((t=>{o[n][t]=e[n][t]}))}else if(a){o[n]=e[n].map((e=>e.filter((e=>s[a][e]))))}else{o[n]=e[n]}}));return o};const To=(e,t)=>{let n=[];if(e.faces_vertices){n=en(t.flatMap((t=>e.faces_vertices[t])))}let s=[];if(e.faces_edges){s=en(t.flatMap((t=>e.faces_edges[t])))}else if(e.edges_vertices){const t={};n.forEach((e=>{t[e]=true}));s=e.edges_vertices.map(((e,n)=>t[e[0]]&&t[e[1]]?n:undefined)).filter((e=>e!==undefined))}return $o(e,{faces:t,edges:s,vertices:n})};const Lo=Object.freeze({__proto__:null,selfRelationalArraySubset:zo,subgraph:$o,subgraphWithFaces:To});const Bo=e=>{const t={vertices:Yt.vertices(e),edges:Yt.edges(e),faces:Yt.faces(e)};const n={vertices:Wn.vertices(e),edges:Wn.edges(e),faces:Wn.faces(e)};return{vertices:t.vertices>=n.vertices,edges:t.edges>=n.edges,faces:t.faces>=n.faces}};const Io=(e,t)=>{const n=Ws(e);const s=Js(e);const r=_n(e);const o=ln(e,t);const c=Bo(e);const a=n.length===0&&s.length===0&&r.length===0&&c.vertices&&c.edges&&c.faces;const i=a?"valid":"problematic";return{summary:i,vertices:{isolated:r,duplicate:o,references:c.vertices},edges:{circular:s,duplicate:n,references:c.edges},faces:{references:c.faces}}};const Uo=({vertices_coords:e},t)=>Xe(e,t);const Ro=({edges_vertices:e,edges_assignment:t})=>Xt(e.filter(((e,n)=>t[n]==="B"||t[n]==="b")).flat());const Do=()=>({vertices:[],edges:[],polygon:[]});const qo=({vertices_coords:e,vertices_edges:t,edges_vertices:n,edges_assignment:s})=>{if(!s||!n){return Do()}if(!t){t=ds({edges_vertices:n})}const r=s.map((e=>e==="B"||e==="b"));const o=[];const c=[];let a=-1;for(let e=0;e<r.length;e+=1){if(r[e]){a=e;break}}if(a===-1){return Do()}r[a]=false;o.push(a);c.push(n[a][0]);let i=n[a][1];while(c[0]!==i){c.push(i);a=t[i].filter((e=>r[e])).shift();if(a===undefined){return Do()}if(n[a][0]===i){[,i]=n[a]}else{[i]=n[a]}r[a]=false;o.push(a)}return{vertices:c,edges:o,polygon:e?c.map((t=>e[t])):[]}};const Wo=({vertices_coords:e,vertices_edges:t,vertices_vertices:s,edges_vertices:r},o=true)=>{if(!s){s=ps({vertices_coords:e,vertices_edges:t,edges_vertices:r})}const c=bs({edges_vertices:r});const a=[];const i=[];const f={vertices:i,edges:a};let l=-Infinity;let d=-1;e.forEach(((e,t)=>{if(e[0]>l){l=e[0];d=t}}));if(d===-1){return f}i.push(d);const u=e[d];const m=s[d];if(!m){return f}const g=m.map((t=>e[t])).map((e=>[e[0]-u[0],e[1]-u[1]])).map((e=>Math.atan2(e[1],e[0]))).map((e=>e<0?e+Math.PI*2:e)).map(((e,t)=>({a:e,i:t}))).sort(((e,t)=>e.a-t.a)).shift().i;const p=m[g];const _=d<p?`${d} ${p}`:`${p} ${d}`;const h=c[_];a.push(h);let v=d;let b=p;const y=performance.now();const E=1e4;let A=0;while(true){const e=s[b];const t=e.indexOf(v);const r=(t+1)%e.length;const l=e[r];const d=b<l?`${b} ${l}`:`${l} ${b}`;const u=c[d];if(u===a[0]){return f}i.push(b);a.push(u);v=b;b=l;A+=1;if(o&&A%1e3===0&&performance.now()-y>E){throw new Error(n.planarBoundary)}}};const Go=Object.freeze({__proto__:null,boundary:qo,boundaryVertices:Ro,boundingBox:Uo,planarBoundary:Wo});const Ho=(e,t)=>{const n={};t.forEach((e=>{n[e]=true}));const s=e.map((e=>!!n[e]));const r=[];const o=s.indexOf(false);const c={};for(let t=o+1;t<s.length;t+=1){if(s[t]&&!c[e[t]]){r.push(e[t]);c[e[t]]=true}}for(let t=0;t<o;t+=1){if(s[t]&&!c[e[t]]){r.push(e[t]);c[e[t]]=true}}return r};const Jo=({faces_vertices:e,faces_faces:t},n=0)=>{if(!t){t=Bs({faces_vertices:e})}if(t.length===0){return[]}const s=[[{face:n}]];const r={};r[n]=true;do{const n=s[s.length-1].map((e=>t[e.face].map((t=>({face:t,parent:e.face}))))).reduce(((e,t)=>e.concat(t)),[]);const o={};n.forEach(((e,t)=>{if(r[e.face]){o[t]=true}r[e.face]=true}));const c=n.filter(((e,t)=>!o[t]));c.map((t=>Ho(e[t.face],e[t.parent]))).forEach(((e,t)=>{const n=e.slice(0,2);c[t].edge_vertices=n}));s[s.length]=c}while(s[s.length-1].length>0);if(s.length>0&&s[s.length-1].length===0){s.pop()}return s};const Qo=Object.freeze({__proto__:null,getFaceFaceSharedVertices:Ho,makeFaceSpanningTree:Jo});const Zo=({vertices_coords:e,vertices_faces:t,faces_vertices:n},s)=>{if(!t){t=vs({faces_vertices:n})}const r=t.map((e=>e.filter((e=>e!=null)).shift())).map((e=>e===undefined?ee:s[e]));return e.map(((e,t)=>te(r[t],e)))};const Yo={U:true,u:true};const Xo=({vertices_coords:e,edges_vertices:t,edges_foldAngle:n,edges_assignment:s,faces_vertices:r,faces_faces:o},c=0)=>{if(!s&&n){s=js({edges_foldAngle:n})}if(!n){if(s){n=Cs({edges_assignment:s})}else{n=Array(t.length).fill(0)}}const a=bs({edges_vertices:t});const i=r.map((()=>me));Jo({faces_vertices:r,faces_faces:o},c).slice(1).forEach((t=>t.forEach((t=>{const r=t.edge_vertices.map((t=>e[t]));const o=t.edge_vertices.join(" ");const c=a[o];const f=Yo[s[c]]?Math.PI:n[c]*Math.PI/180;const l=ke(f,w(...Y(r[1],r[0])),r[0]);i[t.face]=he(i[t.parent],l)}))));return i};const Ko=({vertices_coords:e,edges_vertices:t,edges_foldAngle:n,edges_assignment:s,faces_vertices:r,faces_faces:o},c=0)=>{if(!n){if(s){n=Cs({edges_assignment:s})}else{n=Array(t.length).fill(0)}}const a=Lt({edges_vertices:t,edges_foldAngle:n,edges_assignment:s});const i=bs({edges_vertices:t});const f=r.map((()=>ee));Jo({faces_vertices:r,faces_faces:o},c).slice(1).forEach((t=>t.forEach((t=>{const n=t.edge_vertices.map((t=>e[t]));const s=t.edge_vertices.join(" ");const r=i[s];const o=O(n[1],n[0]);const c=n[0];const l=a[r]?le(o,c):ee;f[t.face]=se(f[t.parent],l)}))));return f};const ec=Object.freeze({__proto__:null,makeFacesMatrix:Xo,makeFacesMatrix2:Ko,multiplyVerticesFacesMatrix2:Zo});const tc=({vertices_coords:e,vertices_faces:t,edges_vertices:n,edges_foldAngle:s,edges_assignment:r,faces_vertices:o,faces_faces:c,faces_matrix:a},i)=>{a=Xo({vertices_coords:e,edges_vertices:n,edges_foldAngle:s,edges_assignment:r,faces_vertices:o,faces_faces:c},i);if(!t){t=vs({faces_vertices:o})}const f=t.map((e=>e.filter((e=>e!=null)).shift())).map((e=>e===undefined?me:a[e]));return e.map((e=>Z(3,e))).map(((e,t)=>pe(f[t],e)))};const nc=({vertices_coords:e,edges_vertices:t,edges_foldAngle:n,edges_assignment:s,faces_vertices:r,faces_faces:o},c=0)=>{const a=Lt({edges_vertices:t,edges_foldAngle:n,edges_assignment:s});const i=[];r[c].forEach((t=>{i[t]=[...e[t]]}));const f=[];f[c]=false;const l=bs({edges_vertices:t});Jo({faces_vertices:r,faces_faces:o},c).slice(1).forEach((n=>n.forEach((n=>{const s=n.edge_vertices.join(" ");const o=l[s];const c=t[o].map((e=>i[e]));if(c[0]===undefined||c[1]===undefined){return}const d=t[o].map((t=>e[t]));const u=d[0];const m=v(O(d[1],d[0]));const g=q(m);f[n.face]=a[o]?!f[n.parent]:f[n.parent];const p=v(O(c[1],c[0]));const _=c[0];const h=f[n.face]?W(p):q(p);r[n.face].filter((e=>i[e]===undefined)).forEach((t=>{const n=O(e[t],u);const s=F(n,g);const r=F(n,m);const o=E(p,r);const c=E(h,s);const a=M(M(_,o),c);i[t]=a}))}))));return i};const sc=Object.freeze({__proto__:null,makeVerticesCoordsFlatFolded:nc,makeVerticesCoordsFolded:tc});const rc="class";const oc="function";const cc="undefined";const ac="boolean";const ic="number";const fc="string";const lc="object";const dc="svg";const uc="path";const mc="id";const gc="style";const pc="viewBox";const _c="transform";const hc="points";const vc="stroke";const bc="fill";const yc="none";const Ec="arrow";const Ac="head";const xc="tail";const Mc=typeof window!==cc&&typeof window.document!==cc;typeof process!==cc&&process.versions!=null&&process.versions.node!=null;const kc={window:"window not set; svg.window = @xmldom/xmldom"};const wc={window:undefined};const Oc=e=>(new e.DOMParser).parseFromString("<!DOCTYPE html><title>.</title>","text/html");const jc=e=>{if(!e.document){e.document=Oc(e)}wc.window=e;return wc.window};if(Mc){wc.window=window}const Fc=()=>{if(wc.window===undefined){throw kc.window}return wc.window};const Cc="http://www.w3.org/2000/svg";const Sc={presentation:["color","color-interpolation","cursor","direction","display","fill","fill-opacity","fill-rule","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","image-rendering","letter-spacing","opacity","overflow","paint-order","pointer-events","preserveAspectRatio","shape-rendering","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","tabindex","transform-origin","user-select","vector-effect","visibility"],animation:["accumulate","additive","attributeName","begin","by","calcMode","dur","end","from","keyPoints","keySplines","keyTimes","max","min","repeatCount","repeatDur","restart","to","values"],effects:["azimuth","baseFrequency","bias","color-interpolation-filters","diffuseConstant","divisor","edgeMode","elevation","exponent","filter","filterRes","filterUnits","flood-color","flood-opacity","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","lighting-color","limitingConeAngle","mode","numOctaves","operator","order","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","primitiveUnits","radius","result","seed","specularConstant","specularExponent","stdDeviation","stitchTiles","surfaceScale","targetX","targetY","type","xChannelSelector","yChannelSelector"],text:["dx","dy","alignment-baseline","baseline-shift","dominant-baseline","lengthAdjust","method","overline-position","overline-thickness","rotate","spacing","startOffset","strikethrough-position","strikethrough-thickness","text-anchor","text-decoration","text-rendering","textLength","underline-position","underline-thickness","word-spacing","writing-mode"],gradient:["gradientTransform","gradientUnits","spreadMethod"]};const Pc={svg:["svg"],defs:["defs"],header:["desc","filter","metadata","style","script","title","view"],cdata:["cdata"],group:["g"],visible:["circle","ellipse","line","path","polygon","polyline","rect","arc","arrow","curve","parabola","roundRect","wedge","origami"],text:["text"],invisible:["marker","symbol","clipPath","mask"],patterns:["linearGradient","radialGradient","pattern"],childrenOfText:["textPath","tspan"],gradients:["stop"],filter:["feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence"]};const Nc={svg:[pc],line:["x1","y1","x2","y2"],rect:["x","y","width","height"],circle:["cx","cy","r"],ellipse:["cx","cy","rx","ry"],polygon:[hc],polyline:[hc],path:["d"],text:["x","y"],mask:[mc],symbol:[mc],clipPath:[mc,"clip-rule"],marker:[mc,"markerHeight","markerUnits","markerWidth","orient","refX","refY"],linearGradient:["x1","x2","y1","y2"],radialGradient:["cx","cy","r","fr","fx","fy"],stop:["offset","stop-color","stop-opacity"],pattern:["patternContentUnits","patternTransform","patternUnits"]};const Vc=[{nodes:[dc,"defs","g"].concat(Pc.visible,Pc.text),attr:Sc.presentation},{nodes:["filter"],attr:Sc.effects},{nodes:Pc.childrenOfText.concat("text"),attr:Sc.text},{nodes:Pc.filter,attr:Sc.effects},{nodes:Pc.gradients,attr:Sc.gradient}];Vc.forEach((e=>e.nodes.forEach((t=>{if(!Nc[t]){Nc[t]=[]}Nc[t].push(...e.attr)}))));const zc=[Pc.header,Pc.invisible,Pc.patterns].flat();const $c=[Pc.group,Pc.visible,Pc.text].flat();const Tc={svg:[["svg","defs"],zc,$c].flat(),defs:zc,filter:Pc.filter,g:$c,text:Pc.childrenOfText,marker:$c,symbol:$c,clipPath:$c,mask:$c,linearGradient:Pc.gradients,radialGradient:Pc.gradients};const Lc=Object.values(Pc).flat();const Bc={black:"#000000",silver:"#c0c0c0",gray:"#808080",white:"#ffffff",maroon:"#800000",red:"#ff0000",purple:"#800080",fuchsia:"#ff00ff",green:"#008000",lime:"#00ff00",olive:"#808000",yellow:"#ffff00",navy:"#000080",blue:"#0000ff",teal:"#008080",aqua:"#00ffff",orange:"#ffa500",aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",blanchedalmond:"#ffebcd",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",oldlace:"#fdf5e6",olivedrab:"#6b8e23",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",whitesmoke:"#f5f5f5",yellowgreen:"#9acd32"};const Ic=(e,t,n)=>{const s=t/100;const r=n/100;const o=t=>(t+e/30)%12;const c=s*Math.min(r,1-r);const a=e=>r-c*Math.max(-1,Math.min(o(e)-3,Math.min(9-o(e),1)));return[a(0)*255,a(8)*255,a(4)*255]};const Uc=(e,t)=>{const n=Array.from(Array(t.length)).map(((t,n)=>e[n]||"0"));return e.length<=4?t.map((e=>n[e])).join(""):n.join("")};const Rc=e=>{const t=e.replace(/#(?=\S)/g,"");const n=t.length===4||t.length===8;const s=n?Uc(t,[0,0,1,1,2,2,3,3]):Uc(t,[0,0,1,1,2,2]);const r=parseInt(s,16);return n?[r>>24&255,r>>16&255,r>>8&255,r&255]:[r>>16&255,r>>8&255,r&255]};const Dc=(e,t,n,s)=>{const r=e=>`00${Math.max(0,Math.min(Math.round(e),255)).toString(16)}`.slice(-2);const o=`#${[e,t,n].map(r).join("")}`;return s===undefined?o:`${o}${r(s*255)}`};const qc=Object.freeze({__proto__:null,hexToRgb:Rc,hslToRgb:Ic,rgbToHex:Dc});const Wc=e=>{const t=e.match(/\(([^\)]+)\)/g);if(t==null||!t.length){return[]}return t[0].substring(1,t[0].length-1).split(/[\s,]+/).map(parseFloat)};const Gc=e=>{if(Bc[e]){return Rc(Bc[e])}if(e[0]==="#"){return Rc(e)}if(e.substring(0,4)==="rgba"||e.substring(0,3)==="rgb"){const t=Wc(e);[0,1,2].filter((e=>t[e]===undefined)).forEach((e=>{t[e]=0}));return t}if(e.substring(0,4)==="hsla"||e.substring(0,3)==="hsl"){const t=Wc(e);[0,1,2].filter((e=>t[e]===undefined)).forEach((e=>{t[e]=0}));const n=Ic(...t);if(t.length===4){n.push(t[3])}return n}return undefined};const Hc=e=>{if(Bc[e]){return Bc[e].toUpperCase()}if(e[0]==="#"){return Dc(...Rc(e))}if(e.substring(0,4)==="rgba"||e.substring(0,3)==="rgb"){return Dc(...Wc(e))}if(e.substring(0,4)==="hsla"||e.substring(0,3)==="hsl"){const t=Wc(e);[0,1,2].filter((e=>t[e]===undefined)).forEach((e=>{t[e]=0}));const n=Ic(...t);if(t.length===4){n.push(t[3])}[0,1,2].forEach((e=>{n[e]*=255}));Dc(...n)}return undefined};const Jc=Object.freeze({__proto__:null,parseColorToHex:Hc,parseColorToRgb:Gc});const Qc={cssColors:Bc,...qc,...Jc};const Zc=(e,t)=>[e[0]+t[0],e[1]+t[1]];const Yc=(e,t)=>[e[0]-t[0],e[1]-t[1]];const Xc=(e,t)=>[e[0]*t,e[1]*t];const Kc=e=>e[0]**2+e[1]**2;const ea=e=>Math.sqrt(Kc(e));const ta=(e,t)=>Kc(Yc(e,t));const na=(e,t)=>Math.sqrt(ta(e,t));const sa=(e,t)=>[Math.cos(e)*t,Math.sin(e)*t];const ra=(e,t)=>[e[0]*t[0]+e[2]*t[1],e[1]*t[0]+e[3]*t[1],e[0]*t[2]+e[2]*t[3],e[1]*t[2]+e[3]*t[3],e[0]*t[4]+e[2]*t[5]+e[4],e[1]*t[4]+e[3]*t[5]+e[5]];const oa=Object.freeze({__proto__:null,svg_add2:Zc,svg_distance2:na,svg_distanceSq2:ta,svg_magnitude2:ea,svg_magnitudeSq2:Kc,svg_multiplyMatrices2:ra,svg_polar_to_cart:sa,svg_scale2:Xc,svg_sub2:Yc});const ca=function(e){const t=e.match(/(\w+\((\-?\d+\.?\d*e?\-?\d*,?\s*)+\))+/g);if(!t){return[]}const n=t.map((e=>e.match(/[\w\.\-]+/g)));return n.map((e=>({transform:e.shift(),parameters:e.map((e=>parseFloat(e)))})))};const aa=function(e){switch(e.length){case 1:return[1,0,0,1,e[0],0];case 2:return[1,0,0,1,e[0],e[1]];default:console.warn(`improper translate, ${e}`)}return undefined};const ia=function(e){const t=Math.cos(e[0]/(180*Math.PI));const n=Math.sin(e[0]/(180*Math.PI));switch(e.length){case 1:return[t,n,-n,t,0,0];case 3:return[t,n,-n,t,-e[1]*t+e[2]*n+e[1],-e[1]*n-e[2]*t+e[2]];default:console.warn(`improper rotate, ${e}`)}return undefined};const fa=function(e){switch(e.length){case 1:return[e[0],0,0,e[0],0,0];case 2:return[e[0],0,0,e[1],0,0];default:console.warn(`improper scale, ${e}`)}return undefined};const la=function(e){return[1,0,Math.tan(e[0]/(180*Math.PI)),1,0,0]};const da=function(e){return[1,Math.tan(e[0]/(180*Math.PI)),0,1,0,0]};const ua=function(e,t){switch(e){case"translate":return aa(t);case"rotate":return ia(t);case"scale":return fa(t);case"skewX":return la(t);case"skewY":return da(t);case"matrix":return t;default:console.warn(`unknown transform type ${e}`)}return undefined};const ma=function(e){return ca(e).map((e=>ua(e.transform,e.parameters))).filter((e=>e!==undefined)).reduce(((e,t)=>ra(e,t)),[1,0,0,1,0,0])};const ga=Object.freeze({__proto__:null,transformStringToMatrix:ma});const pa=(e,t="text/xml")=>{const n=(new(Fc().DOMParser)).parseFromString(e,t);return n?n.documentElement:null};const _a=e=>{let t=e;while(t.parentNode!=null){t=t.parentNode}return t};const ha=(e,t)=>{if((e.nodeName||"")===t){return e}return e.parentNode?ha(e.parentNode,t):undefined};const va=(e,...t)=>{const n={};const s=e.getAttribute("class");const r=s?s.split(" "):[];r.push(...t);r.forEach((e=>{n[e]=true}));const o=Object.keys(n).join(" ");e.setAttribute("class",o)};const ba=(e,...t)=>{if(!e||!t.length){return undefined}return e.classList?e.classList.add(...t):va(e,...t)};const ya=e=>e.children==null||!e.children.length?[e]:Array.from(e.children).flatMap((e=>ya(e)));const Ea={svg:["viewBox","xmlns","version"],line:["x1","y1","x2","y2"],rect:["x","y","width","height"],circle:["cx","cy","r"],ellipse:["cx","cy","rx","ry"],polygon:["points"],polyline:["points"],path:["d"]};const Aa=e=>{const t=Array.from(e.attributes);return Ea[e.nodeName]?t.filter((t=>!Ea[e.nodeName].includes(t.name))):t};const xa=e=>{const t={};e.forEach((e=>{t[e.nodeName]=e.value}));return t};const Ma=(e,t)=>{const n=xa(Aa(t));if(!n.transform&&!e.transform){return{...e,...n}}const s=n.transform||"";const r=e.transform||"";const o=ma(s);const c=ma(r);const a=ra(c,o);const i=`matrix(${a.join(", ")})`;return{...e,...n,transform:i}};const ka=(e,t={})=>e.children==null||!e.children.length?[{element:e,attributes:t}]:Array.from(e.children).flatMap((e=>ka(e,Ma(t,e))));const wa=Object.freeze({__proto__:null,addClass:ba,findElementTypeInParents:ha,flattenDomTree:ya,flattenDomTreeWithStyle:ka,getRootParent:_a,xmlStringToElement:pa});const Oa=e=>(new(Fc().DOMParser)).parseFromString("<root></root>","text/xml").createCDATASection(e);const ja=/[MmLlSsQqLlHhVvCcSsQqTtAaZz]/g;const Fa=/-?[0-9]*\.?\d+/g;const Ca={m:"move",l:"line",v:"vertical",h:"horizontal",a:"ellipse",c:"curve",s:"smoothCurve",q:"quadCurve",t:"smoothQuadCurve",z:"close"};Object.keys(Ca).forEach((e=>{const t=Ca[e];Ca[e.toUpperCase()]=t.charAt(0).toUpperCase()+t.slice(1)}));const Sa=(e,t)=>[e[0]+(t[0]||0),e[1]+(t[1]||0)];const Pa=(e,t,n=[0,0])=>{const s=e.toUpperCase();let r=e===s?[0,0]:n;if(e==="V"){r=[n[0],0]}if(e==="H"){r=[0,n[1]]}switch(s){case"V":return Sa(r,[0,t[0]]);case"H":return Sa(r,[t[0],0]);case"M":case"L":case"T":return Sa(r,t);case"A":return Sa(r,[t[5],t[6]]);case"C":return Sa(r,[t[4],t[5]]);case"S":case"Q":return Sa(r,[t[2],t[3]]);case"Z":return undefined;default:return r}};const Na=e=>{const t=[];let n;while((n=ja.exec(e))!==null){t.push(n)}return t.map(((t,n,s)=>[t[0],t.index,n===s.length-1?e.length-1:s[(n+1)%s.length].index-1])).map((t=>{const n=t[0];const s=e.substring(t[1]+1,t[2]+1);const r=s.match(Fa);const o=r?r.map(parseFloat):[];return{command:n,values:o}}))};const Va=e=>{let t=[0,0];const n=Na(e);if(!n.length){return n}n.forEach(((e,s)=>{n[s].end=Pa(e.command,e.values,t);n[s].start=s===0?t:n[s-1].end;t=n[s].end}));const s=n[n.length-1];const r=n.filter((e=>e.command.toUpperCase()!=="M"&&e.command.toUpperCase()!=="Z")).shift();if(s.command.toUpperCase()==="Z"){s.end=[...r.start]}return n};const za=Object.freeze({__proto__:null,parsePathCommands:Na,parsePathCommandsWithEndpoints:Va,pathCommandNames:Ca});const $a=(...e)=>e.filter((e=>typeof e===ic)).concat(e.filter((e=>typeof e===lc&&e!==null)).map((e=>{if(typeof e.x===ic){return[e.x,e.y]}if(typeof e[0]===ic){return[e[0],e[1]]}return undefined})).filter((e=>e!==undefined)).reduce(((e,t)=>e.concat(t)),[]));const Ta=function(e,t,n,s,r=0){const o=1;const c=n/o-n;const a=e-c-r;const i=t-c-r;const f=n+c*2+r*2;const l=s+c*2+r*2;return[a,i,f,l].join(" ")};const La=(...e)=>{const t=$a(...e.flat());if(t.length===2){t.unshift(0,0)}return t.length===4?Ta(...t):undefined};const Ba=(e,...t)=>{const n=t.length===1&&typeof t[0]===fc?t[0]:La(...t);if(n){e.setAttribute(pc,n)}return e};const Ia=function(e){const t=e.getAttribute(pc);return t==null?undefined:t.split(" ").map((e=>parseFloat(e)))};const Ua=function(e,t,n){const s=e.createSVGPoint();s.x=t;s.y=n;const r=s.matrixTransform(e.getScreenCTM().inverse());return[r.x,r.y]};const Ra=Object.freeze({__proto__:null,convertToViewBox:Ua,getViewBox:Ia,setViewBox:Ba});const Da={...oa,...wa,makeCDATASection:Oa,...za,...ga,...Ra};const qa=function(e){const t=Ia(e);if(t!==undefined){return t}if(typeof e.getBoundingClientRect===oc){const t=e.getBoundingClientRect();return[t.x,t.y,t.width,t.height]}return[]};const Wa="svg-background-rectangle";const Ga=function(e,t){let n=Array.from(e.childNodes).filter((e=>e.getAttribute(rc)===Wa)).shift();if(n==null){n=Fc().document.createElementNS(Cc,"rect");qa(e).forEach(((e,t)=>n.setAttribute(Nc.rect[t],e)));n.setAttribute(rc,Wa);n.setAttribute(vc,yc);e.insertBefore(n,e.firstChild)}n.setAttribute(bc,t);return e};const Ha=e=>{const t=e.getAttribute(_c);return t==null||t===""?undefined:t};const Ja={clearTransform:e=>{e.removeAttribute(_c);return e}};["translate","rotate","scale","matrix"].forEach((e=>{Ja[e]=(t,...n)=>{t.setAttribute(_c,[Ha(t),`${e}(${n.join(" ")})`].filter((e=>e!==undefined)).join(" "));return t}}));const Qa=e=>e.replace(/([-_][a-z])/gi,(e=>e.toUpperCase().replace("-","").replace("_","")));const Za=e=>e.replace(/([a-z0-9])([A-Z])/g,"$1-$2").replace(/([A-Z])([A-Z])(?=[a-z])/g,"$1-$2").toLowerCase();const Ya=e=>e.charAt(0).toUpperCase()+e.slice(1);const Xa=e=>{while(e.lastChild){e.removeChild(e.lastChild)}return e};const Ka=(e,t)=>{if(t&&t.appendChild){t.appendChild(e)}return e};const ei=(e,t)=>{Object.keys(t).forEach((n=>e.setAttribute(Za(n),t[n])));return e};const ti=Object.freeze({__proto__:null,appendTo:Ka,removeChildren:Xa,setAttributes:ei});const ni=function(e,t){const n=Ia(e);if(n!==undefined){Ba(e,...[-t,-t,t*2,t*2].map(((e,t)=>n[t]+e)))}return e};const si=function(e,t){const n=e.getElementsByTagName(t);return n.length?n[0]:null};const ri=function(e,t){let n=si(e,gc);if(n==null){n=Fc().document.createElementNS(Cc,gc);n.setTextContent=e=>{n.textContent="";n.appendChild(Oa(e));return n};e.insertBefore(n,e.firstChild)}n.textContent="";n.appendChild(Oa(t));return n};const oi=e=>{Array.from(e.attributes).filter((e=>e.name!=="xmlns"&&e.name!=="version")).forEach((t=>e.removeAttribute(t.name)));return Xa(e)};const ci={clear:oi,size:Ba,setViewBox:Ba,getViewBox:Ia,padding:ni,background:Ga,getWidth:e=>qa(e)[2],getHeight:e=>qa(e)[3],stylesheet:function(e,t){return ri.call(this,e,t)},...Ja,...ti};const ai={move:["mousemove","touchmove"],press:["mousedown","touchstart"],release:["mouseup","touchend"],leave:["mouseleave","touchcancel"]};const ii=(e,t)=>Object.values(ai).flat().forEach((n=>{t[n].forEach((t=>e.removeEventListener(n,t)));t[n]=[]}));const fi=(e,t,n)=>Object.defineProperty(e,t,{get:()=>n,enumerable:true,configurable:true});const li=function(e){const t=[];Object.keys(ai).forEach((e=>{ai[e].forEach((e=>{t[e]=[]}))}));const n=n=>ai[n].forEach((n=>t[n].forEach((t=>e.removeEventListener(n,t)))));Object.keys(ai).forEach((s=>{Object.defineProperty(e,`on${Ya(s)}`,{set:r=>{if(!e.addEventListener){return}if(r==null){n(s);return}ai[s].forEach((n=>{const s=t=>{const n=t.touches!=null?t.touches[0]:t;if(n!==undefined){const{clientX:s,clientY:r}=n;const[o,c]=Ua(e,s,r);fi(t,"x",o);fi(t,"y",c)}r(t)};t[n].push(s);e.addEventListener(n,s)}))},enumerable:true})}));Object.defineProperty(e,"off",{value:()=>ii(e,t)})};const di=()=>Math.random().toString(36).replace(/[^a-z]+/g,"").concat("aaaaa").substr(0,5);const ui=function(e){let t;let n=0;let s;const r={};const o=()=>{if(Fc().cancelAnimationFrame){Fc().cancelAnimationFrame(s)}Object.keys(r).forEach((e=>delete r[e]))};const c=e=>{o();if(!e||!Fc().requestAnimationFrame){return}t=performance.now();n=0;const c=di();r[c]=o=>{const a=(o-t)*.001;e({time:a,frame:n});n+=1;if(r[c]){s=Fc().requestAnimationFrame(r[c])}};s=Fc().requestAnimationFrame(r[c])};Object.defineProperty(e,"play",{set:c,enumerable:true});Object.defineProperty(e,"stop",{value:o,enumerable:true})};const mi=e=>e&&e.parentNode?e.parentNode.removeChild(e):undefined;const gi=[["cx","cy"],["x","y"]];const pi=function(e,t={}){const n=[0,0];const s={selected:false,svg:undefined,updatePosition:e=>e};const r=()=>{if(!s.svg){return}if(!s.svg.parentNode){e.appendChild(s.svg)}gi.filter((e=>s.svg[e[0]]!=null)).forEach((e=>e.forEach(((e,t)=>{s.svg.setAttribute(e,n[t])}))))};const o=new Proxy(n,{set:(e,t,n)=>{e[t]=n;r();return true}});const c=function(...e){$a(...e.flat()).forEach(((e,t)=>{n[t]=e}));r();if(typeof n.delegate===oc){n.delegate.apply(n.pointsContainer,[o,n.pointsContainer])}};n.delegate=undefined;n.setPosition=c;n.onMouseMove=e=>s.selected?c(s.updatePosition(e)):undefined;n.onMouseUp=()=>{s.selected=false};n.distance=e=>Math.sqrt(ta(e,n));["x","y"].forEach(((e,t)=>Object.defineProperty(n,e,{get:()=>n[t],set:e=>{n[t]=e}})));[dc,"updatePosition","selected"].forEach((e=>Object.defineProperty(n,e,{get:()=>s[e],set:t=>{s[e]=t}})));Object.defineProperty(n,"remove",{value:()=>{mi(s.svg);n.delegate=undefined}});return o};const _i=function(e,t,n){let s;let r;const o=Array.from(Array(t)).map((()=>pi(e,n)));const c=e=>typeof r===oc?r.call(o,e,s,o):undefined;o.forEach((e=>{e.delegate=c;e.pointsContainer=o}));const a=function(e){if(!(o.length>0)){return}s=o.map(((t,n)=>({i:n,d:ta(t,[e.x,e.y])}))).sort(((e,t)=>e.d-t.d)).shift().i;o[s].selected=true};const i=function(e){o.forEach((t=>t.onMouseMove(e)))};const f=function(){o.forEach((e=>e.onMouseUp()));s=undefined};e.onPress=a;e.onMove=i;e.onRelease=f;Object.defineProperty(o,"selectedIndex",{get:()=>s});Object.defineProperty(o,"selected",{get:()=>o[s]});Object.defineProperty(o,"add",{value:t=>{o.push(pi(e,t))}});o.removeAll=()=>{while(o.length>0){o.pop().remove()}};const l={onChange:(e,t)=>{r=e;if(t===true){const t=o.length-1;e.call(o,o[t],t,o)}},position:e=>o.forEach(((t,n)=>t.setPosition(e.call(o,t,n,o)))),svg:e=>o.forEach(((t,n)=>{t.svg=e.call(o,t,n,o)}))};Object.keys(l).forEach((e=>{o[e]=function(){if(typeof arguments[0]===oc){l[e](...arguments)}return o}}));o.parent=function(e){if(e!=null&&e.appendChild!=null){o.forEach((t=>{e.appendChild(t.svg)}))}return o};return o};const hi=e=>{e.controls=(...t)=>_i.call(e,e,...t)};const vi={svg:{args:(...e)=>[La($a(...e))].filter((e=>e!=null)),methods:ci,init:(...e)=>{const t=Fc().document.createElementNS(Cc,"svg");t.setAttribute("version","1.1");t.setAttribute("xmlns",Cc);e.filter((e=>e!=null)).filter((e=>e.appendChild)).forEach((e=>e.appendChild(t)));li(t);ui(t);hi(t);return t}}};const bi=function(e){if(e==null){return""}if(typeof e===fc){return e.slice(0,3)==="url"?e:`url(#${e})`}if(e.getAttribute!=null){const t=e.getAttribute(mc);return`url(#${t})`}return""};const yi={};["clip-path","mask","symbol","marker-end","marker-mid","marker-start"].forEach((e=>{yi[Qa(e)]=(t,n)=>{t.setAttribute(e,bi(n));return t}}));const Ei={g:{methods:{...Ja,...yi,...ti}}};const Ai=(e,t)=>{e.setAttribute(Nc.circle[2],t);return e};const xi=(e,t,n)=>{[...$a(...[t,n].flat()).slice(0,2)].forEach(((t,n)=>e.setAttribute(Nc.circle[n],t)));return e};const Mi=(e,t,n,s)=>[e,t,na([e,t],[n,s])];const ki={circle:{args:(e,t,n,s)=>{const r=$a(...[e,t,n,s].flat());switch(r.length){case 0:case 1:return[,,...r];case 2:case 3:return r;default:return Mi(...r)}},methods:{radius:Ai,setRadius:Ai,origin:xi,setOrigin:xi,center:xi,setCenter:xi,position:xi,setPosition:xi,...Ja,...yi,...ti}}};const wi=(e,t,n)=>{[,,t,n].forEach(((t,n)=>e.setAttribute(Nc.ellipse[n],t)));return e};const Oi=(e,t,n)=>{[...$a(...[t,n].flat()).slice(0,2)].forEach(((t,n)=>e.setAttribute(Nc.ellipse[n],t)));return e};const ji={ellipse:{args:(e,t,n,s)=>{const r=$a(...[e,t,n,s].flat()).slice(0,4);switch(r.length){case 0:case 1:case 2:return[,,...r];default:return r}},methods:{radius:wi,setRadius:wi,origin:Oi,setOrigin:Oi,center:Oi,setCenter:Oi,position:Oi,setPosition:Oi,...Ja,...yi,...ti}}};const Fi=e=>e!=null&&typeof e[Symbol.iterator]===oc;const Ci=function(){switch(arguments.length){case 0:return Array.from(arguments);case 1:return Fi(arguments[0])&&typeof arguments[0]!==fc?Ci(...arguments[0]):[arguments[0]];default:return Array.from(arguments).map((e=>Fi(e)?[...Ci(e)]:e))}};const Si=(...e)=>$a(...Ci(...e)).slice(0,4);const Pi=(e,...t)=>{Si(...t).forEach(((t,n)=>e.setAttribute(Nc.line[n],t)));return e};const Ni={line:{args:Si,methods:{setPoints:Pi,...Ja,...yi,...ti}}};const Vi=e=>{const t=e.getAttribute("d");return t==null?"":t};const zi=e=>{e.removeAttribute("d");return e};const $i=(e,t,...n)=>{e.setAttribute("d",`${Vi(e)}${t}${n.flat().join(" ")}`);return e};const Ti=e=>Na(Vi(e));const Li={addCommand:$i,appendCommand:$i,clear:zi,getCommands:Ti,get:Ti,getD:e=>e.getAttribute("d"),...Ja,...yi,...ti};Object.keys(Ca).forEach((e=>{Li[Ca[e]]=(t,...n)=>$i(t,e,...n)}));const Bi={path:{methods:Li}};const Ii=(e,t,n)=>{[,,t,n].forEach(((t,n)=>e.setAttribute(Nc.rect[n],t)));return e};const Ui=(e,t,n)=>{[...$a(...[t,n].flat()).slice(0,2)].forEach(((t,n)=>e.setAttribute(Nc.rect[n],t)));return e};const Ri=function(e){[0,1].forEach((t=>{if(e[2+t]<0){if(e[0+t]===undefined){e[0+t]=0}e[0+t]+=e[2+t];e[2+t]=-e[2+t]}}));return e};const Di={rect:{args:(e,t,n,s)=>{const r=$a(...[e,t,n,s].flat()).slice(0,4);switch(r.length){case 0:case 1:case 2:case 3:return Ri([,,...r]);default:return Ri(r)}},methods:{origin:Ui,setOrigin:Ui,center:Ui,setCenter:Ui,size:Ii,setSize:Ii,...Ja,...yi,...ti}}};const qi={style:{init:e=>{const t=Fc().document.createElementNS(Cc,"style");t.setAttribute("type","text/css");t.textContent="";t.appendChild(Oa(e));return t},methods:{setTextContent:(e,t)=>{e.textContent="";e.appendChild(Oa(t));return e}}}};const Wi={text:{args:(e,t,n)=>$a(...[e,t,n].flat()).slice(0,2),init:(e,t,n,s)=>{const r=Fc().document.createElementNS(Cc,"text");const o=[e,t,n,s].filter((e=>typeof e===fc)).shift();r.appendChild(Fc().document.createTextNode(o||""));return r},methods:{...Ja,...yi,appendTo:Ka,setAttributes:ei}}};const Gi=function(){return Array.from(arguments).filter((e=>typeof e===fc||e instanceof String)).shift()||di()};const Hi=(...e)=>[Gi(...e)];const Ji={mask:{args:Hi,methods:{...Ja,...yi,...ti}},clipPath:{args:Hi,methods:{...Ja,...yi,...ti}},symbol:{args:Hi,methods:{...Ja,...yi,...ti}},marker:{args:Hi,methods:{size:Ba,setViewBox:Ba,...Ja,...yi,...ti}}};const Qi=e=>{const t=e.getAttribute(hc);return t==null?"":t};const Zi=function(){return Array.from(Array(Math.floor(arguments.length/2))).map(((e,t)=>`${arguments[t*2+0]},${arguments[t*2+1]}`)).join(" ")};const Yi=(...e)=>[Zi(...$a(...Ci(...e)))];const Xi=(e,...t)=>{e.setAttribute(hc,Yi(...t)[0]);return e};const Ki=(e,...t)=>{e.setAttribute(hc,[Qi(e),Yi(...t)[0]].filter((e=>e!=="")).join(" "));return e};const ef=function(...e){return e.length===1&&typeof e[0]===fc?[e[0]]:Yi(...e)};const tf={polyline:{args:ef,methods:{setPoints:Xi,addPoint:Ki,...Ja,...yi,...ti}},polygon:{args:ef,methods:{setPoints:Xi,addPoint:Ki,...Ja,...yi,...ti}}};const nf=(e,t,n,s,r,o=false)=>{if(r==null){return""}const c=sa(s,n);const a=sa(r,n);const i=[a[0]-c[0],a[1]-c[1]];const f=c[0]*a[1]-c[1]*a[0];const l=c[0]*a[0]+c[1]*a[1];const d=Math.atan2(f,l)>0?0:1;let u=o?`M ${e},${t} l ${c[0]},${c[1]} `:`M ${e+c[0]},${t+c[1]} `;u+=["a ",n,n,0,d,1,i[0],i[1]].join(" ");if(o){u+=" Z"}return u};const sf=(e,t,n,s,r)=>[nf(e,t,n,s,r,false)];const rf={arc:{nodeName:uc,attributes:["d"],args:sf,methods:{setArc:(e,...t)=>e.setAttribute("d",sf(...t)),...Ja}}};const of=[xc,Ac];const cf=e=>e.join(",");const af=e=>"M"+e.map((e=>e.join(","))).join("L")+"Z";const ff=function(e){let t=[[0,1],[2,3]].map((t=>t.map((t=>e.points[t]||0))));let n=Yc(t[1],t[0]);let s=Zc(t[0],Xc(n,.5));const r=ea(n);const o=of.map((t=>e[t].visible?(1+e[t].padding)*e[t].height*2.5:0)).reduce(((e,t)=>e+t),0);if(r<o){const e=r===0?[o,0]:Xc(n,o/r);t=[Yc,Zc].map((t=>t(s,Xc(e,.5))));n=Yc(t[1],t[0])}let c=[n[1],-n[0]];let a=Zc(s,Xc(c,e.bend));const i=t.map((e=>Yc(a,e)));const f=i.map((e=>ea(e)));const l=i.map(((e,t)=>f[t]===0?e:Xc(e,1/f[t])));const d=l.map((e=>Xc(e,-1)));const u=d.map((e=>[e[1],-e[0]]));const m=of.map(((t,n)=>e[t].padding?e[t].padding:e.padding?e.padding:0));const g=of.map(((t,n)=>e[t].height*(e[t].visible?1:0))).map(((e,t)=>e+m[t]));const p=t.map(((e,t)=>Zc(e,Xc(l[t],g[t]))));n=Yc(p[1],p[0]);c=[n[1],-n[0]];s=Zc(p[0],Xc(n,.5));a=Zc(s,Xc(c,e.bend));const _=p.map(((t,n)=>Zc(t,Xc(Yc(a,t),e.pinch))));const h=of.map(((t,n)=>[Zc(p[n],Xc(d[n],e[t].height)),Zc(p[n],Xc(u[n],e[t].width/2)),Zc(p[n],Xc(u[n],-e[t].width/2))]));return{line:`M${cf(p[0])}C${cf(_[0])},${cf(_[1])},${cf(p[1])}`,tail:af(h[0]),head:af(h[1])}};const lf=(e,t,n)=>{if(typeof t===ac){e.options[n].visible=t}else if(typeof t===lc){Object.assign(e.options[n],t);if(t.visible==null){e.options[n].visible=true}}else if(t==null){e.options[n].visible=true}};const df=(e,t={},n=Ac)=>{const s=e.getElementsByClassName(`${Ec}-${n}`)[0];Object.keys(t).map((e=>({key:e,fn:s[Qa(e)]}))).filter((e=>typeof e.fn===oc&&e.key!=="class")).forEach((e=>e.fn(t[e.key])));Object.keys(t).filter((e=>e==="class")).forEach((e=>s.classList.add(t[e])))};const uf=e=>{const t=ff(e.options);Object.keys(t).map((t=>({path:t,element:e.getElementsByClassName(`${Ec}-${t}`)[0]}))).filter((e=>e.element)).map((e=>{e.element.setAttribute("d",t[e.path]);return e})).filter((t=>e.options[t.path])).forEach((t=>t.element.setAttribute("visibility",e.options[t.path].visible?"visible":"hidden")));return e};const mf=(e,...t)=>{e.options.points=$a(...Ci(...t)).slice(0,4);return uf(e)};const gf=(e,t)=>{e.options.bend=t;return uf(e)};const pf=(e,t)=>{e.options.pinch=t;return uf(e)};const _f=(e,t)=>{e.options.padding=t;return uf(e)};const hf=(e,t)=>{lf(e,t,Ac);df(e,t,Ac);return uf(e)};const vf=(e,t)=>{lf(e,t,xc);df(e,t,xc);return uf(e)};const bf=e=>e.getElementsByClassName(`${Ec}-line`)[0];const yf=e=>e.getElementsByClassName(`${Ec}-${Ac}`)[0];const Ef=e=>e.getElementsByClassName(`${Ec}-${xc}`)[0];const Af={setPoints:mf,points:mf,bend:gf,pinch:pf,padding:_f,head:hf,tail:vf,getLine:bf,getHead:yf,getTail:Ef,...Ja};const xf=()=>({visible:false,width:8,height:10,padding:0});const Mf=()=>({head:xf(),tail:xf(),bend:0,padding:0,pinch:.618,points:[]});const kf=Object.keys(Mf());const wf=(...e)=>{for(let t=0;t<e.length;t+=1){if(typeof e[t]!==lc){continue}const n=Object.keys(e[t]);for(let s=0;s<n.length;s+=1){if(kf.includes(n[s])){return e[t]}}}return undefined};const Of=function(e,...t){e.classList.add(Ec);const n=["line",xc,Ac].map((t=>{const n=Fc().document.createElementNS(Cc,uc);n.className=`${Ec}-${t}`;e.appendChild(n);return n}));n[0].setAttribute(gc,"fill:none;");n[1].setAttribute(vc,yc);n[2].setAttribute(vc,yc);e.options=Mf();Af.setPoints(e,...t);const s=wf(...t);if(s){Object.keys(s).filter((e=>Af[e])).forEach((t=>Af[t](e,s[t])))}return e};const jf={arrow:{nodeName:"g",attributes:[],args:()=>[],methods:Af,init:Of}};const Ff=(e=[],t=0,n=.5)=>{const s=[e[0]||0,e[1]||0];const r=[e[2]||0,e[3]||0];const o=Yc(r,s);const c=Zc(s,Xc(o,.5));const a=[o[1],-o[0]];const i=Zc(c,Xc(a,t));const f=Zc(s,Xc(Yc(i,s),n));const l=Zc(r,Xc(Yc(i,r),n));return`M${s[0]},${s[1]}C${f[0]},${f[1]} ${l[0]},${l[1]} ${r[0]},${r[1]}`};const Cf=(...e)=>[Ff($a(...e.flat()))];const Sf=e=>e.slice(1).split(/[, ]+/).map((e=>parseFloat(e)));const Pf=e=>e.match(/[Cc][(0-9), .-]+/).map((e=>Sf(e)));const Nf=e=>e.match(/[Mm][(0-9), .-]+/).map((e=>Sf(e)));const Vf=e=>{const t=Nf(e).shift();const n=Pf(e).shift();const s=t?[t[t.length-2],t[t.length-1]]:[0,0];const r=n?[n[n.length-2],n[n.length-1]]:[0,0];return[...s,...r]};const zf=(e,...t)=>{const n=$a(...t.flat()).slice(0,4);e.setAttribute("d",Ff(n,e._bend,e._pinch));return e};const $f=(e,t)=>{e._bend=t;return zf(e,...Vf(e.getAttribute("d")))};const Tf=(e,t)=>{e._pinch=t;return zf(e,...Vf(e.getAttribute("d")))};const Lf={setPoints:zf,bend:$f,pinch:Tf,...Ja};const Bf={curve:{nodeName:uc,attributes:["d"],args:Cf,methods:Lf}};const If=(e,t,n,s,r)=>[nf(e,t,n,s,r,true)];const Uf={wedge:{nodeName:uc,args:If,attributes:["d"],methods:{setArc:(e,...t)=>e.setAttribute("d",If(...t)),...Ja}}};const Rf={};const Df=(e,...t)=>{const n=Fc().document.createElementNS(Cc,"g");Rf.ear.convert.foldToSvg.render(e,n,...t);return n};const qf={...Ja,...yi,...ti};const Wf={origami:{nodeName:"g",init:Df,args:()=>[],methods:qf}};const Gf={...vi,...Ei,...ki,...ji,...Ni,...Bi,...Di,...qi,...Wi,...Ji,...tf,...rf,...jf,...Bf,...Uf,...Wf};const Hf=(...e)=>e;const Jf=(e,t,...n)=>{const s=Gf[e]&&Gf[e].nodeName?Gf[e].nodeName:e;const{init:r,args:o,methods:c}=Gf[e]||{};const a=Nc[s]||[];const i=Tc[s]||[];const f=r?r(...n):Fc().document.createElementNS(Cc,s);if(t){t.appendChild(f)}const l=o||Hf;l(...n).forEach(((e,t)=>{f.setAttribute(Nc[s][t],e)}));if(c){Object.keys(c).forEach((e=>Object.defineProperty(f,e,{value:function(){return c[e](f,...arguments)}})))}a.forEach((e=>{const t=Qa(e);if(f[t]){return}Object.defineProperty(f,t,{value:function(){f.setAttribute(e,...arguments);return f}})}));i.forEach((e=>{if(f[e]){return}const t=function(){return Jf(e,f,...arguments)};Object.defineProperty(f,e,{value:t})}));return f};const Qf=(...e)=>{const t=Jf(dc,null,...e);const n=()=>e.filter((e=>typeof e===oc)).forEach((e=>e.call(t,t)));if(Fc().document.readyState==="loading"){Fc().document.addEventListener("DOMContentLoaded",n)}else{n()}return t};Object.assign(Qf,{NS:Cc,nodes_attributes:Nc,nodes_children:Tc,extensions:Gf,...Qc,...Da});Lc.forEach((e=>{Qf[e]=(...t)=>Jf(e,null,...t)}));Object.defineProperty(Qf,"window",{enumerable:false,set:jc});const Zf=e=>[e.min,e.span].flatMap((e=>[e[0],e[1]])).join(" ");const Yf=e=>{const t=Uo(e);return t===undefined?"":Zf(t)};const Xf=({vertices_coords:e,edges_vertices:t,edges_length:n},s=.1)=>{if(!e||!t){return undefined}if(!n){n=Vs({vertices_coords:e,edges_vertices:t})}const r=n.slice().sort(((e,t)=>e-t));const o=Math.max(0,Math.min(Math.floor(r.length*s),r.length-1));return r[o]};const Kf={min:[0,0],span:[1,1]};const el=1/100;const tl=(e,{vmax:t}={})=>{if(!t){const n=Uo(e)||Kf;t=Math.max(...n.span)}const n=Xf(e,.1);return n?n*el*10:t*el};const nl=(e,t={})=>{const n=Qf.g();if(!e||!e.vertices_coords){return n}e.vertices_coords.map((e=>Qf.circle(e[0],e[1],.01))).forEach((e=>n.appendChild(e)));n.setAttributeNS(null,"fill","none");Object.keys(t).forEach((e=>n.setAttributeNS(null,e,t[e])));return n};const sl={};const rl={stroke:"black"};const ol={};const cl={B:{stroke:"black"},b:{stroke:"black"},M:{stroke:"crimson"},m:{stroke:"crimson"},V:{stroke:"royalblue"},v:{stroke:"royalblue"},F:{stroke:"lightgray"},f:{stroke:"lightgray"},J:{stroke:"gold"},j:{stroke:"gold"},C:{stroke:"limegreen"},c:{stroke:"limegreen"},U:{stroke:"orchid"},u:{stroke:"orchid"}};const al=(e,t,n)=>e.setAttribute(`data-${t}`,n);const il=e=>{const t={u:[],c:[],j:[],f:[],v:[],m:[],b:[]};const n=e["edges_assignment"].map((e=>e.toLowerCase()));e["edges_vertices"].map(((e,t)=>n[t]||"u")).forEach(((e,n)=>t[e].push(n)));return t};const fl=({vertices_coords:e,edges_vertices:t})=>{if(!e||!t){return[]}return t.map((t=>t.map((t=>e[t]))))};const ll=e=>`M${e[0][0]} ${e[0][1]}L${e[1][0]} ${e[1][1]}`;const dl=e=>fl(e).map((e=>ll(e))).join("");const ul=({vertices_coords:e,edges_vertices:t,edges_assignment:n})=>{if(!e||!t){return{}}if(!n){return{u:dl({vertices_coords:e,edges_vertices:t})}}const s=il({vertices_coords:e,edges_vertices:t,edges_assignment:n});Object.keys(s).forEach((n=>{s[n]=dl({vertices_coords:e,edges_vertices:s[n].map((e=>t[e]))})}));Object.keys(s).forEach((e=>{if(s[e]===""){delete s[e]}}));return s};const ml=({vertices_coords:e,edges_vertices:t,edges_assignment:n})=>{const s=ul({vertices_coords:e,edges_vertices:t,edges_assignment:n});Object.keys(s).forEach((e=>{const t=Qf.path(s[e]);ba(t,xt[e]);s[e]=t}));return s};const gl=(e,t={})=>Object.keys(t).forEach((n=>e.setAttributeNS(null,n,t[n])));const pl=(e,t={})=>{const n=Qf.g();if(!e){return n}const s=Tt(e);const r=ml(e);Object.keys(r).forEach((e=>{ba(r[e],xt[e]);gl(r[e],s?ol[e]:cl[e]);gl(r[e],t[e]);gl(r[e],t[xt[e]]);n.appendChild(r[e]);Object.defineProperty(n,xt[e],{get:()=>r[e]})}));Object.keys(r).forEach((e=>al(r[e],"assignment",e)));Object.keys(r).forEach((e=>al(r[e],"foldAngle",Mt[e])));gl(n,s?sl:rl);gl(n,t.stroke?{stroke:t.stroke}:{});return n};const _l=e=>Math.abs(e)/180;const hl=(e,t={})=>{const n=Qf.g();if(!e){return n}const s=Tt(e);const r=(e.edges_assignment?e.edges_assignment:Fs(e)).map((e=>e.toLowerCase()));const o={};["b","m","v","f","j","c","u"].forEach((e=>{const r=Qf.g();n.appendChild(r);ba(r,xt[e]);gl(r,s?ol[e]:cl[e]);gl(r,t[xt[e]]);Object.defineProperty(n,xt[e],{get:()=>r});o[e]=r}));const c=e.edges_vertices.map((t=>t.map((t=>e.vertices_coords[t])))).map((e=>Qf.line(e[0][0],e[0][1],e[1][0],e[1][1])));if(e.edges_foldAngle){e.edges_foldAngle.forEach(((e,t)=>al(c[t],"foldAngle",e)))}if(e.edges_assignment){e.edges_assignment.forEach(((e,t)=>al(c[t],"assignment",e)))}if(e.edges_foldAngle){c.forEach(((t,n)=>{const s=e.edges_foldAngle[n];if(s===0||s===180||s===-180){return}t.setAttributeNS(null,"opacity",_l(s))}))}c.forEach(((e,t)=>o[r[t]].appendChild(e)));gl(n,s?sl:rl);gl(n,t.stroke?{stroke:t.stroke}:{});return n};const vl=(e,t)=>Ft(e)?pl(e,t):hl(e,t);const bl=e=>e.map((e=>e[0]*e[4]-e[1]*e[3])).map((e=>e>=0));const yl=e=>e.map((e=>e[0]*e[3]-e[1]*e[2])).map((e=>e>=0));const El=({vertices_coords:e,faces_vertices:t})=>t.map((t=>t.map((t=>e[t])).map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>(e[1][0]-e[0][0])*(e[1][1]+e[0][1]))).reduce(((e,t)=>e+t),0))).map((e=>e<0));const Al=Object.freeze({__proto__:null,makeFacesWinding:El,makeFacesWindingFromMatrix:bl,makeFacesWindingFromMatrix2:yl});const xl=e=>{const t=en(e.flat());const n=[];t.forEach((e=>{n[e]=[]}));e.forEach((e=>{n[e[1]].push(e[0])}));const s=[];const r={};const o=e=>{if(r[e]){return}r[e]=true;n[e].forEach(o);s.push(e)};t.forEach(o);return s};const Ml=Object.freeze({__proto__:null,topologicalSort:xl});const kl=e=>{const t=[];const n=(s,r)=>{if(t[s]!==undefined){return 0}t[s]=r;e[s].forEach((e=>n(e,r)));return 1};for(let t=0,s=0;t<e.length;t+=1){if(!(t in e)){continue}s+=n(t,s)}return t};const wl=(e,t)=>{const n={};t.forEach((e=>{n[e]=true}));return e.filter((e=>n[e[0]]&&n[e[1]]))};const Ol=({vertices_coords:e,faces_vertices:t,faceOrders:n,faces_normal:s})=>{if(!n||!n.length){return[]}if(!s){s=is({vertices_coords:e,faces_vertices:t})}const r=n.flatMap((e=>[e[0],e[1]]));const o=en(r);const c=[];o.forEach((e=>{c[e]=F(s[e],s[o[0]])>0}));const a=n.map((e=>e[2]===-1^!c[e[1]]?[e[0],e[1]]:[e[1],e[0]]));return xl(a)};const jl=({vertices_coords:e,faces_vertices:t,faceOrders:n})=>{const s=is({vertices_coords:e,faces_vertices:t});const r=kl(_s({edges_vertices:n.map((e=>[e[0],e[1]]))}));const o=nr(r).map((e=>e.constructor===Array?e:[e]));const c=o.map((e=>wl(n,e))).map((e=>Ol({faceOrders:e,faces_normal:s})));const a=o.map((e=>s[e[0]]));const i=[];c.forEach(((e,t)=>e.forEach(((e,n)=>{i[e]={vector:a[t],layer:n}}))));return i};const Fl=({faces_layer:e})=>{const t=[];const n=nr(e);n.forEach(((e,n)=>{t[e]={vector:[0,0,1],layer:n}}));return t};const Cl=({vertices_coords:e,faces_vertices:t,faceOrders:n,faces_normal:s})=>{if(!s){s=is({vertices_coords:e,faces_vertices:t})}return nr(Ol({faceOrders:n,faces_normal:s}))};const Sl=Object.freeze({__proto__:null,faceOrdersSubset:wl,linearizeFaceOrders:Ol,makeFacesLayer:Cl,nudgeFacesWithFaceOrders:jl,nudgeFacesWithFacesLayer:Fl});const Pl={back:{fill:"white"},front:{fill:"#ddd"}};const Nl={back:{opacity:.1},front:{opacity:.1}};const Vl={};const zl={stroke:"black","stroke-linejoin":"bevel"};const $l={stroke:"none",fill:"black","stroke-linejoin":"bevel"};const Tl={fill:"none"};const Ll=(e,t)=>{const n=e.faces_vertices.map(((e,t)=>t)).filter((e=>t[e]==null));return n.concat(nr(t))};const Bl=e=>{if(e.faceOrders){return Ll(e,nr(Ol(e)))}if(e.faces_layer){return Ll(e,e.faces_layer)}return e.faces_vertices.map(((e,t)=>t)).filter((()=>true))};const Il=(e,t,n)=>e.setAttribute(`data-${t}`,n);const Ul=(e,t={})=>Object.keys(t).forEach((n=>e.setAttributeNS(null,n,t[n])));const Rl=(e,t,n,s)=>{const r=Tt(e);const o=!!(e.faceOrders||e.faces_layer);const c=[["front"],["back"]];const a=El(e);a.map((e=>e?c[0]:c[1])).forEach(((e,n)=>{ba(t[n],e);Il(t[n],"side",e);Ul(t[n],r?o?Pl[e]:Nl[e]:Vl[e]);Ul(t[n],s[e])}));Bl(e).forEach((e=>n.appendChild(t[e])));Object.defineProperty(n,"front",{get:()=>t.filter(((e,t)=>a[t]))});Object.defineProperty(n,"back",{get:()=>t.filter(((e,t)=>!a[t]))});Ul(n,r?o?zl:$l:Tl);return n};const Dl=(e,t={})=>{const n=Qf.g();if(!e||!e.vertices_coords||!e.faces_vertices){return n}const s=e.faces_vertices.map((t=>t.map((t=>[0,1].map((n=>e.vertices_coords[t][n])))))).map((e=>Qf.polygon(e)));s.forEach(((e,t)=>e.setAttributeNS(null,"index",t)));n.setAttributeNS(null,"fill","white");return Rl(e,s,n,t)};const ql=function(e,t={}){const n=Qf.g();if(!e||"faces_edges"in e===false||"edges_vertices"in e===false||"vertices_coords"in e===false){return n}const s=e["faces_edges"].map((t=>t.map((t=>e["edges_vertices"][t])).map(((e,t,n)=>{const s=n[(t+1)%n.length];return e[1]===s[0]||e[1]===s[1]?e[0]:e[1]})).map((t=>[0,1].map((n=>e["vertices_coords"][t][n])))))).map((e=>Qf.polygon(e)));s.forEach(((e,t)=>e.setAttributeNS(null,"index",t)));n.setAttributeNS(null,"fill","white");return Rl(e,s,n,t)};const Wl=(e,t)=>{if(e&&e["faces_vertices"]){return Dl(e,t)}if(e&&e["faces_edges"]){return ql(e,t)}return Qf.g()};const Gl={fill:"none"};const Hl={stroke:"black",fill:"white"};const Jl=(e,t={})=>Object.keys(t).forEach((n=>e.setAttributeNS(null,n,t[n])));const Ql=(e,t={})=>{const n=Qf.g();if(!e){return n}const s=qo(e).polygon;if(!s.length){return n}const r=Qf.polygon(s);ba(r,"boundary");n.appendChild(r);Jl(n,Tt(e)?Gl:Hl);Object.keys(t).forEach((e=>n.setAttributeNS(null,e,t[e])));return n};const Zl={vertices:nl,edges:vl,faces:Wl,boundaries:Ql,edgesPaths:pl,edgesLines:hl,facesVerticesPolygon:Dl,facesEdgesPolygon:ql};const Yl=1/50;const Xl={min:[0,0],span:[1,1]};const Kl=["boundaries","faces","edges","vertices"];const ed=(e,t)=>{for(let n=0;n<e.childNodes.length;n+=1){e.childNodes[n].setAttributeNS(null,"r",t)}};const td=(e,t,n,s)=>{const r=t[3]&&t[3].childNodes.length;if(!(s.strokeWidth||s.viewBox||r)){return}const o=Uo(n)||Xl;const c=Math.max(...o.span);const a=ha(e,"svg");if(a&&s.viewBox){const e=Zf(o);a.setAttributeNS(null,"viewBox",e)}if(a&&s.padding){const e=a.getAttribute("viewBox");if(e!=null){const t=s.padding*c;const n=e.split(" ").map((e=>parseFloat(e)));const r=[-t,-t,t*2,t*2].map(((e,t)=>n[t]+e)).join(" ");a.setAttributeNS(null,"viewBox",r)}}if(s.strokeWidth||s["stroke-width"]){const t=s.strokeWidth?s.strokeWidth:s["stroke-width"];const r=typeof t==="number"?c*t:tl(n);e.setAttributeNS(null,"stroke-width",r)}if(r){const e=s.vertices&&s.vertices.radius!=null?s.vertices.radius:s.radius;const n=typeof e==="string"?parseFloat(e):e;const r=typeof n==="number"&&!Number.isNaN(n)?c*n:c*Yl;ed(t[3],r)}};const nd=(e,t={})=>Kl.map((n=>t[n]===false?Qf.g():Zl[n](e,t))).map(((e,t)=>{ba(e,Kl[t]);return e}));const sd=(e,t,n={})=>{if(!Tt(e)){if(n.faces===undefined){n.faces=false}}const s=nd(e,n);s.filter((e=>e.childNodes.length>0)).forEach((e=>t.appendChild(e)));td(t,s,e,n);ba(t,...[e.file_classes||[],e.frame_classes||[]].flat());return t};const rd=(e,t)=>sd(typeof e==="string"?JSON.parse(e):e,Qf.svg(),{viewBox:true,strokeWidth:true,...t});Object.assign(rd,{...Zl,render:sd,getViewBox:Yf,getStrokeWidth:tl,boundingBoxToViewBox:Zf});const od=e=>{const t=["file_title","file_author","file_description","frame_title","frame_author","frame_description"];return t.filter((t=>e[t])).map((t=>`# ${t.split("_")[1]}: ${e[t]}`)).join("\n")};const cd=e=>{const t=typeof e==="string"?JSON.parse(e):e;const n=od(t);const s=(t.vertices_coords||[]).map((e=>e.join(" "))).map((e=>`v ${e}`)).join("\n");const r=(t.faces_vertices||[]).map((e=>e.map((e=>e+1)).join(" "))).map((e=>`f ${e}`)).join("\n");const o=[n,s,r].filter((e=>e!=="")).join("\n");return`${o}\n`};const ad={};ad.prototype=Object.create(Object.prototype);ad.prototype.constructor=ad;Object.entries({clean:or,validate:Io,populate:so,planarize:eo,subgraph:$o,boundary:qo,boundingBox:Uo,nearest:jr,splitEdge:go,splitFace:Vo,faceSpanningTree:Jo,invertAssignments:Bt,svg:rd,obj:cd,...lr,...Ht}).forEach((([e,t])=>{ad.prototype[e]=function(){return t(this,...arguments)}}));ad.prototype.clone=function(){return Object.assign(Object.create(Object.getPrototypeOf(this)),cr(this))};ad.prototype.folded=function(){const e=this.faces_matrix2?Zo(this,this.faces_matrix2):tc(this,...arguments);return{...this,vertices_coords:e,frame_classes:["foldedForm"]}};ad.prototype.flatFolded=function(){const e=this.faces_matrix2?Zo(this,this.faces_matrix2):nc(this,...arguments);return{...this,vertices_coords:e,frame_classes:["foldedForm"]}};const id=(e,t,n,s)=>{t.forEach((t=>{e.edges_assignment[t]=n;e.edges_foldAngle[t]=s}));return t};ad.prototype.setValley=function(e=[],t=180){return id(this,e,"V",Math.abs(t))};ad.prototype.setMountain=function(e=[],t=-180){return id(this,e,"M",-Math.abs(t))};ad.prototype.setFlat=function(e=[]){return id(this,e,"F",0)};ad.prototype.setUnassigned=function(e=[]){return id(this,e,"U",0)};ad.prototype.setCut=function(e=[]){return id(this,e,"C",0)};const fd=ad.prototype;const ld=(e,t,n,s,r=ft,o=a)=>{const c=L(v(e),v(n));if(Math.abs(c)<o){return undefined}const i=L(e,n);const f=-i;const l=O(s,t);const d=D(l);const u=L(l,n)/i;const m=L(d,e)/f;if(r(m,o/g(n))){return u}return undefined};const dd=(e,t,n)=>M(t,E(e,n));const ud=(e,t,n,s,r)=>e.map(((e,t,n)=>[O(n[(t+1)%n.length],e),e])).map((e=>ld(t,n,e[0],e[1],s,r))).filter((e=>e!==undefined)).sort(((e,t)=>e-t));const md=(e,t,n)=>{let s=0;let r=e.length-1;while(s<r){if(t(e[s+1]-e[s],n)){break}s+=1}while(r>s){if(t(e[r]-e[r-1],n)){break}r-=1}if(s>=r){return undefined}return[e[s],e[r]]};const gd=(e,{vector:t,origin:n},s=st,r=ot,o=a)=>{const c=ud(e,t,n,ft,o);if(c.length<2){return undefined}const i=o*2/g(t);const f=md(c,s,i);if(f===undefined){return undefined}const l=e=>{if(r(e)){return e}return e<.5?0:1};const d=f.map(l);if(Math.abs(d[0]-d[1])<o*2/g(t)){return undefined}const u=dd(t,n,(d[0]+d[1])/2);return yr(e,u,s,o)?d.map((e=>dd(t,n,e))):undefined};const pd=(e,t,n=a)=>{const s=(e,t,s)=>(s[0]-t[0])*(e[1]-t[1])>(s[1]-t[1])*(e[0]-t[0])+n;const r=(e,t,n,s)=>{const r=O(e,t);const o=O(s,n);const c=L(e,t);const a=L(s,n);const i=1/L(r,o);return E(O(E(o,c),E(r,a)),i)};let o=e;let c=t[t.length-1];for(let e=0;e<t.length;e+=1){const n=t[e];const a=o;o=[];let i=a[a.length-1];for(let e=0;e<a.length;e+=1){const t=a[e];if(s(t,c,n)){if(!s(i,c,n)){o.push(r(c,n,t,i))}o.push(t)}else if(s(i,c,n)){o.push(r(c,n,t,i))}i=t}c=n}return o.length===0?undefined:o};const _d=Object.freeze({__proto__:null,clipLineConvexPolygon:gd,clipPolygonPolygon:pd});const hd=(e,{vector:t,origin:n},s)=>{if(e.length<2){return e}const r=e.map((e=>O(e[1],e[0]))).map((e=>C(e,t)<s));e.map(((e,t)=>t)).filter((e=>r[e])).forEach((t=>{e[t]=[e[t][1],e[t][0]]}));const o=v(t);const c=e.map((e=>e.map((e=>C(O(e,n),o))))).sort(((e,t)=>e[0]-t[0]));const a=[[c[0][0],c[0][1]]];for(let e=1;e<c.length;e+=1){const t=c[e];if(t[0]-s<a[a.length-1][1]+s){a[a.length-1][1]=Math.max(t[1],a[a.length-1][1])}else{a.push([t])}}return a.map((e=>e.map((e=>M(n,E(o,e))))))};const vd=(e,t,n,s=ot,r=a)=>{const o=t.map((t=>e.faces_vertices[t].map((t=>e.vertices_coords[t])))).map((e=>gd(e,n,st,s,r))).filter((e=>e!==undefined));return hd(o,n,r)};const bd=(e,t,n=a)=>{const s=Fo(e,t,n);return vd(e,s,t,ot,n)};const yd=(e,t,n=a)=>{const s=Co(e,t,n);return vd(e,s,t,at,n)};const Ed=(e,t,n=a)=>{const s=O(t[1],t[0]);const r=t[0];const o=So(e,t,n);return vd(e,o,{vector:s,origin:r},ft,n)};const Ad=function(e,t){const n=qo(e).vertices.map((t=>e.vertices_coords[t]));const s=t.vector?t.vector:O(t[1],t[0]);const r=t.origin?t.origin:t[0];const o=t.domain?t.domain:ot;return gd(n,{vector:s,origin:r},st,o)};const xd=Object.freeze({__proto__:null,clip:Ad,clipLine:bd,clipRay:yd,clipSegment:Ed});const Md=({vertices_coords:e,edges_vertices:t},{vector:n,origin:s},r=a)=>{const o=h(n);const c=e=>{const t=h(w(e,s));const n=Math.abs(F(t,o));return Math.abs(1-n)<r};const i=Ns({vertices_coords:e,edges_vertices:t});return t.map(((e,t)=>t)).filter((e=>J(n,i[e],r))).filter((n=>c(e[t[n][0]])))};const kd=({vertices_coords:e,edges_vertices:t},{min:n,max:s},r=a)=>{const o=Ps({vertices_coords:e,edges_vertices:t});const c=n.map((e=>e-r));const i=s.map((e=>e+r));return t.map(((e,t)=>t)).filter((e=>!(o[e][0][0]<c[0]&&o[e][1][0]<c[0]))).filter((e=>!(o[e][0][0]>i[0]&&o[e][1][0]>i[0]))).filter((e=>!(o[e][0][1]<c[1]&&o[e][1][1]<c[1]))).filter((e=>!(o[e][0][1]>i[1]&&o[e][1][1]>i[1])))};const wd=({vertices_coords:e,edges_vertices:t},n,s,r=a)=>{const o=Xe([n,s]);const c=O(s,n);const i={vector:c,origin:n};const f=kd({vertices_coords:e,edges_vertices:t},o,r);const l=[];f.forEach((n=>{const s=t[n].map((t=>e[t]));const o=O(s[1],s[0]);const c={vector:o,origin:s[0]};const a=Br(i,c,ft,ft,r);if(!a){return}l[n]=a}));return l};const Od=Object.freeze({__proto__:null,getEdgesCollinearToLine:Md,getEdgesRectOverlap:kd,getEdgesSegmentIntersection:wd});const jd=(e,t,n=a)=>{if(!e.vertices_coords){e.vertices_coords=[]}if(typeof t[0]==="number"){t=[t]}const s=t.map((t=>e.vertices_coords.map((e=>I(e,t)<n)).map(((e,t)=>e?t:undefined)).filter((e=>e!==undefined)).shift()));let r=e.vertices_coords.length;const o=t.filter(((e,t)=>s[t]===undefined));e.vertices_coords.push(...o);return s.map((e=>e===undefined?r++:e))};const Fd=(e,t,n)=>{const s=Array.from(Array(t.length-1)).map(((e,n)=>[t[n],t[n+1]]));const r=s.map((e=>e.join(" "))).map((e=>n[e]===undefined));const o=s.filter(((e,t)=>r[t]));const c=Array.from(Array(o.length)).map(((t,n)=>e.edges_vertices.length+n));c.forEach(((t,n)=>{e.edges_vertices[t]=o[n]}));if(e.edges_assignment){c.forEach((t=>{e.edges_assignment[t]="U"}))}if(e.edges_foldAngle){c.forEach((t=>{e.edges_foldAngle[t]=0}))}for(let n=0;n<t.length;n+=1){const s=t[n];const o=r[n-1]?t[n-1]:undefined;const c=r[n]?t[n+1]:undefined;const a=[o,c].filter((e=>e!==undefined));const i=e.vertices_vertices[s]?e.vertices_vertices[s]:[];const f=i.concat(a);e.vertices_vertices[s]=os(e,f,t[n])}const a=bs(e);for(let n=0;n<t.length;n+=1){const s=t[n];e.vertices_edges[s]=e.vertices_vertices[s].map((e=>a[`${s} ${e}`]))}t.map((t=>e.vertices_vertices[t].length===1?[l]:Bn(e.vertices_vertices[t].map((n=>O(e.vertices_coords[n],e.vertices_coords[t])))))).forEach(((n,s)=>{e.vertices_sectors[t[s]]=n}));return c};const Cd=(e,t,n,s=a)=>{if(!e.vertices_sectors){e.vertices_sectors=xs(e)}const r=[t,n].map((e=>[e[0],e[1]]));const o=O(r[1],r[0]);const c=wd(e,r[0],r[1],s);const i=c.map(((e,t)=>t)).filter(ot);const f={};i.forEach((t=>e.edges_faces[t].forEach((e=>{f[e]=true}))));const l=Object.keys(f).map((e=>parseInt(e,10))).sort(((e,t)=>e-t));const d=i.reverse().map((t=>go(e,t,c[t],s)));const u=d.map((e=>e.vertex));const m=jd(e,r,s);const g={};u.forEach((e=>{g[e]=true}));m.forEach((e=>{g[e]=true}));const p=Object.keys(g).map((e=>parseInt(e,10)));const _=cs(e,p,o);const h=bs(e);const v=Fd(e,_,h);v.forEach((t=>{const n=e.edges_vertices[t];h[`${n[0]} ${n[1]}`]=t;h[`${n[1]} ${n[0]}`]=t}));const b=_.map((t=>e.vertices_vertices[t].map((e=>[[e,t],[t,e]])))).reduce(((e,t)=>e.concat(t)),[]).reduce(((e,t)=>e.concat(t)),[]);const y={};const E=b.map((t=>Gn(e,t[0],t[1],y))).filter((e=>e!==undefined));const A=Jn(E);mn(e,"faces",l);const x=A.map(((t,n)=>e.faces_vertices.length+n));if(e.faces_vertices){x.forEach(((t,n)=>{e.faces_vertices[t]=A[n].vertices}))}if(e.faces_edges){x.forEach(((t,n)=>{e.faces_edges[t]=A[n].edges.map((e=>h[e]))}))}if(e.faces_angles){x.forEach(((t,n)=>{e.faces_angles[t]=A[n].faces_angles}))}if(e.vertices_faces){e.vertices_faces=vs(e)}if(e.edges_faces){e.edges_faces=ks(e)}if(e.faces_faces){e.faces_faces=Bs(e)}if(e.vertices_coords.length!==e.vertices_vertices.length||e.vertices_coords.length!==e.vertices_edges.length||e.vertices_coords.length!==e.vertices_faces.length){console.warn("vertices mismatch",JSON.parse(JSON.stringify(e)))}if(e.edges_vertices.length!==e.edges_faces.length||e.edges_vertices.length!==e.edges_assignment.length){console.warn("edges mismatch",JSON.parse(JSON.stringify(e)))}if(e.faces_vertices.length!==e.faces_edges.length||e.faces_vertices.length!==e.faces_faces.length){console.warn("faces mismatch",JSON.parse(JSON.stringify(e)))}return v};const Sd=({vertices_vertices:e},t)=>{const n=[t[1],t[0]];t.map(((t,s)=>e[t].indexOf(n[s]))).forEach(((n,s)=>e[t[s]].splice(n,1)))};const Pd=({vertices_edges:e},t,n)=>{n.map(((n,s)=>e[n].indexOf(t))).forEach(((t,s)=>e[n[s]].splice(t,1)))};const Nd=(e,t,n,s)=>{const r=t.map((t=>e.faces_edges[t].indexOf(n)));const o=[];t.forEach(((t,n)=>e.faces_vertices[t].forEach(((e,t,r)=>{const c=r[(t+1)%r.length];if(e===s[0]&&c===s[1]||e===s[1]&&c===s[0]){o[n]=t}}))));if(o[0]===undefined||o[1]===undefined){console.warn("removePlanarEdge error joining faces")}const c=t.map((t=>e.faces_edges[t].length));const a=t.map((t=>e.faces_vertices[t].length));const i=c.map((e=>e-1));const f=a.map((e=>e-1));const l=r.map(((e,t)=>(e+1)%c[t]));const d=o.map(((e,t)=>(e+1)%a[t]));const u=t.map(((t,n)=>Array.from(Array(i[n])).map(((e,t)=>(l[n]+t)%c[n])).map((n=>e.faces_edges[t][n]))));const m=t.map(((t,n)=>Array.from(Array(f[n])).map(((e,t)=>(d[n]+t)%a[n])).map((n=>e.faces_vertices[t][n]))));const g=t.map((t=>e.faces_faces[t])).reduce(((e,t)=>e.concat(t)),[]).filter((e=>e!==t[0]&&e!==t[1]));return{vertices:m[0].concat(m[1]),edges:u[0].concat(u[1]),faces:g}};const Vd=(e,t)=>{const n=[...e.edges_vertices[t]].sort(((e,t)=>t-e));const s=[...e.edges_faces[t]];Sd(e,n);Pd(e,t,n);const r=n.map((t=>e.vertices_vertices[t].length===0));const o=n.filter(((e,t)=>r[t]));if(s.length===2&&s[0]!==s[1]){const r=e.faces_vertices.length;const o=Nd(e,s,t,n);e.faces_vertices.push(o.vertices);e.faces_edges.push(o.edges);e.faces_faces.push(o.faces);e.vertices_faces.forEach(((t,n)=>{let o=false;t.forEach(((c,a)=>{if(c===s[0]||c===s[1]){e.vertices_faces[n][a]=r;const s=o?[n,1]:[n,1,r];t.splice(...s);o=true}}))}));e.edges_faces.forEach(((t,n)=>t.forEach(((t,o)=>{if(t===s[0]||t===s[1]){e.edges_faces[n][o]=r}}))));e.faces_faces.forEach(((t,n)=>t.forEach(((t,o)=>{if(t===s[0]||t===s[1]){e.faces_faces[n][o]=r}}))));e.faces_vertices.forEach((t=>t.forEach((t=>{if(t===undefined){console.log("FOUND ONE before remove",e.faces_vertices)}}))));mn(e,"faces",s)}if(s.length===2&&s[0]===s[1]&&o.length){const n=s[0];e.faces_vertices[n]=e.faces_vertices[n].filter((e=>!o.includes(e))).filter(((e,t,n)=>e!==n[(t+1)%n.length]));e.faces_edges[n]=e.faces_edges[n].filter((e=>e!==t))}mn(e,"edges",[t]);mn(e,"vertices",o)};const zd=(e,t,n,s=false,r=a)=>{const o=[e,n].map((e=>nt(t,e))).reduce(((e,t)=>e||t),false);if(o){return s}const c=[[e,t],[t,n]].map((e=>w(e[1],e[0]))).map((e=>h(e)));return et(1,F(...c),r)};const $d=(e,t,n)=>{const s=T(e.vector,t.vector,n);const r=T(e.origin,t.origin,n);return{vector:s,origin:r}};const Td=(e,t,n,s=a)=>{const r=F(e.vector,t.vector);const o=L(e.vector,t.vector);const c=L(O(t.origin,e.origin),t.vector);const i=c/o;const f=[e.vector,t.vector].map((e=>h(e)));const l=o>-s?[[e.vector,t.vector],[D(t.vector),e.vector]]:[[t.vector,e.vector],[D(e.vector),t.vector]];const d=l.map((e=>zn(e[0],e[1],n)));const u=Math.abs(L(...f))<s;const m=u?undefined:M(e.origin,E(e.vector,i));const g=Array.from(Array(n-1));const p=u?g.map(((s,r)=>T(e.origin,t.origin,(r+1)/n))):g.map((()=>m));const _=d.map((e=>e.map(((e,t)=>({vector:e,origin:[...p[t]]})))));if(u){_[r>-s?1:0]=[]}return _};const Ld=(e,t,n=a)=>{const s=Td(e,t,2,n).map((e=>e[0]));s.forEach(((e,t)=>{if(e===undefined){delete s[t]}}));return s};const Bd=Object.freeze({__proto__:null,bisectLines2:Ld,collinearBetween:zd,lerpLines:$d,pleat:Td});const Id=({vertices_edges:e},t,n)=>{const s=new Set(e[t]);return e[n].filter((e=>s.has(e))).shift()};const Ud=({edges_vertices:e},t,n)=>n.map((n=>e[n][0]===t?e[n][1]:e[n][0]));const Rd=Object.freeze({__proto__:null,getEdgeBetweenVertices:Id,getOtherVerticesInEdges:Ud});const Dd=({vertices_coords:e,vertices_edges:t,edges_vertices:n},s,r=a)=>{if(!e||!n){return false}if(!t){t=ds({edges_vertices:n})}const o=t[s];if(o===undefined||o.length!==2){return false}const c=Ud({edges_vertices:n},s,o);const i=[c[0],s,c[1]].map((t=>e[t]));return zd(...i,false,r)};const qd=Object.freeze({__proto__:null,isVertexCollinear:Dd});const Wd=(e,t)=>{const n=e.vertices_edges[t];const s=en(e.vertices_faces[t].filter((e=>e!=null)));if(n.length!==2||s.length>2){console.warn("cannot remove non 2-degree vertex yet (e,f)",n,s);return}const r=Ud(e,t,n);const o=r.slice().reverse();n.sort(((e,t)=>e-t));r.forEach((t=>{const s=e.vertices_edges[t].indexOf(n[1]);if(s===-1){return}e.vertices_edges[t][s]=n[0]}));r.forEach(((n,s)=>{const r=e.vertices_vertices[n].indexOf(t);if(r===-1){console.warn("removePlanarVertex unknown vertex issue");return}e.vertices_vertices[n][r]=o[s]}));e.edges_vertices[n[0]]=[...r];s.forEach((n=>{const s=e.faces_vertices[n].indexOf(t);if(s===-1){console.warn("removePlanarVertex unknown face_vertex issue");return}e.faces_vertices[n].splice(s,1)}));s.forEach((t=>{const s=e.faces_edges[t].indexOf(n[1]);if(s===-1){console.warn("removePlanarVertex unknown face_edge issue");return}e.faces_edges[t].splice(s,1)}));mn(e,"vertices",[t]);mn(e,"edges",[n[1]])};const Gd=e=>[0,1].map((t=>e.filter(((e,n)=>n%2===t)).reduce(((e,t)=>e+t),0)));const Hd=e=>{const t=e.reduce(((e,t)=>e+t),0)/2;return Gd(e).map((e=>e-t))};const Jd=e=>e.map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>On(...e))).map(((e,t,n)=>n.slice(t+1,n.length).concat(n.slice(0,t)))).map((e=>Gd(e).map((e=>Math.PI-e)))).map(((t,n)=>e[n]+t[0])).map(((t,n)=>kn(t,e[n],e[(n+1)%e.length])?t:undefined));const Qd=e=>{const t=e.map((e=>Math.atan2(e[1],e[0])));return Jd(t).map((e=>e===undefined?undefined:[Math.cos(e),Math.sin(e)]))};const Zd=Object.freeze({__proto__:null,alternatingSum:Gd,alternatingSumDifference:Hd,kawasakiSolutionsRadians:Jd,kawasakiSolutionsVectors:Qd});const Yd={B:true,b:true,F:true,f:true,U:true,u:true};const Xd=({vertices_edges:e,edges_assignment:t})=>e.map((e=>e.map((e=>Yd[t[e]])).reduce(((e,t)=>e&&t),true))).map(((e,t)=>e?t:undefined)).filter((e=>e!==undefined));const Kd={M:true,m:true,V:true,v:true};const eu={M:-1,m:-1,V:1,v:1};const tu=({edges_vertices:e,vertices_edges:t,edges_assignment:n})=>{if(!t){t=ds({edges_vertices:e})}const s=t.map((e=>e.map((e=>eu[n[e]])).filter((e=>e!==undefined)).reduce(((e,t)=>e+t),0))).map((e=>e===2||e===-2));Ro({edges_vertices:e,edges_assignment:n}).forEach((e=>{s[e]=true}));Xd({vertices_edges:t,edges_assignment:n}).forEach((e=>{s[e]=true}));return s.map(((e,t)=>!e?t:undefined)).filter((e=>e!==undefined))};const nu=({vertices_coords:e,vertices_vertices:t,vertices_edges:n,edges_vertices:s,edges_assignment:r,edges_vector:o},c=a)=>{if(!t){t=ps({vertices_coords:e,vertices_edges:n,edges_vertices:s})}const i=As({vertices_coords:e,vertices_vertices:t,edges_vertices:s,edges_vector:o}).map(((e,t)=>e.filter(((e,s)=>Kd[r[n[t][s]]])))).map((e=>e.length>1?Bn(e):[0,0])).map((e=>Gd(e))).map((e=>Math.abs(e[0]-e[1])<c));Ro({edges_vertices:s,edges_assignment:r}).forEach((e=>{i[e]=true}));Xd({vertices_edges:n,edges_assignment:r}).forEach((e=>{i[e]=true}));return i.map(((e,t)=>!e?t:undefined)).filter((e=>e!==undefined))};const su=Object.freeze({__proto__:null,validateKawasaki:nu,validateMaekawa:tu});const ru={};ru.prototype=Object.create(fd);ru.prototype.constructor=ru;const ou=function(e){e.valley=t=>this.setValley(e,t);e.mountain=t=>this.setMountain(e,t);e.flat=()=>this.setFlat(e);e.unassigned=()=>this.setUnassigned(e);e.cut=()=>this.setCut(e);return e};const cu=(e,t)=>{const n=Ad(e,t);if(!n){return undefined}const s=Cd(e,n[0],n[1]);return ou.call(e,s)};ru.prototype.line=function(...e){const t=Le(...e);if(!t){return undefined}t.domain=ot;return cu(this,t)};ru.prototype.ray=function(...e){const t=Le(...e);if(!t){return undefined}t.domain=at;return cu(this,t)};ru.prototype.segment=function(...e){const t=En(...$e(...e));if(!t){return undefined}t.domain=ft;return cu(this,t)};ru.prototype.polygon=function(...e){const t=ze(...e);if(!t){return undefined}const n=t.map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>En(...e))).map((e=>({...e,domain:ft}))).map((e=>Ad(this,e))).filter((e=>e!==undefined));if(!n){return undefined}const s=n.flatMap((e=>Cd(this,e[0],e[1])));return ou.call(this,s)};ru.prototype.removeEdge=function(e){const t=this.edges_vertices[e];Vd(this,e);t.map((e=>Dd(this,e))).map(((e,n)=>e?t[n]:undefined)).filter((e=>e!==undefined)).sort(((e,t)=>t-e)).forEach((e=>Wd(this,e)));return true};ru.prototype.validate=function(e){const t=Io(this,e);t.vertices.kawasaki=nu(this,e);t.vertices.maekawa=tu(this);if(this.edges_foldAngle){t.edges.not_flat=this.edges_foldAngle.map(((e,t)=>jt(e)?undefined:t)).filter((e=>e!==undefined))}if(t.summary==="valid"){if(t.vertices.kawasaki.length||t.vertices.maekawa.length){t.summary="invalid"}else if(t.edges.not_flat.length){t.summary="not flat"}}return t};ru.prototype.defer=false;const au=ru.prototype;const iu=(e,t)=>{const n=[];const s=e.map(((e,t)=>t));const r=s.filter((e=>t[e]));const o=s.filter((e=>!t[e]));o.sort(((t,n)=>e[t]-e[n])).forEach(((e,t)=>{n[e]=t}));r.sort(((t,n)=>e[n]-e[t])).forEach(((e,t)=>{n[e]=o.length+t}));return n};const fu=(e,t,n,s)=>{const r=O(n,t);const o=L(e,r);return s?o>0:o<0};const lu=(e,t)=>!e.faces_vertices[t]?[0,0]:e.faces_vertices[t].map((t=>e.vertices_coords[t])).reduce(((e,t)=>[e[0]+t[0],e[1]+t[1]]),[0,0]).map((n=>n/e.faces_vertices[t].length));const du={F:true,f:true,U:true,u:true};const uu={M:"V",m:"V",V:"M",v:"M"};const mu=e=>uu[e]||e;const gu=(e,t)=>({center:e.faces_center[t],matrix:e.faces_matrix2[t],winding:e.faces_winding[t],crease:e.faces_crease[t],side:e.faces_side[t],layer:e.faces_layer[t]});const pu=(e,{vector:t,origin:n},s="V",r=a)=>{const o=mu(s);so(e);if(!e.faces_layer){e.faces_layer=Array(e.faces_vertices.length).fill(0)}e.faces_center=e.faces_vertices.map(((t,n)=>lu(e,n)));if(!e.faces_matrix2){e.faces_matrix2=Ko(e,0)}e.faces_winding=yl(e.faces_matrix2);e.faces_crease=e.faces_matrix2.map(oe).map((e=>ne(e,t,n)));e.faces_side=e.faces_vertices.map(((t,n)=>fu(e.faces_crease[n].vector,e.faces_crease[n].origin,e.faces_center[n],e.faces_winding[n])));const c=Zo(e,e.faces_matrix2);const i=Md({vertices_coords:c,edges_vertices:e.edges_vertices},{vector:t,origin:n},r).filter((t=>du[e.edges_assignment[t]]));i.map((t=>e.edges_faces[t].find((e=>e!=null)))).map((t=>e.faces_winding[t])).map((e=>e?s:o)).forEach(((t,n)=>{e.edges_assignment[i[n]]=t;e.edges_foldAngle[i[n]]=wt(t)}));const f=gu(e,0);const l=e.faces_vertices.map(((e,t)=>t)).reverse().map((t=>{const n=gu(e,t);const c=Vo(e,t,n.crease,r);if(c===undefined){return undefined}e.edges_assignment[c.edges.new]=n.winding?s:o;e.edges_foldAngle[c.edges.new]=wt(e.edges_assignment[c.edges.new]);const a=c.faces.map[c.faces.remove];a.forEach((t=>{e.faces_center[t]=lu(e,t);e.faces_side[t]=fu(n.crease.vector,n.crease.origin,e.faces_center[t],n.winding);e.faces_layer[t]=n.layer}));return c})).filter((e=>e!==undefined));const d=Ks(...l.map((e=>e.faces.map)));const u=Ks(...l.map((e=>e.edges.map)).filter((e=>e!==undefined)));const m=l.map((e=>e.faces.remove)).reverse();e.faces_layer=iu(e.faces_layer,e.faces_side);const g=d&&d[0]&&d[0].length===2;const p=g?d[0].filter((t=>e.faces_side[t])).shift():0;let _=f.matrix;if(s!==o){_=!g&&!e.faces_side[0]?f.matrix:se(f.matrix,le(f.crease.vector,f.crease.origin))}e.faces_matrix2=Ko(e,p).map((e=>se(_,e)));delete e.faces_center;delete e.faces_winding;delete e.faces_crease;delete e.faces_side;return{faces:{map:d,remove:m},edges:{map:u}}};const _u={};_u.prototype=Object.create(fd);_u.prototype.constructor=_u;_u.prototype.flatFold=function(){pu(this,Le(arguments));return this};const hu=_u.prototype;const vu=1.1;const bu="Rabbit Ear";const yu=(e,t)=>[[0,0],[e,0],[e,t],[0,t]];const Eu=e=>so({vertices_coords:e,edges_vertices:e.map(((e,t,n)=>[t,(t+1)%n.length])),edges_assignment:Array(e.length).fill("B")});const Au=(e=1)=>Eu(yu(e,e));const xu=(e=1,t=1)=>Eu(yu(e,t));const Mu=(e=3,t=1)=>Eu(Re(e,t));const ku=()=>so({vertices_coords:[[0,0],[1,0],[1,Math.SQRT2-1],[1,1],[Math.SQRT2-1,1],[0,1]],edges_vertices:[[0,1],[1,2],[2,3],[3,4],[4,5],[5,0],[0,2],[0,4],[0,3]],edges_assignment:Array.from("BBBBBBVVF")});const wu=()=>so({vertices_coords:[[0,0],[1,0],[1,1],[0,1],[.5,.5],[1-Math.SQRT1_2,Math.SQRT1_2],[Math.SQRT1_2,1-Math.SQRT1_2],[1,1-Math.SQRT1_2],[1-Math.SQRT1_2,1],[Math.SQRT1_2,0],[0,Math.SQRT1_2]],edges_vertices:[[0,4],[4,2],[4,5],[5,3],[0,5],[1,6],[6,4],[0,6],[2,5],[2,6],[1,7],[7,2],[6,7],[2,8],[8,3],[5,8],[0,9],[9,1],[6,9],[3,10],[10,0],[5,10]],edges_assignment:Array.from("FFFVVVFVVVBBFBBFBBMBBM")});const Ou=Object.freeze({__proto__:null,fish:wu,kite:ku,polygon:Mu,rectangle:xu,square:Au});const ju=(...e)=>so(Object.assign(Object.create(fd),{...e.reduce(((e,t)=>({...e,...t})),{}),file_spec:vu,file_creator:bu}));const Fu=(...e)=>so(Object.assign(Object.create(au),{...e.length?e.reduce(((e,t)=>({...e,...t})),{}):Au(),file_spec:vu,file_creator:bu,frame_classes:["creasePattern"]}));const Cu=(...e)=>so(Object.assign(Object.create(hu),{...e.length?e.reduce(((e,t)=>({...e,...t})),{}):Au(),file_spec:vu,file_creator:bu,frame_classes:["foldedForm"]}));ju.prototype=fd;ju.prototype.constructor=ju;Fu.prototype=au;Fu.prototype.constructor=Fu;Cu.prototype=hu;Cu.prototype.constructor=Cu;Object.keys(Ou).forEach((e=>{ju[e]=(...t)=>ju(Ou[e](...t));Fu[e]=(...t)=>Fu(Ou[e](...t));Cu[e]=(...t)=>Cu(Ou[e](...t))}));const Su=(e,t)=>{const n=L(e.normal,t.normal);if(Math.abs(n)<a){return undefined}const s=e.distance*t.normal[1]-t.distance*e.normal[1];const r=t.distance*e.normal[0]-e.distance*t.normal[0];return[s/n,r/n]};const Pu=(e,t)=>{const n=v(q(O(t,e)));return[{normal:n,distance:C(M(e,t),n)/2}]};const Nu=(e,t)=>{const n=v(O(t,e));return[{normal:n,distance:C(M(e,t),n)/2}]};const Vu=(e,t)=>{const n=Su(e,t);return n===undefined?[{normal:e.normal,distance:(e.distance+t.distance*C(e.normal,t.normal))/2}]:[M,O].map((n=>v(n(e.normal,t.normal)))).map((e=>({normal:e,distance:C(n,e)})))};const zu=(e,t)=>{const n=q(e.normal);const s=C(t,n);return[{normal:n,distance:s}]};const $u=(e,t,n)=>{const s=C(t,e.normal);const r=e.distance-s;const o=U(t,n);if(r>o){return[]}const c=Math.sqrt(o*o-r*r);const i=E(e.normal,r);const f=M(t,i);const l=E(q(e.normal),c);const d=c<a?[f]:[M(f,l),O(f,l)];return d.map((e=>v(O(n,e)))).map((e=>({normal:e,distance:C(t,e)})))};const Tu=e=>e<0?-Math.pow(-e,1/3):Math.pow(e,1/3);const Lu=(e,t,n,s,r)=>{switch(e){case 1:return[-r/s];case 2:{const e=Math.pow(s,2)-4*n*r;if(e<-a){return[]}const t=-s/(2*n);if(e<a){return[t]}const o=Math.sqrt(e)/(2*n);return[t+o,t-o]}case 3:{const e=n/t;const o=s/t;const c=r/t;const i=(3*o-Math.pow(e,2))/9;const f=(9*e*o-27*c-2*Math.pow(e,3))/54;const l=Math.pow(i,3)+Math.pow(f,2);const d=-e/3;if(l>0){const e=Math.sqrt(l);const t=Tu(f+e);const n=Tu(f-e);return[d+t+n]}if(Math.abs(l)<a){const e=Math.pow(f,1/3);if(f<0){return[]}return[d+2*e,d-e]}const u=Math.sqrt(-l);const m=Math.atan2(u,f)/3;const g=Math.pow(Math.pow(f,2)-l,1/6);const p=g*Math.cos(m);const _=g*Math.sin(m);return[d+2*p,d-p-Math.sqrt(3)*_,d-p+Math.sqrt(3)*_]}default:return[]}};const Bu=(e,t,n,s)=>{if(Math.abs(1-C(e.normal,n)/e.distance)<.02){return[]}const r=q(e.normal);const o=O(M(n,E(e.normal,e.distance)),E(s,2));const c=O(E(e.normal,e.distance),n);const i=C(s,t.normal)-t.distance;const f=2*C(c,r);const l=C(c,c);const d=C(M(o,c),r);const u=C(o,c);const m=C(r,t.normal);const g=C(c,t.normal);const p=m;const _=i+d*m+g;const h=i*f+u*m+d*g;const b=i*l+u*g;let y=0;if(Math.abs(h)>a){y=1}if(Math.abs(_)>a){y=2}if(Math.abs(p)>a){y=3}return Lu(y,p,_,h,b).map((t=>M(E(e.normal,e.distance),E(r,t)))).map((e=>({p:e,normal:v(O(e,n))}))).map((e=>({normal:e.normal,distance:C(e.normal,N(e.p,n))})))};const Iu=(e,t,n)=>{const s=q(e.normal);const r=C(s,t.normal);if(Math.abs(r)<a){return undefined}const o=C(n,s);const c=C(n,t.normal);const i=(t.distance+2*o*r-c)/(2*r);return[{normal:s,distance:i}]};const Uu=(e,...t)=>[null,Pu,Nu,Vu,zu,$u,Bu,Iu][e](...t);const Ru=Object.freeze({__proto__:null,normalAxiom:Uu,normalAxiom1:Pu,normalAxiom2:Nu,normalAxiom3:Vu,normalAxiom4:zu,normalAxiom5:$u,normalAxiom6:Bu,normalAxiom7:Iu});const Du=(e,t)=>[{vector:v(O(...Y(t,e))),origin:e}];const qu=(e,t)=>[{vector:v(q(O(...Y(t,e)))),origin:N(e,t)}];const Wu=(e,t)=>Ld(e,t);const Gu=(e,t)=>[{vector:q(v(e.vector)),origin:t}];const Hu=(e,t,n)=>(Ir({radius:U(t,n),origin:t},e)||[]).map((e=>({vector:v(q(O(...Y(e,n)))),origin:N(n,e)})));const Ju=(e,t,n,s)=>Bu(An(e),An(t),n,s).map(xn);const Qu=(e,t,n)=>{const s=Br(e,{vector:t.vector,origin:n},ot,ot);return s===undefined?[]:[{vector:v(q(O(...Y(s,n)))),origin:N(n,s)}]};const Zu=(e,...t)=>[null,Du,qu,Wu,Gu,Hu,Ju,Qu][e](...t);const Yu=Object.freeze({__proto__:null,axiom:Zu,axiom1:Du,axiom2:qu,axiom3:Wu,axiom4:Gu,axiom5:Hu,axiom6:Ju,axiom7:Qu});const Xu=(e,t)=>{const n=le(e.vector,e.origin);return te(n,t)};const Ku=(e,t,n,s)=>[n,s].map((t=>yr(e,t,st))).reduce(((e,t)=>e&&t),true);const em=Ku;const tm=(e,t,n,s)=>{const r=[n,s].map((t=>gd(e,t,st,ot)));if(r[0]===undefined||r[1]===undefined){return[false,false]}const o=t.map((t=>t===undefined?undefined:gd(e,t,st,ot)));const c=[0,1].map((e=>o[e]!==undefined));const a=t.map((e=>e===undefined?undefined:[Xu(e,r[0][0]),Xu(e,r[0][1])]));const i=a.map((e=>e===undefined?false:hr({vector:w(r[1][1],r[1][0]),origin:r[1][0]},e[0],ft)||hr({vector:w(r[1][1],r[1][0]),origin:r[1][0]},e[1],ft)||hr({vector:w(e[1],e[0]),origin:e[0]},r[1][0],ft)||hr({vector:w(e[1],e[0]),origin:e[0]},r[1][1],ft)));return[0,1].map((e=>i[e]===true&&c[e]===true))};const nm=(e,t,n,s)=>{const r=Br(n,{vector:q(n.vector),origin:s},ot,ot);return[s,r].filter((e=>e!==undefined)).map((t=>yr(e,t,st))).reduce(((e,t)=>e&&t),true)};const sm=(e,t,n,s,r)=>{if(t.length===0){return[]}const o=[s,r].map((t=>yr(e,t,st))).reduce(((e,t)=>e&&t),true);const c=t.map((e=>Xu(e,r))).map((t=>yr(e,t,st)));return c.map((e=>e&&o))};const rm=function(e,t,n,s,r,o){if(t.length===0){return[]}const c=[r,o].map((t=>yr(e,t,st))).reduce(((e,t)=>e&&t),true);if(!c){return t.map((()=>false))}const a=t.map((e=>Xu(e,r))).map((t=>yr(e,t,st)));const i=t.map((e=>Xu(e,o))).map((t=>yr(e,t,st)));return t.map(((e,t)=>a[t]&&i[t]))};const om=(e,t,n,s,r)=>{const o=yr(e,r,st);if(!t.length){return[false]}const c=Xu(t[0],r);const a=yr(e,c,st);const i=Gr(e,s,ft,ot)!==undefined;const f=Br(s,t[0],ot,ot);const l=f?yr(e,f,st):false;return o&&a&&i&&l};const cm=(e,t,n,...s)=>[null,Ku,em,tm,nm,sm,rm,om][e](t,n,...s);const am=Object.freeze({__proto__:null,validateAxiom:cm,validateAxiom1:Ku,validateAxiom2:em,validateAxiom3:tm,validateAxiom4:nm,validateAxiom5:sm,validateAxiom6:rm,validateAxiom7:om});const im=e=>e.map((e=>typeof e==="object"&&e.vector?xn(e):e));const fm=(e,t,...n)=>{const s=Zu(e,...n);cm(e,t,s,...n).forEach(((e,t)=>e?t:undefined)).filter((e=>e!==undefined)).forEach((e=>delete s[e]));return s};const lm=(e,t,...n)=>{const s=Uu(e,...n).map(xn);cm(e,t,s,...im(n)).forEach(((e,t)=>e?t:undefined)).filter((e=>e!==undefined)).forEach((e=>delete s[e]));return s};const dm=Object.freeze({__proto__:null,axiomWithBoundary:fm,normalAxiomWithBoundary:lm});const um={...Yu,...Ru,...dm,...am};const mm=()=>{const e={};e.file_spec=vu;e.file_creator=bu;e.file_classes=["singleModel"];e.frame_classes=[];e.frame_attributes=[];e.vertices_coords=[];e.faces_vertices=[];return e};const gm=e=>{if(!e.edges_foldAngle||!e.edges_foldAngle.length){return}let t=true;for(let n=0;n<e.edges_foldAngle.length;n+=1){if(e.edges_foldAngle[n]!==0&&e.edges_foldAngle[n]!==-180&&e.edges_foldAngle[n]!==180){t=false;break}}e.frame_classes.push(t?"creasePattern":"foldedForm");e.frame_attributes.push(t?"2D":"3D")};const pm=e=>e.map(((e,t,n)=>[e,n[(t+1)%n.length]]));const _m=({faces_vertices:e})=>{const t={};const n=[];e.flatMap(pm).forEach((e=>{const s=[e.join(" "),`${e[1]} ${e[0]}`];if(s[0]in t||s[1]in t){return}n.push(e);t[s[0]]=true}));return n};const hm=e=>e.slice(1).map((e=>parseInt(e,10)-1));const vm=e=>e.slice(1).map((e=>parseFloat(e)));const bm=e=>{const t=e.split("\n").map((e=>e.trim().split(/\s+/)));const n=mm();for(let e=0;e<t.length;e+=1){switch(t[e][0].toLowerCase()){case"f":n.faces_vertices.push(hm(t[e]));break;case"v":n.vertices_coords.push(vm(t[e]));break}}n.faces_normal=is(n);n.faces_center=Ds(n);n.edges_vertices=_m(n);n.faces_edges=Ls(n);n.edges_faces=ks(n);n.edges_foldAngle=Ss(n);n.edges_assignment=Fs(n);n.vertices_vertices=gs(n);delete n.faces_normal;delete n.faces_center;delete n.edges_faces;gm(n);return n};const ym=(e,t)=>{const n={...e};dn(n,t);eo(n,t);n.vertices_vertices=ps(n);const s=$s(n);n.faces_vertices=s.faces_vertices;n.faces_edges=s.faces_edges;return n};const Em=({vertices_coords:e,edges_vertices:t})=>{const n=t.map((t=>t.map((t=>e[t])))).map((e=>I(...e)));const s=n.reduce(((e,t)=>Math.min(e,t)),Infinity);return s===Infinity?undefined:s};const Am=({vertices_coords:e,edges_vertices:t})=>{const n=Em({vertices_coords:e,edges_vertices:t});if(n){return n/4}const s=Uo({vertices_coords:e});return s&&s.span?.001*Math.max(...s.span):.001};const xm=(e,t,n="epsilon")=>{if(typeof t==="object"&&typeof t[n]==="number"){return t[n]}return typeof t==="number"?t:Am(e)};const Mm=(e,t)=>e==null?null:Array.from(e.childNodes).filter((e=>e.attributes&&e.attributes.length)).filter((e=>Array.from(e.attributes).filter((e=>e.nodeValue===t)).shift()!==undefined)).shift();const km=(e,t)=>{const n=Mm(e,t);const s=n?Array.from(n.childNodes).shift():null;return s?s.textContent:undefined};const wm=e=>{const t=Mm(e,"lines");const n=t?Array.from(t.childNodes).filter((e=>e.getAttribute)).filter((e=>e.getAttribute("class").split(" ").includes("oripa.OriLineProxy"))).shift():undefined;return n?Array.from(n.childNodes):[]};const Om=e=>e.filter((e=>e.nodeName==="void")).filter((e=>e.childNodes)).map((e=>Mm(e,"oripa.OriLineProxy"))).filter((e=>e)).map((e=>["type","x0","x1","y0","y1"].map((t=>Mm(e,t))).map((e=>e?Array.from(e.childNodes):[])).map((e=>e.filter((e=>e.nodeName==="double"||e.nodeName==="int")).shift())).map((e=>e&&e.childNodes[0]?e.childNodes[0].data:"0")).map(parseFloat)));const jm=["F","B","M","V","U"];const Fm=e=>{const t={};t.vertices_coords=e.flatMap((e=>[[e[1],e[3]],[e[2],e[4]]]));t.edges_vertices=e.map(((e,t)=>[t*2,t*2+1]));t.edges_assignment=e.map((e=>jm[e[0]]));t.edges_foldAngle=Cs(t);return t};const Cm=e=>{const t=pa(e,"text/xml");const n=Array.from(t.childNodes).filter((e=>e.getAttribute)).filter((e=>e.getAttribute("class").split(" ").includes("oripa.DataSet"))).shift();return Fm(Om(wm(n)))};const Sm=(e,t)=>{const n={file_description:"memo",file_author:"originalAuthorName",file_title:"title"};Object.keys(n).forEach((t=>{n[t]=km(e,n[t])}));Object.keys(n).filter((e=>n[e])).forEach((e=>{t[e]=n[e]}));t.file_classes=["singleModel"];t.frame_classes=["creasePattern"]};const Pm=(e,t)=>{const n=pa(e,"text/xml");const s=n&&n.childNodes?Array.from(n.childNodes):[];const r=s.filter((e=>e.getAttribute)).filter((e=>e.getAttribute("class").split(" ").includes("oripa.DataSet"))).shift();const o=Fm(Om(wm(r)));const c=xm(o,t);const a=ym(o,c);Sm(r,a);return a};Object.assign(Pm,{opxEdgeGraph:Cm});const Nm=4;const Vm={M:[1,0,0],V:[0,0,1],J:[1,1,0],U:[1,0,1],C:[0,1,0]};const zm=(e=0,t=0,n=0)=>{const s=A([e,t,n],1/255);const r=p(s);if(r<.05){return"B"}const o=s.reduce(((e,t)=>e+t),0)/3;const c=R(s,[o,o,o]);const a=Object.keys(Vm).map((e=>({key:e,dist:R(s,Vm[e])}))).sort(((e,t)=>e.dist-t.dist)).shift();if(a.dist<c*Nm){return a.key}return r<.1?"B":"F"};const $m=Object.freeze({__proto__:null,assignmentColor:Vm,rgbToAssignment:zm});const Tm=(e,t)=>{const n=Hc(e).toUpperCase();return t&&t[n]?t[n]:zm(...Gc(e))};const Lm=(e,t)=>{switch(t){case"M":case"m":return-180*e;case"V":case"v":return 180*e;default:return 0}};const Bm=(e,t)=>{const n=c().getComputedStyle(e).stroke;if(n!==""&&n!=="none"){return n}if(t.stroke!==undefined){return t.stroke}return undefined};const Im=(e,t)=>{const n=c().getComputedStyle(e).opacity;if(n!==""){const e=parseFloat(n);if(!Number.isNaN(e)){return e}}if(t.opacity!==undefined){const e=parseFloat(t.opacity);if(!Number.isNaN(e)){return e}}return undefined};const Um=Object.freeze({__proto__:null,colorToAssignment:Tm,getEdgeOpacity:Im,getEdgeStroke:Bm,opacityToFoldAngle:Lm});const Rm=(e,t)=>t.map((t=>e.getAttribute(t))).map((e=>e==null?0:e)).map(parseFloat);const Dm=e=>[Rm(e,["x1","y1","x2","y2"])];const qm=function(e){const[t,n,s,r]=Rm(e,["x","y","width","height"]);return[[t,n,t+s,n],[t+s,n,t+s,n+r],[t+s,n+r,t,n+r],[t,n+r,t,n]]};const Wm=e=>{const t=e.split(/[\s,]+/).map(parseFloat);return Array.from(Array(Math.floor(t.length/2))).map(((e,n)=>[t[n*2+0],t[n*2+1]]))};const Gm=e=>Wm(e.getAttribute("points")||"").map(((e,t,n)=>[n[t][0],n[t][1],n[(t+1)%n.length][0],n[(t+1)%n.length][1]]));const Hm=function(e){const t=Gm(e);t.pop();return t};const Jm={L:true,V:true,H:true,Z:true};const Qm=e=>Va(e.getAttribute("d")||"").filter((e=>Jm[e.command.toUpperCase()])).map((e=>[e.start,e.end])).filter((e=>!nt(...e))).map((e=>e.flat()));const Zm={line:Dm,rect:qm,polygon:Gm,polyline:Hm,path:Qm};const Ym=(e,t)=>{const n=[[e[0],e[1]],[e[2],e[3]]];if(!t){return n}const s=ma(t);return s?n.map((e=>te(s,e))):n};const Xm=e=>ka(e).filter((e=>Zm[e.element.nodeName])).flatMap((e=>Zm[e.element.nodeName](e.element).map((t=>Ym(t,e.attributes.transform))).map((t=>({...e,segment:t})))));const Km=e=>{if(!c().document.body){return undefined}const t=c().document.createElement("div");t.setAttribute("display","none");c().document.body.appendChild(t);t.appendChild(e);return t};const eg=e=>ya(e).map((e=>e.nodeName==="style")).reduce(((e,t)=>e||t),false);const tg=e=>{const s=typeof e==="string"?pa(e,"image/svg+xml"):e;if(eg(s)&&t){console.warn(n.backendStylesheet)}const r=_a(s)===c().document?undefined:Km(s);const o=Xm(s);o.map((e=>({data:{assignment:e.attributes["data-assignment"],foldAngle:e.attributes["data-foldAngle"]},stroke:Bm(e.element,e.attributes),opacity:Im(e.element,e.attributes)}))).forEach(((e,t)=>{o[t]={...o[t],...e}}));if(r&&r.parentNode){r.parentNode.removeChild(r)}return o};const ng=function(e){const t=`${e}`.match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);return Math.max(0,(t[1]?t[1].length:0)-(t[2]?+t[2]:0))};const sg=function(e,t=15){if(typeof e!=="number"){return e}const n=parseFloat(e.toFixed(t));if(ng(n)===Math.min(t,ng(e))){return e}return n};const rg=Object.freeze({__proto__:null,cleanNumber:sg});const og=e=>{if(!e||!e.assignments){return undefined}const t={};Object.keys(e.assignments).forEach((n=>{const s=Hc(n).toUpperCase();t[s]=e.assignments[n]}));return t};const cg=(e,t="#f0f",n=undefined)=>{if(e){return e}return Tm(t,n)};const ag=(e,t=1,n=undefined)=>{if(e){return parseFloat(e)}return Lm(t,n)};const ig=(e,t)=>{const n=og(t);if(n){e.forEach((e=>{delete e.data.assignment;delete e.data.foldAngle}))}const s=e.map((e=>cg(e.data.assignment,e.stroke,n)));const r=e.map(((e,t)=>ag(e.data.foldAngle,e.opacity,s[t])));return{edges_assignment:s,edges_foldAngle:r}};const fg=(e,t)=>{const n=tg(e);const{edges_assignment:s,edges_foldAngle:r}=ig(n,t);const o=t&&t.fast?e=>e:sg;const c=n.flatMap((e=>e.segment)).map((e=>e.map((e=>o(e,12)))));const a=n.map(((e,t)=>[t*2,t*2+1]));return{vertices_coords:c,edges_vertices:a,edges_assignment:s,edges_foldAngle:r}};const lg=(e,t)=>{const n=fg(e,t);const s=xm(n,t);const r=ym(n,s);if(typeof t!=="object"||t.boundary!==false){r.edges_assignment.map(((e,t)=>t)).filter((e=>r.edges_assignment[e]==="B"||r.edges_assignment[e]==="b")).forEach((e=>{r.edges_assignment[e]="F"}));const{edges:e}=Wo(r);e.forEach((e=>{r.edges_assignment[e]="B"}))}return{file_spec:1.1,file_creator:"Rabbit Ear",frame_classes:["creasePattern"],...r}};Object.assign(lg,{...Um,svgSegments:tg,svgEdgeGraph:fg,planarizeGraph:ym,makeEpsilon:Am});const dg={objToFold:bm,opxToFold:Pm,svgToFold:lg,foldToSvg:rd,foldToObj:cd};const ug=(e,t=1)=>{if(!e.file_frames||e.file_frames.length<t){return e}const s=["frame_parent","frame_inherit"];const r={visited_frames:[]};const o={};St(e,"file").filter((e=>e!=="file_frames")).forEach((t=>{o[t]=e[t]}));const c=(e,t,s)=>{if(r.visited_frames.indexOf(t)!==-1){throw new Error(n.graphCycle)}r.visited_frames.push(t);s=[t].concat(s);if(t===0){return s}if(e.file_frames[t-1].frame_inherit&&e.file_frames[t-1].frame_parent!=null){return c(e,e.file_frames[t-1].frame_parent,s)}return s};return c(e,t,[]).map((t=>{if(t===0){const t=e.file_frames;e.file_frames=null;const n=cr(e);e.file_frames=t;delete n.file_frames;s.forEach((e=>delete n[e]));return n}const n=cr(e.file_frames[t-1]);s.forEach((e=>delete n[e]));return n})).reduce(((e,t)=>Object.assign(e,t)),o)};const mg=function(e,t){const n=["frame_parent","frame_inherit"];const s=cr(t);n.forEach((e=>delete s[e]));const r=e.file_frames;e.file_frames=null;const o=cr(e);e.file_frames=r;delete o.file_frames;Object.assign(o,t);return o};const gg=e=>{const t={...e};delete t.file_frames;return t};const pg=e=>{if(!e.file_frames||!e.file_frames.length){return[e]}return[gg(e),...e.file_frames]};const _g=(e,t)=>pg(e).map(((e,n)=>e.frame_classes&&e.frame_classes.includes(t)?n:undefined)).filter((e=>e!==undefined)).map((t=>ug(e,t)));const hg=Object.freeze({__proto__:null,flattenFrame:ug,getFramesByClassName:_g,mergeFrame:mg});const vg=Object.keys(yt);const bg=(e,t,n=a)=>{let s=e.vertices_coords.length;return t.vertices_coords.map((t=>e.vertices_coords.map((e=>I(e,t)<n)).map(((e,t)=>e?t:undefined)).filter((e=>e!==undefined)).shift())).map((e=>e===undefined?s++:e))};const yg=(e,t)=>{const n={};const s={};for(let t=0;t<e.edges_vertices.length;t+=1){s[`${e.edges_vertices[t][0]} ${e.edges_vertices[t][1]}`]=t;s[`${e.edges_vertices[t][1]} ${e.edges_vertices[t][0]}`]=t}for(let e=0;e<t.edges_vertices.length;e+=1){const r=s[`${t.edges_vertices[e][0]} ${t.edges_vertices[e][1]}`];if(r!==undefined){n[e]=r}}return n};const Eg=(e,t,n,s)=>n.forEach((n=>t[n].forEach((t=>e[t].forEach(((r,o)=>r.forEach(((r,c)=>{e[t][o][c]=s[n][r]}))))))));const Ag=(e,t,n=a)=>{const s={};const r={};const o={};const c=[e,t].map((e=>e.vertices_coords)).map((e=>e&&e.length?e[0].length:0)).reduce(((e,t)=>Math.max(e,t)));e.vertices_coords=e.vertices_coords.map((e=>Z(c,e)));vg.forEach((e=>{s[e]=St(t,`${e}_`);r[e]=Pt(t,`_${e}`)}));vg.forEach((t=>s[t].filter((t=>!e[t])).forEach((t=>{e[t]=[]}))));o.vertices=bg(e,t,n);Eg(t,r,["vertices"],o);const i=Yt.edges(e);o.edges=Array.from(Array(Yt.edges(t))).map(((e,t)=>i+t));const f=yg(e,t);Object.keys(f).forEach((e=>{o.edges[e]=f[e]}));const l=Yt.faces(e);o.faces=Array.from(Array(Yt.faces(t))).map(((e,t)=>l+t));Eg(t,r,["edges","faces"],o);vg.forEach((n=>s[n].forEach((s=>t[s].forEach(((t,r)=>{const c=o[n][r];e[s][c]=t}))))));return o};const xg=Object.freeze({__proto__:null,joinGraphs:Ag});const Mg=(e,t=a)=>zs(e,t).map((t=>e.vertices_coords.map((e=>e[0]>t.min[0]&&e[1]>t.min[1]&&e[0]<t.max[0]&&e[1]<t.max[1]))));const kg=({vertices_coords:e,edges_vertices:t,edges_coords:n},s=a)=>{const r=zs({vertices_coords:e,edges_vertices:t,edges_coords:n},s);const o=t.map((()=>[]));for(let e=0;e<t.length-1;e+=1){for(let n=e+1;n<t.length;n+=1){const t=(r[e].max[0]<r[n].min[0]||r[n].max[0]<r[e].min[0])&&(r[e].max[1]<r[n].min[1]||r[n].max[1]<r[e].min[1]);o[e][n]=!t;o[n][e]=!t}}for(let e=0;e<t.length;e+=1){o[e][e]=true}return o};const wg=Object.freeze({__proto__:null,getEdgesEdgesOverlapingSpans:kg,getEdgesVerticesOverlappingSpan:Mg});const Og=(e,t=a)=>{if(!e.vertices_coords||!e.edges_vertices||!e.edges_vertices.length){return{edges_line:[],lines:[]}}const n=Ps(e);const s=Ns(e).map(h);const r=s.map(((e,t)=>({vector:e,origin:n[t][0]})));const o=r.map((e=>mr(e,[0,0,0],dt,t)));const c=o.map((e=>m(e)));const i=rn(c,t);const f=i.map((e=>e.map((e=>s[e])))).map((e=>on(e,t)));const l=f.map(((e,t)=>e.map((e=>e.map((e=>i[t][e]))))));const d=l.flatMap((e=>e.map((e=>e[0])).map((e=>({vector:s[e],origin:o[e]})))));const u=[];let g=0;l.forEach((e=>e.forEach((e=>{e.forEach((e=>{u[e]=g}));g+=1}))));return{lines:d,edges_line:u}};const jg=Object.freeze({__proto__:null,getEdgesLine:Og});const Fg=({normal:e,distance:t})=>t<0?{normal:D(e),distance:-t}:{normal:e,distance:t};const Cg=(e,t=a)=>{const{lines:n}=Og(e,t);const s=n.map(An).map(Fg);const r=n.map((({vector:e,origin:t})=>le(e,t)));const o=r.map((e=>n.map((({vector:t,origin:n})=>ne(e,t,n)))));const c=o.map((e=>e.map((e=>e.vector[0]<0?{vector:D(e.vector),origin:e.origin}:e)))).map((e=>e.map(An).map(Fg))).map((e=>e.concat(s)));const i=c.map((e=>rn(e.map((e=>e.distance)))));const f=i.map(((e,n)=>e.map((e=>e.map((e=>c[n][e].normal)))).map((e=>on(e,t)))));const l=f.map(((e,t)=>e.flatMap(((e,n)=>e.map((e=>e.map((e=>i[t][n][e]))))))));const d=l.map((e=>(e.length-n.length)/n.length));return d.map(((e,t)=>({error:e,i:t}))).map((e=>({line:n[e.i],error:e.error}))).sort(((e,t)=>e.error-t.error))};const Sg=(e,t=a)=>Cg(e,t)[0];const Pg=Object.freeze({__proto__:null,findSymmetryLine:Sg,findSymmetryLines:Cg});const Ng=e=>Array.from(Array(e.length-2)).map(((t,n)=>[e[0],e[n+1],e[n+2]]));const Vg=({faces_vertices:e})=>e.flatMap((e=>e.length<4?[e]:Ng(e)));const zg=e=>e.length===3?[e]:Array.from(Array(Math.floor(e.length/3))).map(((t,n)=>[n*3+0,n*3+1,n*3+2].map((t=>e[t]))));const $g=({vertices_coords:e,faces_vertices:t},s)=>{if(!e||!e.length){throw new Error(n.nonConvexTriangulation)}const r=e[0].length;return t.map((t=>t.flatMap((t=>e[t])))).map((e=>s(e,null,r))).map(((e,n)=>e.map((e=>t[n][e])))).flatMap((e=>zg(e)))};const Tg=e=>{if(!e.edges_vertices){e.edges_vertices=[]}const t=bs(e);let n=e.edges_vertices.length;const s=[];e.faces_edges=e.faces_vertices.map((e=>e.map(((e,r,o)=>{const c=[e,o[(r+1)%o.length]];const a=c.join(" ");if(a in t){return t[a]}s.push(c);t[a]=n;t[c.reverse().join(" ")]=n;return n++}))));const r=s.length;e.edges_vertices.push(...s);if(e.edges_assignment){e.edges_assignment.push(...Array(r).fill("J"))}if(e.edges_foldAngle){e.edges_foldAngle.push(...Array(r).fill(0))}if(e.vertices_vertices){delete e.vertices_vertices}if(e.vertices_edges){delete e.vertices_edges}if(e.vertices_faces){delete e.vertices_faces}if(e.edges_faces){delete e.edges_faces}if(e.faces_faces){delete e.faces_faces}if(e.faceOrders){delete e.faceOrders}return e};const Lg=({faces_vertices:e})=>{let t=0;return e.map((e=>Math.max(3,e.length))).map((e=>Array.from(Array(e-2)).map((()=>t++))))};const Bg=(e,t)=>{if(!e.faces_vertices){return{}}const n=e.edges_vertices?e.edges_vertices.length:0;const s=Lg(e);e.faces_vertices=t?$g(e,t):Vg(e);Tg(e);const r=Array.from(Array(e.edges_vertices.length-n)).map(((e,t)=>n+t));return{faces:{map:s},edges:{new:r}}};const Ig=Object.freeze({__proto__:null,triangulate:Bg,triangulateConvexFacesVertices:Vg,triangulateNonConvexFacesVertices:$g});const Ug=Object.freeze([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);const Rg=e=>Ug.map(((t,n)=>Math.abs(t-e[n])<a)).reduce(((e,t)=>e&&t),true);const Dg=(e,t)=>[e[0]*t[0]+e[4]*t[1]+e[8]*t[2]+e[12],e[1]*t[0]+e[5]*t[1]+e[9]*t[2]+e[13],e[2]*t[0]+e[6]*t[1]+e[10]*t[2]+e[14]];const qg=(e,t,n)=>({vector:[e[0]*t[0]+e[4]*t[1]+e[8]*t[2],e[1]*t[0]+e[5]*t[1]+e[9]*t[2],e[2]*t[0]+e[6]*t[1]+e[10]*t[2]],origin:[e[0]*n[0]+e[4]*n[1]+e[8]*n[2]+e[12],e[1]*n[0]+e[5]*n[1]+e[9]*n[2]+e[13],e[2]*n[0]+e[6]*n[1]+e[10]*n[2]+e[14]]});const Wg=(e,t)=>[e[0]*t[0]+e[4]*t[1]+e[8]*t[2]+e[12]*t[3],e[1]*t[0]+e[5]*t[1]+e[9]*t[2]+e[13]*t[3],e[2]*t[0]+e[6]*t[1]+e[10]*t[2]+e[14]*t[3],e[3]*t[0]+e[7]*t[1]+e[11]*t[2]+e[15]*t[3],e[0]*t[4]+e[4]*t[5]+e[8]*t[6]+e[12]*t[7],e[1]*t[4]+e[5]*t[5]+e[9]*t[6]+e[13]*t[7],e[2]*t[4]+e[6]*t[5]+e[10]*t[6]+e[14]*t[7],e[3]*t[4]+e[7]*t[5]+e[11]*t[6]+e[15]*t[7],e[0]*t[8]+e[4]*t[9]+e[8]*t[10]+e[12]*t[11],e[1]*t[8]+e[5]*t[9]+e[9]*t[10]+e[13]*t[11],e[2]*t[8]+e[6]*t[9]+e[10]*t[10]+e[14]*t[11],e[3]*t[8]+e[7]*t[9]+e[11]*t[10]+e[15]*t[11],e[0]*t[12]+e[4]*t[13]+e[8]*t[14]+e[12]*t[15],e[1]*t[12]+e[5]*t[13]+e[9]*t[14]+e[13]*t[15],e[2]*t[12]+e[6]*t[13]+e[10]*t[14]+e[14]*t[15],e[3]*t[12]+e[7]*t[13]+e[11]*t[14]+e[15]*t[15]];const Gg=e=>{const t=e[10]*e[15]-e[11]*e[14];const n=e[9]*e[15]-e[11]*e[13];const s=e[9]*e[14]-e[10]*e[13];const r=e[8]*e[15]-e[11]*e[12];const o=e[8]*e[14]-e[10]*e[12];const c=e[8]*e[13]-e[9]*e[12];return e[0]*(e[5]*t-e[6]*n+e[7]*s)-e[1]*(e[4]*t-e[6]*r+e[7]*o)+e[2]*(e[4]*n-e[5]*r+e[7]*c)-e[3]*(e[4]*s-e[5]*o+e[6]*c)};const Hg=e=>{const t=Gg(e);if(Math.abs(t)<1e-6||Number.isNaN(t)||!Number.isFinite(e[12])||!Number.isFinite(e[13])||!Number.isFinite(e[14])){return undefined}const n=e[10]*e[15]-e[11]*e[14];const s=e[9]*e[15]-e[11]*e[13];const r=e[9]*e[14]-e[10]*e[13];const o=e[8]*e[15]-e[11]*e[12];const c=e[8]*e[14]-e[10]*e[12];const a=e[8]*e[13]-e[9]*e[12];const i=e[6]*e[15]-e[7]*e[14];const f=e[5]*e[15]-e[7]*e[13];const l=e[5]*e[14]-e[6]*e[13];const d=e[6]*e[11]-e[7]*e[10];const u=e[5]*e[11]-e[7]*e[9];const m=e[5]*e[10]-e[6]*e[9];const g=e[4]*e[15]-e[7]*e[12];const p=e[4]*e[14]-e[6]*e[12];const _=e[4]*e[11]-e[7]*e[8];const h=e[4]*e[10]-e[6]*e[8];const v=e[4]*e[13]-e[5]*e[12];const b=e[4]*e[9]-e[5]*e[8];const y=[+(e[5]*n-e[6]*s+e[7]*r),-(e[1]*n-e[2]*s+e[3]*r),+(e[1]*i-e[2]*f+e[3]*l),-(e[1]*d-e[2]*u+e[3]*m),-(e[4]*n-e[6]*o+e[7]*c),+(e[0]*n-e[2]*o+e[3]*c),-(e[0]*i-e[2]*g+e[3]*p),+(e[0]*d-e[2]*_+e[3]*h),+(e[4]*s-e[5]*o+e[7]*a),-(e[0]*s-e[1]*o+e[3]*a),+(e[0]*f-e[1]*g+e[3]*v),-(e[0]*u-e[1]*_+e[3]*b),-(e[4]*r-e[5]*c+e[6]*a),+(e[0]*r-e[1]*c+e[2]*a),-(e[0]*l-e[1]*p+e[2]*v),+(e[0]*m-e[1]*h+e[2]*b)];const E=1/t;return y.map((e=>e*E))};const Jg=Object.freeze([1,0,0,0,0,1,0,0,0,0,1,0]);const Qg=(e=0,t=0,n=0)=>[...Jg,e,t,n,1];const Zg=(e,t,n,s,r)=>{const o=Qg(...t);const c=Math.cos(e);const a=Math.sin(e);o[n*4+n]=c;o[n*4+s]=(r?+1:-1)*a;o[s*4+n]=(r?-1:+1)*a;o[s*4+s]=c;return o};const Yg=(e,t=[0,0,0])=>Zg(e,t,1,2,true);const Xg=(e,t=[0,0,0])=>Zg(e,t,0,2,false);const Kg=(e,t=[0,0,0])=>Zg(e,t,0,1,true);const ep=(e,t=[0,0,1],n=[0,0,0])=>{const s=[0,1,2].map((e=>n[e]||0));const[r,o,c]=Z(3,h(t));const a=Math.cos(e);const i=Math.sin(e);const f=1-a;const l=Qg(-s[0],-s[1],-s[2]);const d=Qg(s[0],s[1],s[2]);return Wg(d,Wg([f*r*r+a,f*o*r+c*i,f*c*r-o*i,0,f*r*o-c*i,f*o*o+a,f*c*o+r*i,0,f*r*c+o*i,f*o*c-r*i,f*c*c+a,0,0,0,0,1],l))};const tp=(e=[1,1,1],t=[0,0,0])=>[e[0],0,0,0,0,e[1],0,0,0,0,e[2],0,e[0]*-t[0]+t[0],e[1]*-t[1]+t[1],e[2]*-t[2]+t[2],1];const np=(e=1,t=[0,0,0])=>tp([e,e,e],t);const sp=(e,t=[0,0])=>{const n=le(e,t);return[n[0],n[1],0,0,n[2],n[3],0,0,0,0,1,0,n[4],n[5],0,1]};const rp=(e,t,n,s)=>{const r=Math.tan(Math.PI*.5-.5*e);const o=1/(n-s);return[r/t,0,0,0,0,r,0,0,0,0,(n+s)*o,-1,0,0,n*s*o*2,0]};const op=(e,t,n,s,r,o)=>[2/(t-s),0,0,0,0,2/(e-n),0,0,0,0,2/(r-o),0,(s+t)/(s-t),(n+e)/(n-e),(r+o)/(r-o),1];const cp=(e,t,n)=>{const s=b(j(e,t));const r=b(B(n,s));const o=b(B(s,r));return[r[0],r[1],r[2],0,o[0],o[1],o[2],0,s[0],s[1],s[2],0,e[0],e[1],e[2],1]};const ap=Object.freeze({__proto__:null,determinant4:Gg,identity4x4:Ug,invertMatrix4:Hg,isIdentity4x4:Rg,makeLookAtMatrix4:cp,makeMatrix4ReflectZ:sp,makeMatrix4Rotate:ep,makeMatrix4RotateX:Yg,makeMatrix4RotateY:Xg,makeMatrix4RotateZ:Kg,makeMatrix4Scale:tp,makeMatrix4Translate:Qg,makeMatrix4UniformScale:np,makeOrthographicMatrix4:op,makePerspectiveMatrix4:rp,multiplyMatrices4:Wg,multiplyMatrix4Line3:qg,multiplyMatrix4Vector3:Dg});const ip=(e,t)=>{const n=B(e,t);const s=[n[0],n[1],n[2],F(e,t)];s[3]+=m(s);return h(s)};const fp=e=>Wg([e[3],e[2],-e[1],e[0],-e[2],e[3],e[0],e[1],e[1],-e[0],e[3],e[2],-e[0],-e[1],-e[2],e[3]],[e[3],e[2],-e[1],-e[0],-e[2],e[3],e[0],-e[1],e[1],-e[0],e[3],-e[2],e[0],e[1],e[2],e[3]]);const lp=Object.freeze({__proto__:null,matrix4FromQuaternion:fp,quaternionFromTwoVectors:ip});const dp=({vertices_coords:e,faces_vertices:t},n=a)=>{const s=is({vertices_coords:e,faces_vertices:t});const r=t.map((()=>[]));for(let e=0;e<t.length-1;e+=1){for(let o=e+1;o<t.length;o+=1){if(e===o){continue}if(H(s[e],s[o],n)){r[e].push(o);r[o].push(e)}}}const o=kl(r);const c=nr(o).map((e=>typeof e==="number"?[e]:e));const i=c.map((e=>s[e[0]]));const f=[];c.forEach(((e,t)=>e.forEach((e=>{f[e]=S(s[e],i[t])>0}))));const l=t.map((t=>e[t[0]])).map((e=>Z(3,e)));const d=c.map(((e,t)=>e.map((e=>S(i[t],l[e])))));const u=d.map(((e,t)=>rn(e).map((e=>e.map((e=>c[t][e]))))));const m=u.flatMap(((e,t)=>e.map((()=>[...i[t]]))));const g=u.flat();const p=g.map((e=>e[0])).map((e=>l[e])).map(((e,t)=>S(m[t],e))).map(((e,t)=>A(m[t],e)));const _=g.map(((e,t)=>({normal:m[t],origin:p[t]})));return g.map(((e,t)=>({faces:e,facesAligned:e.map((e=>f[e])),plane:_[t]})))};const up=(e,t,n,s)=>{const r=e.vertices_coords.map((e=>Z(3,e)));const o=t.map((t=>t.faces.map(((n,s)=>t.facesAligned[s]?e.faces_vertices[n]:e.faces_vertices[n].slice().reverse())).map((e=>e.map((e=>r[e])))).map((e=>Je(e,s)))));const c=[];const a=o.map(((e,t)=>e.map((e=>e.map((e=>Dg(n[t],e))).map((e=>[e[0],e[1]]))))));t.map((e=>e.faces)).forEach(((e,t)=>e.forEach(((e,n)=>{c[e]=a[t][n]}))));return c};const mp=({vertices_coords:e,faces_vertices:t,faces_faces:n},s=a)=>{if(!n){n=Bs({faces_vertices:t})}const r=dp({vertices_coords:e,faces_vertices:t},s);const o=[];r.forEach((e=>e.facesAligned.forEach(((t,n)=>{o[e.faces[n]]=t}))));const c=[0,0,1];const i=r.map((e=>e.plane.normal)).map((e=>{const t=F(e,c);return Math.abs(t+1)<.01?ep(Math.PI,[1,0,0]):fp(ip(e,c))}));const f=up({vertices_coords:e,faces_vertices:t},r,i,s);const l=r.map((e=>e.faces)).map((e=>zo(n,e)));const d=l.map((e=>kl(e)));const u=d.map((e=>nr(e).map((e=>e.constructor===Array?e:[e]))));const m=d.map((e=>{const t=e.map(((e,t)=>t));return e.map((n=>t.filter((t=>e[t]!==n))))}));const g=t.map((()=>[]));m.forEach((e=>e.forEach(((e,t)=>{for(let n=0;n<e.length;n+=1){const r=e[n];const o=[t,r].map((e=>f[e]));const c=Er(...o,s);if(c){g[t][r]=true;g[r][t]=true}}}))));const p=m.map((e=>e.map(((e,t)=>e.filter((e=>g[t][e]))))));const _=[];p.forEach(((e,t)=>{_[t]=[];e.forEach(((e,n)=>{const s=d[t][n];const r=e.map((e=>d[t][e]));if(!_[t][s]){_[t][s]=new Set}r.forEach((e=>{if(!_[t][e]){_[t][e]=new Set}}));r.forEach((e=>{_[t][s].add(e);_[t][e].add(s)}))}))}));_.forEach(((e,t)=>e.forEach(((e,n)=>{_[t][n]=[...e]}))));const h=_.map((e=>nr(kl(e)).map((e=>e.constructor===Array?e:[e]))));const v=h.flatMap(((e,t)=>e.map((()=>t))));const b=r.map(((e,t)=>h[t].map((e=>e.flatMap((e=>u[t][e]))))));const y=b.flatMap(((e,t)=>e.map((e=>({faces:e,facesAligned:e.map((e=>o[e])),plane:r[t].plane})))));const E=v.map((e=>r[e].plane));const A=v.map((e=>i[e]));const x=y.map((e=>e.faces));const M=nr(x);return{sets_faces:x,sets_plane:E,sets_transformXY:A,faces_set:M,faces_winding:o}};const gp=Object.freeze({__proto__:null,coplanarFacesGroups:dp,coplanarOverlappingFacesGroups:mp});const pp=e=>e.map((e=>e.map(((e,t)=>e===true?t:undefined)).filter((e=>e!==undefined))));const _p=({vertices_coords:e,edges_vertices:t,edges_coords:n,edges_boundingBox:s},r=a)=>{if(!n){n=Ps({vertices_coords:e,edges_vertices:t})}if(!s){s=zs({vertices_coords:e,edges_vertices:t,edges_coords:n})}const o=t.map(((e,t)=>t)).shift();const c=Array.from(Array(n.length)).map((()=>[]));if(o===undefined){return pp(c)}const i=s[o].min.length;for(let e=0;e<n.length-1;e+=1){if(!s[e]){continue}for(let t=e+1;t<n.length;t+=1){if(!s[t]){continue}let n=true;for(let o=0;o<i;o+=1){if(!et(s[e].min[o],s[t].min[o],r)||!et(s[e].max[o],s[t].max[o],r)){n=false}}c[e][t]=n;c[t][e]=n}}for(let e=0;e<n.length-1;e+=1){for(let t=e+1;t<n.length;t+=1){if(!c[e][t]){continue}const s=nt(n[e][0],n[t][0],r)&&nt(n[e][1],n[t][1],r);const o=nt(n[e][0],n[t][1],r)&&nt(n[e][1],n[t][0],r);const a=s||o;c[e][t]=a;c[t][e]=a}}return pp(c)};const hp=({vertices_coords:e,edges_vertices:t,edges_vector:n,edges_faces:s,faces_vertices:r},o=a)=>{if(!n){n=Ns({vertices_coords:e,edges_vertices:t})}const c=t.map((t=>e[t[0]]));const i=t.map((()=>Array.from(Array(r.length))));s.forEach(((e,t)=>e.forEach((e=>{i[t][e]=false}))));const f=t.map((t=>t.map((t=>e[t]))));const l=r.map((t=>t.map((t=>e[t]))));El({vertices_coords:e,faces_vertices:r}).map(((e,t)=>!e?t:undefined)).filter((e=>e!==undefined)).forEach((e=>l[e].reverse()));const d=zs({edges_coords:f});const u=l.map((e=>Xe(e)));for(let e=0;e<i.length;e+=1){if(!d[e]){continue}for(let t=0;t<i[e].length;t+=1){if(i[e][t]===false){continue}if(!u[t]){continue}if(!Ar(u[t],d[e],o)){i[e][t]=false;continue}}}const m=_p({vertices_coords:e,edges_vertices:t,edges_coords:f,edges_boundingBox:d});const g={};for(let e=0;e<i.length;e+=1){if(g[e]){continue}if(!f[e]){continue}for(let t=0;t<i[e].length;t+=1){if(i[e][t]!==undefined){continue}if(!l[t]){continue}const s=f[e].map((e=>yr(l[t],e,rt,o))).reduce(((e,t)=>e||t),false);if(s){i[e][t]=true;continue}const r=Gr(l[t],{vector:n[e],origin:c[e]},lt,lt,o);if(r){i[e][t]=true;continue}i[e][t]=false}m[e].forEach((t=>{i[t]=i[e].slice();g[t]=true}))}return i.map((e=>e.map(((e,t)=>e?t:undefined)).filter((e=>e!==undefined))))};const vp=Object.freeze({__proto__:null,getEdgesFacesOverlap:hp});const bp=({vertices_coords:e,faces_vertices:t},n=a)=>{const s=Is({vertices_coords:e,faces_vertices:t});const r=s.map((e=>Xe(e)));const o=[];const c=[];Vr({vertices_coords:e,faces_vertices:t},0,n).forEach((e=>{e.start.forEach((e=>{c[e]=true}));c.forEach(((t,c)=>e.start.forEach((e=>{if(c===e){return}if(!Ar(r[c],r[e],n)||!Er(s[c],s[e],n)){return}if(!o[c]){o[c]=[]}if(!o[e]){o[e]=[]}o[c][e]=true;o[e][c]=true}))));e.end.forEach((e=>delete c[e]))}));return o.map((e=>Object.keys(e).map((e=>parseInt(e,10)))))};const yp=Object.freeze({__proto__:null,getFacesFacesOverlap:bp});const Ep=(e,t,n,s=a)=>{e.faces_vertices[t].map((t=>e.vertices_coords[t])).map((e=>n.map((t=>nt(e,t,s)))));e.faces_vertices[t].map((t=>e.vertices_coords[t])).map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>En(...e))).map((e=>n.map((t=>hr(e,t,lt,s)))))};const Ap=(e,t,n=a)=>{const s=O(t[1],t[0]);const r=t[0];const o=So(e,t,n);const c=o.map((t=>e.faces_vertices[t].map((t=>e.vertices_coords[t])))).map((e=>gd(e,{vector:s,origin:r},st,ft,n)));const i=[];o.forEach(((e,t)=>{if(c[t]){i[e]=c[t]}}));return i};const xp=(e,t,n=a)=>{const s=Ap(e,t,n);console.log("facesSegment",s);const r=s.map(((t,s)=>Ep(e,s,t,n)));return r};const Mp={count:Yt,countImplied:Wn,validate:Io,clean:or,populate:so,remove:mn,replace:fn,removePlanarVertex:Wd,removePlanarEdge:Vd,splitEdge:go,splitFace:Vo,flatFold:pu,addPlanarSegment:Cd,addPlanarSegmentNew:xp,planarize:eo,connectedComponents:kl,clone:cr,...$m,...hg,...bt,...It,...Go,...xd,...lr,...xg,...qs,...rr,...Fr,...ls,...Sl,...wg,...Lo,...$r,...Pg,...Ml,...Ht,...Ig,...Qn,...an,...Qt,...qd,...un,...sc,...vn,...as,...Ys,...Hs,...Rd,...jg,...gp,...ec,...Qo,...Al,...Od,...Yr,...vp,...No,...yp,...Lr};const kp=e=>{if(typeof e!=="object"){return typeof e}if(e.radius!==undefined){return"circle"}if(e.min&&e.max&&e.span){return"box"}if(typeof e[0]==="number"){return"vector"}if(e.vector!==undefined&&e.origin!==undefined){return"line"}if(e[0]!==undefined&&e[0].length&&typeof e[0][0]==="number"){return e.length===2?"segment":"polygon"}return"object"};const wp={...d,...gt,...Be,...Mn,...Ne,...rg,...Kn,...rs,typeof:kp};const Op={...X,...de,...Fe,...ap,...lp};const jp=e=>e.concat(e.slice(0,-1).reverse());const Fp=(e=[],t=false,n=a)=>{if(e.length<2){return[]}const s=ss(e,n).map((e=>e.length===1?e:jp(e))).flat();s.push(s[0]);const r=[s[0]];let o=1;const c={"-1":()=>r.pop(),1:e=>{r.push(e);o+=1},undefined:()=>{o+=1}};c[0]=t?c["1"]:c["-1"];while(o<s.length){if(r.length<2){r.push(s[o]);o+=1;continue}const t=r[r.length-2];const a=r[r.length-1];const i=s[o];const f=In(...[t,a,i].map((t=>e[t])),n);c[f](i)}r.pop();return r};const Cp=Object.freeze({__proto__:null,convexHull:Fp});const Sp=(e,t,n)=>{const s=e.map(((e,t)=>({vector:n[t],origin:e}))).map(((e,t,n)=>Br(e,n[(t+1)%n.length],it,it)));const r=t.map(((e,t)=>mr(e,s[t],(e=>e))));if(e.length===3){return e.map((e=>({type:"skeleton",points:[e,s[0]]}))).concat([{type:"perpendicular",points:[r[0],s[0]]}])}const o=s.map(((e,t)=>I(e,r[t])));let c=0;o.forEach(((e,t)=>{if(e<o[c]){c=t}}));const a=[{type:"skeleton",points:[e[c],s[c]]},{type:"skeleton",points:[e[(c+1)%e.length],s[c]]},{type:"perpendicular",points:[r[c],s[c]]}];const i=Cn(D(t[(c+t.length-1)%t.length].vector),t[(c+1)%t.length].vector);const f=c===e.length-1;e.splice(c,2,s[c]);t.splice(c,1);n.splice(c,2,i);if(f){e.splice(0,1);n.splice(0,1);t.push(t.shift())}return a.concat(Sp(e,t,n))};const Pp=e=>{const t=e.map(((e,t,n)=>[e,n[(t+1)%n.length]])).map((e=>({vector:w(e[1],e[0]),origin:e[0]})));const n=e.map(((e,t,n)=>[(t-1+n.length)%n.length,t,(t+1)%n.length].map((e=>n[e])))).map((e=>[w(e[0],e[1]),w(e[2],e[1])])).map((e=>Cn(...e)));return Sp([...e],t,n)};const Np={...Cp,...Bd,..._r,...Ke,...Un,straightSkeleton:Pp};const Vp=(e,t,n=a)=>{const s=Math.min(e.min.length,t.min.length);for(let r=0;r<s;r+=1){if(t.min[r]<e.min[r]-n||t.max[r]>e.max[r]+n){return false}}return true};const zp=(e,t,n=st)=>{const s=e.map((e=>yr(t,e,n))).reduce(((e,t)=>e||t),false);const r=t.map((e=>yr(t,e,n))).reduce(((e,t)=>e&&t),true);return!s&&r};const $p=Object.freeze({__proto__:null,enclosingBoundingBoxes:Vp,enclosingPolygonPolygon:zp});const Tp=(e,t)=>{const n=e.map(((e,n)=>{const s=hr(t,e,ot);return{point:s?e:null,at_index:n}})).filter((e=>e.point!=null));const s=e.map(((e,t,n)=>({vector:w(e,n[(t+1)%n.length]),origin:n[(t+1)%n.length]}))).map(((e,n)=>({point:Br(t,e,ct,lt),at_index:n}))).filter((e=>e.point!=null));if(s.length===2){const t=s.slice().sort(((e,t)=>e.at_index-t.at_index));const n=e.slice(t[1].at_index+1).concat(e.slice(0,t[0].at_index+1));n.push(t[0].point);n.push(t[1].point);const r=e.slice(t[0].at_index+1,t[1].at_index+1);r.push(t[1].point);r.push(t[0].point);return[n,r]}if(s.length===1&&n.length===1){n[0].type="v";s[0].type="e";const t=n.concat(s).sort(((e,t)=>e.at_index-t.at_index));const r=e.slice(t[1].at_index+1).concat(e.slice(0,t[0].at_index+1));if(t[0].type==="e"){r.push(t[0].point)}r.push(t[1].point);const o=e.slice(t[0].at_index+1,t[1].at_index+1);if(t[1].type==="e"){o.push(t[1].point)}o.push(t[0].point);return[r,o]}if(n.length===2){const t=n.slice().sort(((e,t)=>e.at_index-t.at_index));const s=e.slice(t[1].at_index).concat(e.slice(0,t[0].at_index+1));const r=e.slice(t[0].at_index,t[1].at_index+1);return[s,r]}return[e.slice()]};const Lp=Object.freeze({__proto__:null,splitConvexPolygon:Tp});const Bp=e=>e.charAt(0).toUpperCase()+e.slice(1);const Ip={polygon:ft,circle:st,line:ot,ray:at,segment:ft};const Up=(e,t,n=a)=>{const s=e=>e==="polygon"?"ConvexPolygon":Bp(e);const r=[e,t].map(kp);const o=[r,r.slice().reverse()].map((e=>e.map(s).join(""))).map((e=>Hr[`intersect${e}`]));const c=[e.domain,t.domain].map(((e,t)=>e||Ip[r[t]]));const i=[[e,t,...c],[t,e,...c.slice().reverse()]];const f=o.map(((e,t)=>({fn:e,params:i[t]}))).filter((e=>e.fn)).shift();return f?f.fn(...f.params,n):undefined};const Rp={...$p,...xr,...Hr,..._d,...Lp,intersect:Up};const Dp={...wp,...Op,...Np,...Rp};const qp=e=>{let t=0;let n=0;for(let s=0;s<e.length;s+=1){if(e[s]==="M"||e[s]==="m"){t+=1}if(e[s]==="V"||e[s]==="v"){n+=1}}for(let s=0;s<e.length;s+=1){if(t>n&&(e[s]==="V"||e[s]==="v")){return s}if(n>t&&(e[s]==="M"||e[s]==="m")){return s}}return undefined};const Wp=(e,t,n=0)=>{const s=qp(t);if(s===undefined){return}const r=e[(s+1)%e.length];const o=e[(s+2)%e.length];const c=Math.PI*n;const a=-Math.cos(r)*Math.cos(o)+Math.sin(r)*Math.sin(o)*Math.cos(Math.PI-c);const i=Math.cos(Math.PI-c)-Math.sin(Math.PI-c)**2*Math.sin(r)*Math.sin(o)/(1-a);const f=-Math.acos(i)+Math.PI;return s%2===0?[f,c,f,c].map(((e,t)=>s===t?-e:e)):[c,f,c,f].map(((e,t)=>s===t?-e:e))};const Gp=({vertices_coords:e,vertices_edges:t,edges_vertices:n,edges_vectors:s},r)=>{if(!s){s=Ns({vertices_coords:e,edges_vertices:n})}if(!t){t=ds({edges_vertices:n})}const o=t[r].map((e=>s[e]));const c=Tn(o).map((e=>o[e]));return Qd(c)};const Hp=Object.freeze({__proto__:null,kawasakiSolutions:Gp});const Jp=e=>e.map(((e,t)=>t)).filter((t=>e[t]==="U"||e[t]==="u"));const Qp=e=>{const t=Jp(e);const n=Array.from(Array(2**t.length)).map(((e,t)=>t.toString(2))).map((e=>Array(t.length-e.length+1).join("0")+e)).map((e=>Array.from(e).map((e=>e==="0"?"V":"M"))));const s=n.map((n=>{const s=e.slice();t.forEach(((e,t)=>{s[e]=n[t]}));return s}));if(e.includes("B")||e.includes("b")){return s}const r=s.map((e=>e.filter((e=>e==="M"||e==="m")).length));const o=s.map((e=>e.filter((e=>e==="V"||e==="v")).length));return s.filter(((e,t)=>Math.abs(r[t]-o[t])===2))};const Zp=Object.freeze({__proto__:null,maekawaAssignments:Qp});const Yp=Object.assign(Object.create(null),{foldAngles4:Wp},Zd,Hp,Zp,su);const Xp=(e,t,n)=>{const s=e.createShader(n);e.shaderSource(s,t);e.compileShader(s);if(!e.getShaderParameter(s,e.COMPILE_STATUS)){throw new Error(e.getShaderInfoLog(s))}return s};const Kp=(e,t,n)=>{const s=e.createProgram();e.attachShader(s,t);e.attachShader(s,n);e.linkProgram(s);if(!e.getProgramParameter(s,e.LINK_STATUS)){throw new Error(e.getProgramInfoLog(s))}e.deleteShader(t);e.deleteShader(n);return s};const e_=(e,t,n)=>{const s=Xp(e,t,e.VERTEX_SHADER);const r=Xp(e,n,e.FRAGMENT_SHADER);return Kp(e,s,r)};const t_=(e,t)=>{const s=[null,"webgl","webgl2"];const r=window.devicePixelRatio||1;e.width=e.clientWidth*r;e.height=e.clientHeight*r;if(t){return{gl:e.getContext(s[t]),version:t}}const o=e.getContext(s[2]);if(o){return{gl:o,version:2}}const c=e.getContext(s[1]);if(c){return{gl:c,version:1}}throw new Error(n.noWebGL)};const n_=(e,t)=>{if(!e){return}const n=window.devicePixelRatio||1;const s=[t.clientWidth,t.clientHeight].map((e=>e*n));if(t.width!==s[0]||t.height!==s[1]){t.width=s[0];t.height=s[1]}e.viewport(0,0,e.canvas.width,e.canvas.height)};const s_=(e,t="perspective",n=45)=>{if(!e){return Ug}const s=.1;const r=20;const o=-100;const c=100;const a=[e.clientWidth,e.clientHeight];const i=Math.min(...a);const f=[0,1].map((e=>(a[e]-i)/i/2));const l=f.map((e=>e+.5));return t==="orthographic"?op(l[1],l[0],-l[1],-l[0],o,c):rp(n*(Math.PI/180),a[0]/a[1],s,r)};const r_=e=>{if(!e){return Ug}const t=Uo(e);if(!t){return Ug}const n=Math.max(...t.span);if(n===0){return Ug}const s=Z(3,P(t.min,t.max));const r=[n,0,0,0,0,n,0,0,0,0,n,0,...s,1];return Hg(r)||Ug};const o_=Object.freeze({__proto__:null,makeModelMatrix:r_,makeProjectionMatrix:s_,rebuildViewport:n_});const c_=(e,t,n,s)=>{switch(n){case"uniformMatrix4fv":e[n](t,false,s);break;default:e[n](t,s);break}};const a_=(e,t,n,s={})=>{e.useProgram(n.program);n.flags.forEach((t=>e.enable(t)));const r=e.getProgramParameter(n.program,e.ACTIVE_UNIFORMS);for(let t=0;t<r;t+=1){const r=e.getActiveUniform(n.program,t).name;const o=s[r];if(o){const t=e.getUniformLocation(n.program,r);c_(e,t,o.func,o.value)}}n.vertexArrays.forEach((t=>{e.bindBuffer(e.ARRAY_BUFFER,t.buffer);e.bufferData(e.ARRAY_BUFFER,t.data,e.STATIC_DRAW);e.vertexAttribPointer(t.location,t.length,t.type,false,0,0);e.enableVertexAttribArray(t.location)}));n.elementArrays.forEach((n=>{e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n.buffer);e.bufferData(e.ELEMENT_ARRAY_BUFFER,n.data,e.STATIC_DRAW);e.drawElements(n.mode,n.data.length,t===2?e.UNSIGNED_INT:e.UNSIGNED_SHORT,n.buffer)}));n.flags.forEach((t=>e.disable(t)))};const i_=(e,t)=>{t.vertexArrays.forEach((t=>e.disableVertexAttribArray(t.location)));t.vertexArrays.forEach((t=>e.deleteBuffer(t.buffer)));t.elementArrays.forEach((t=>e.deleteBuffer(t.buffer)));e.deleteProgram(t.program)};const f_=Object.freeze({__proto__:null,deallocProgram:i_,drawProgram:a_});const l_={B:[.5,.5,.5],b:[.5,.5,.5],V:[.2,.4,.6],v:[.2,.4,.6],M:[.75,.25,.15],m:[.75,.25,.15],F:[.3,.3,.3],f:[.3,.3,.3],J:[.3,.2,0],j:[.3,.2,0],C:[.5,.8,.1],c:[.5,.8,.1],U:[.6,.25,.9],u:[.6,.25,.9]};const d_={B:[0,0,0],b:[0,0,0],V:[.2,.5,.8],v:[.2,.5,.8],M:[.75,.25,.15],m:[.75,.25,.15],F:[.75,.75,.75],f:[.75,.75,.75],J:[1,.75,.25],j:[1,.75,.25],C:[.5,.8,.1],c:[.5,.8,.1],U:[.6,.25,.9],u:[.6,.25,.9]};const u_=e=>e!==undefined&&e.constructor===Array?e.slice(0,3):Gc(e).slice(0,3).map((e=>e/255));const m_=(e,t={})=>{const n=e.vertices_coords.map((e=>[...e].concat(Array(3-e.length).fill(0))));const s=fs(e);const r=n.map(((e,t)=>t%3)).map((e=>[e===0?1:0,e===1?1:0,e===2?1:0]));const o=e.faces_edges.map((t=>t.map((t=>e.edges_assignment[t])).map((e=>e==="J"||e==="j"))));if(!t.showTrianglulation){for(let e=0;e<o.length;e+=1){if(o[e][0]){r[e*3+0][2]=r[e*3+1][2]=100}if(o[e][1]){r[e*3+1][0]=r[e*3+2][0]=100}if(o[e][2]){r[e*3+0][1]=r[e*3+2][1]=100}}}return{vertices_coords:n,vertices_normal:s,vertices_barycentric:r}};const g_=(e,t)=>{if(!e||!e.vertices_coords||!e.edges_vertices){return[]}const n=t&&t.dark?l_:d_;const s={...n,...t};const r=e.vertices_coords.map((e=>[...e].concat(Array(3-e.length).fill(0))));const o=e.edges_vertices.flatMap((e=>e.map((e=>r[e])))).flatMap((e=>[e,e,e,e]));const c=Ns(e);const a=e.edges_assignment?e.edges_assignment.flatMap((e=>Array(8).fill(s[e]))):e.edges_vertices.flatMap((()=>Array(8).fill(s.U)));const i=c.flatMap((e=>[e,e,e,e,e,e,e,e]));const f=e.edges_vertices.flatMap((()=>[[1,0],[0,1],[-1,0],[0,-1],[1,0],[0,1],[-1,0],[0,-1]]));return{vertices_coords:o,vertices_color:a,verticesEdgesVector:i,vertices_vector:f}};const p_=Object.freeze({__proto__:null,makeFacesVertexData:m_,makeThickEdgesVertexData:g_});const __=(e,t,n,s={})=>{if(!n||!n.vertices_coords||!n.faces_vertices){return[]}const{vertices_coords:r,vertices_normal:o,vertices_barycentric:c}=m_(n,s);return[{location:e.getAttribLocation(t,"v_position"),buffer:e.createBuffer(),type:e.FLOAT,length:r.length?r[0].length:3,data:new Float32Array(r.flat())},{location:e.getAttribLocation(t,"v_normal"),buffer:e.createBuffer(),type:e.FLOAT,length:o.length?o[0].length:3,data:new Float32Array(o.flat())},{location:e.getAttribLocation(t,"v_barycentric"),buffer:e.createBuffer(),type:e.FLOAT,length:3,data:new Float32Array(c.flat())}].filter((e=>e.location!==-1))};const h_=(e,t=1,n={})=>{if(!n||!n.vertices_coords||!n.faces_vertices){return[]}return[{mode:e.TRIANGLES,buffer:e.createBuffer(),data:t===2?new Uint32Array(n.faces_vertices.flat()):new Uint16Array(n.faces_vertices.flat())}]};const v_=(e,t,n,s={})=>{if(!n||!n.vertices_coords||!n.edges_vertices){return[]}const{vertices_coords:r,vertices_color:o,verticesEdgesVector:c,vertices_vector:a}=g_(n,s.assignment_color);return[{location:e.getAttribLocation(t,"v_position"),buffer:e.createBuffer(),type:e.FLOAT,length:r.length?r[0].length:3,data:new Float32Array(r.flat())},{location:e.getAttribLocation(t,"v_color"),buffer:e.createBuffer(),type:e.FLOAT,length:o.length?o[0].length:3,data:new Float32Array(o.flat())},{location:e.getAttribLocation(t,"edge_vector"),buffer:e.createBuffer(),type:e.FLOAT,length:c.length?c[0].length:3,data:new Float32Array(c.flat())},{location:e.getAttribLocation(t,"vertex_vector"),buffer:e.createBuffer(),type:e.FLOAT,length:a.length?a[0].length:3,data:new Float32Array(a.flat())}].filter((e=>e.location!==-1))};const b_=(e,t=1,n={})=>{if(!n||!n.edges_vertices){return[]}const s=n.edges_vertices.map(((e,t)=>t*8)).flatMap((e=>[e+0,e+1,e+4,e+4,e+1,e+5,e+1,e+2,e+5,e+5,e+2,e+6,e+2,e+3,e+6,e+6,e+3,e+7,e+3,e+0,e+7,e+7,e+0,e+4]));return[{mode:e.TRIANGLES,buffer:e.createBuffer(),data:t===2?new Uint32Array(s):new Uint16Array(s)}]};const y_=Object.freeze({__proto__:null,makeFoldedElementArrays:h_,makeFoldedVertexArrays:__,makeThickEdgesElementArrays:b_,makeThickEdgesVertexArrays:v_});const E_=5e-6;const A_=(e,t=E_)=>{const n=JSON.parse(JSON.stringify(e));if(!n.edges_assignment){const t=Yt.edges(e)||Wn.edges(e);n.edges_assignment=Array(t).fill("U")}let s=[];if(n.faceOrders){s=jl(n)}else if(n.faces_layer){s=Fl(n)}const r=Bg(n);ar(n);if(r.faces){const e=nr(r.faces.map);e.forEach(((e,r)=>{const o=s[e];if(!o){return}n.faces_vertices[r].forEach((e=>{const s=y(o.vector,o.layer*t);n.vertices_coords[e]=x(Z(3,n.vertices_coords[e]),s)}))}))}return n};const x_=(e,{projectionMatrix:t,modelViewMatrix:n,frontColor:s,backColor:r,strokeWidth:o,opacity:c})=>({u_matrix:{func:"uniformMatrix4fv",value:Wg(t,n)},u_projection:{func:"uniformMatrix4fv",value:t},u_modelView:{func:"uniformMatrix4fv",value:n},u_frontColor:{func:"uniform3fv",value:u_(s)},u_backColor:{func:"uniform3fv",value:u_(r)},u_strokeWidth:{func:"uniform1f",value:o},u_opacity:{func:"uniform1f",value:c}});const M_=`#version 300 es\nuniform mat4 u_modelView;\nuniform mat4 u_matrix;\nuniform vec3 u_frontColor;\nuniform vec3 u_backColor;\nin vec3 v_position;\nin vec3 v_normal;\nout vec3 front_color;\nout vec3 back_color;\nvoid main () {\n\tgl_Position = u_matrix * vec4(v_position, 1);\n\tvec3 light = abs(normalize((vec4(v_normal, 1) * u_modelView).xyz));\n\tfloat brightness = 0.5 + light.x * 0.15 + light.z * 0.35;\n\tfront_color = u_frontColor * brightness;\n\tback_color = u_backColor * brightness;\n}\n`;const k_=`#version 300 es\nuniform mat4 u_matrix;\nuniform mat4 u_projection;\nuniform mat4 u_modelView;\nuniform float u_strokeWidth;\nin vec3 v_position;\nin vec3 v_color;\nin vec3 edge_vector;\nin vec2 vertex_vector;\nout vec3 blend_color;\nvoid main () {\n\tvec3 edge_norm = normalize(edge_vector);\n\t// axis most dissimilar to edge_vector\n\tvec3 absNorm = abs(edge_norm);\n\tvec3 xory = absNorm.x < absNorm.y ? vec3(1,0,0) : vec3(0,1,0);\n\tvec3 axis = absNorm.x > absNorm.z && absNorm.y > absNorm.z ? vec3(0,0,1) : xory;\n\t// two perpendiculars. with edge_vector these make basis vectors\n\tvec3 one = cross(axis, edge_norm);\n\tvec3 two = cross(one, edge_norm);\n\tvec3 displaceNormal = normalize(\n\t\tone * vertex_vector.x + two * vertex_vector.y\n\t);\n\tvec3 displace = displaceNormal * (u_strokeWidth * 0.5);\n\tgl_Position = u_matrix * vec4(v_position + displace, 1);\n\tblend_color = v_color;\n}\n`;const w_=`#version 300 es\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n#else\n  precision mediump float;\n#endif\nuniform float u_opacity;\nin vec3 front_color;\nin vec3 back_color;\nin vec3 barycentric;\nout vec4 outColor;\nfloat edgeFactor(vec3 barycenter) {\n\tvec3 d = fwidth(barycenter);\n\tvec3 a3 = smoothstep(vec3(0.0), d*3.5, barycenter);\n\treturn min(min(a3.x, a3.y), a3.z);\n}\nvoid main () {\n\tgl_FragDepth = gl_FragCoord.z;\n\tvec3 color = gl_FrontFacing ? front_color : back_color;\n\toutColor = vec4(mix(vec3(0.0), color, edgeFactor(barycentric)), u_opacity);\n}\n`;const O_=`#version 100\nprecision mediump float;\nuniform float u_opacity;\nvarying vec3 barycentric;\nvarying vec3 front_color;\nvarying vec3 back_color;\nvoid main () {\n\tvec3 color = gl_FrontFacing ? front_color : back_color;\n\tvec3 boundary = vec3(0.0, 0.0, 0.0)\n\t// gl_FragDepth = 0.5;\n\tgl_FragColor = any(lessThan(barycentric, vec3(0.02)))\n\t\t? vec4(boundary, u_opacity)\n\t\t: vec4(color, u_opacity);\n}\n`;const j_=`#version 100\nattribute vec3 v_position;\nattribute vec3 v_normal;\nuniform mat4 u_projection;\nuniform mat4 u_modelView;\nuniform mat4 u_matrix;\nuniform vec3 u_frontColor;\nuniform vec3 u_backColor;\nvarying vec3 normal_color;\nvarying vec3 front_color;\nvarying vec3 back_color;\nvoid main () {\n\tgl_Position = u_matrix * vec4(v_position, 1);\n\tvec3 light = abs(normalize((vec4(v_normal, 1) * u_modelView).xyz));\n\tfloat brightness = 0.5 + light.x * 0.15 + light.z * 0.35;\n\tfront_color = u_frontColor * brightness;\n\tback_color = u_backColor * brightness;\n}\n`;const F_=`#version 100\nattribute vec3 v_position;\nattribute vec3 v_color;\nattribute vec3 edge_vector;\nattribute vec2 vertex_vector;\nuniform mat4 u_matrix;\nuniform mat4 u_projection;\nuniform mat4 u_modelView;\nuniform float u_strokeWidth;\nvarying vec3 blend_color;\nvoid main () {\n\tvec3 edge_norm = normalize(edge_vector);\n\t// axis most dissimilar to edge_vector\n\tvec3 absNorm = abs(edge_norm);\n\tvec3 xory = absNorm.x < absNorm.y ? vec3(1,0,0) : vec3(0,1,0);\n\tvec3 axis = absNorm.x > absNorm.z && absNorm.y > absNorm.z ? vec3(0,0,1) : xory;\n\t// two perpendiculars. with edge_vector these make basis vectors\n\tvec3 one = cross(axis, edge_norm);\n\tvec3 two = cross(one, edge_norm);\n\tvec3 displaceNormal = normalize(\n\t\tone * vertex_vector.x + two * vertex_vector.y\n\t);\n\tvec3 displace = displaceNormal * (u_strokeWidth * 0.5);\n\tgl_Position = u_matrix * vec4(v_position + displace, 1);\n\tblend_color = v_color;\n}\n`;const C_=`#version 100\nprecision mediump float;\nuniform float u_opacity;\nvarying vec3 front_color;\nvarying vec3 back_color;\nvoid main () {\n\tvec3 color = gl_FrontFacing ? front_color : back_color;\n\tgl_FragColor = vec4(color, u_opacity);\n}\n`;const S_=`#version 300 es\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n#else\n  precision mediump float;\n#endif\nin vec3 blend_color;\nout vec4 outColor;\n \nvoid main() {\n\toutColor = vec4(blend_color.rgb, 1);\n}\n`;const P_=`#version 100\nattribute vec3 v_position;\nattribute vec3 v_normal;\nattribute vec3 v_barycentric;\nuniform mat4 u_projection;\nuniform mat4 u_modelView;\nuniform mat4 u_matrix;\nuniform vec3 u_frontColor;\nuniform vec3 u_backColor;\nvarying vec3 normal_color;\nvarying vec3 barycentric;\nvarying vec3 front_color;\nvarying vec3 back_color;\nvoid main () {\n\tgl_Position = u_matrix * vec4(v_position, 1);\n\tbarycentric = v_barycentric;\n\tvec3 light = abs(normalize((vec4(v_normal, 1) * u_modelView).xyz));\n\tfloat brightness = 0.5 + light.x * 0.15 + light.z * 0.35;\n\tfront_color = u_frontColor * brightness;\n\tback_color = u_backColor * brightness;\n}\n`;const N_=`#version 300 es\nuniform mat4 u_modelView;\nuniform mat4 u_matrix;\nuniform vec3 u_frontColor;\nuniform vec3 u_backColor;\nin vec3 v_position;\nin vec3 v_normal;\nin vec3 v_barycentric;\nin float v_rawEdge;\nout vec3 front_color;\nout vec3 back_color;\nout vec3 barycentric;\n// flat out int rawEdge;\nflat out int provokedVertex;\nvoid main () {\n\tgl_Position = u_matrix * vec4(v_position, 1);\n\tprovokedVertex = gl_VertexID;\n\tbarycentric = v_barycentric;\n\t// rawEdge = int(v_rawEdge);\n\tvec3 light = abs(normalize((vec4(v_normal, 1) * u_modelView).xyz));\n\tfloat brightness = 0.5 + light.x * 0.15 + light.z * 0.35;\n\tfront_color = u_frontColor * brightness;\n\tback_color = u_backColor * brightness;\n}\n`;const V_=`#version 300 es\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n#else\n  precision mediump float;\n#endif\nuniform float u_opacity;\nin vec3 front_color;\nin vec3 back_color;\nout vec4 outColor;\nvoid main () {\n\tgl_FragDepth = gl_FragCoord.z;\n\tvec3 color = gl_FrontFacing ? front_color : back_color;\n\toutColor = vec4(color, u_opacity);\n}\n`;const z_=`#version 100\nprecision mediump float;\nvarying vec3 blend_color;\nvoid main () {\n\tgl_FragColor = vec4(blend_color.rgb, 1);\n}\n`;const $_=(e,t=1,n={},s={})=>{const r=A_(n,s.layerNudge);const o=t===1?e_(e,j_,C_):e_(e,M_,V_);return{program:o,vertexArrays:__(e,o,r,s),elementArrays:h_(e,t,r),flags:[e.DEPTH_TEST],makeUniforms:x_}};const T_=(e,t=1,n={},s={})=>{const r=t===1?e_(e,F_,z_):e_(e,k_,S_);return{program:r,vertexArrays:v_(e,r,n,s),elementArrays:b_(e,t,n),flags:[e.DEPTH_TEST],makeUniforms:x_}};const L_=(e,t=1,n={},s={})=>{const r=A_(n,s.layerNudge);const o=t===1?e_(e,P_,O_):e_(e,N_,w_);return{program:o,vertexArrays:__(e,o,r,s),elementArrays:h_(e,t,r),flags:[e.DEPTH_TEST],makeUniforms:x_}};const B_=Object.freeze({__proto__:null,foldedFormEdges:T_,foldedFormFaces:$_,foldedFormFacesOutlined:L_});const I_=(e,t=1,n={},s={})=>{const r=[];if(s.faces!==false){if(s.outlines===false){r.push($_(e,t,n,s))}else{r.push(L_(e,t,n,s))}}if(s.edges===true){r.push(T_(e,t,n,s))}return r};const U_=e=>e.map((e=>[0,1].map((t=>e[t]||0))));const R_=(e,t)=>{if(!e||!e.vertices_coords||!e.edges_vertices){return[]}const n=t&&t.dark?l_:d_;const s={...n,...t};const r=U_(e.edges_vertices.flatMap((t=>t.map((t=>e.vertices_coords[t])))).flatMap((e=>[e,e])));const o=U_(Ns(e));const c=e.edges_assignment?e.edges_assignment.flatMap((e=>[s[e],s[e],s[e],s[e]])):e.edges_vertices.flatMap((()=>[s.U,s.U,s.U,s.U]));const a=o.flatMap((e=>[e,e,e,e]));const i=e.edges_vertices.flatMap((()=>[[1,0],[-1,0],[-1,0],[1,0]]));return{vertices_coords:r,vertices_color:c,verticesEdgesVector:a,vertices_vector:i}};const D_=Object.freeze({__proto__:null,makeCPEdgesVertexData:R_});const q_=(e,t,n,s)=>{if(!n||!n.vertices_coords||!n.edges_vertices){return[]}const{vertices_coords:r,vertices_color:o,verticesEdgesVector:c,vertices_vector:a}=R_(n,s);return[{location:e.getAttribLocation(t,"v_position"),buffer:e.createBuffer(),type:e.FLOAT,length:2,data:new Float32Array(r.flat())},{location:e.getAttribLocation(t,"v_color"),buffer:e.createBuffer(),type:e.FLOAT,length:o.length?o[0].length:2,data:new Float32Array(o.flat())},{location:e.getAttribLocation(t,"edge_vector"),buffer:e.createBuffer(),type:e.FLOAT,length:c.length?c[0].length:2,data:new Float32Array(c.flat())},{location:e.getAttribLocation(t,"vertex_vector"),buffer:e.createBuffer(),type:e.FLOAT,length:a.length?a[0].length:2,data:new Float32Array(a.flat())}].filter((e=>e.location!==-1))};const W_=(e,t=1,n={})=>{if(!n||!n.edges_vertices){return[]}const s=n.edges_vertices.map(((e,t)=>t*4)).flatMap((e=>[e+0,e+1,e+2,e+2,e+3,e+0]));return[{mode:e.TRIANGLES,buffer:e.createBuffer(),data:t===2?new Uint32Array(s):new Uint16Array(s)}]};const G_=e=>e.map((e=>[0,1].map((t=>e[t]||0))));const H_=(e,t,n)=>{if(!n||!n.vertices_coords){return[]}return[{location:e.getAttribLocation(t,"v_position"),buffer:e.createBuffer(),type:e.FLOAT,length:2,data:new Float32Array(G_(n.vertices_coords).flat())}].filter((e=>e.location!==-1))};const J_=(e,t=1,n={})=>{if(!n||!n.vertices_coords||!n.faces_vertices){return[]}return[{mode:e.TRIANGLES,buffer:e.createBuffer(),data:t===2?new Uint32Array(Vg(n).flat()):new Uint16Array(Vg(n).flat())}]};const Q_=Object.freeze({__proto__:null,makeCPEdgesElementArrays:W_,makeCPEdgesVertexArrays:q_,makeCPFacesElementArrays:J_,makeCPFacesVertexArrays:H_});const Z_=(e,{projectionMatrix:t,modelViewMatrix:n,cpColor:s,strokeWidth:r})=>({u_matrix:{func:"uniformMatrix4fv",value:Wg(t,n)},u_projection:{func:"uniformMatrix4fv",value:t},u_modelView:{func:"uniformMatrix4fv",value:n},u_cpColor:{func:"uniform3fv",value:u_(s)},u_strokeWidth:{func:"uniform1f",value:r}});const Y_=`#version 300 es\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n#else\n  precision mediump float;\n#endif\nin vec3 blend_color;\nout vec4 outColor;\nvoid main() {\n\toutColor = vec4(blend_color.rgb, 1);\n}\n`;const X_=`#version 100\nprecision mediump float;\nvarying vec3 blend_color;\nvoid main () {\n\tgl_FragColor = vec4(blend_color.rgb, 1);\n}\n`;const K_=`#version 300 es\nuniform mat4 u_matrix;\nuniform float u_strokeWidth;\nin vec2 v_position;\nin vec3 v_color;\nin vec2 edge_vector;\nin vec2 vertex_vector;\nout vec3 blend_color;\nvoid main () {\n\tfloat sign = vertex_vector[0];\n\tfloat halfWidth = u_strokeWidth * 0.5;\n\tvec2 side = normalize(vec2(edge_vector.y * sign, -edge_vector.x * sign)) * halfWidth;\n\tgl_Position = u_matrix * vec4(side + v_position, 0, 1);\n\tblend_color = v_color;\n}\n`;const eh=`#version 100\nuniform mat4 u_matrix;\nuniform float u_strokeWidth;\nattribute vec2 v_position;\nattribute vec3 v_color;\nattribute vec2 edge_vector;\nattribute vec2 vertex_vector;\nvarying vec3 blend_color;\nvoid main () {\n\tfloat sign = vertex_vector[0];\n\tfloat halfWidth = u_strokeWidth * 0.5;\n\tvec2 side = normalize(vec2(edge_vector.y * sign, -edge_vector.x * sign)) * halfWidth;\n\tgl_Position = u_matrix * vec4(side + v_position, 0, 1);\n\tblend_color = v_color;\n}\n`;const th=`#version 100\nuniform mat4 u_matrix;\nuniform vec3 u_cpColor;\nattribute vec2 v_position;\nvarying vec3 blend_color;\nvoid main () {\n\tgl_Position = u_matrix * vec4(v_position, 0, 1);\n\tblend_color = u_cpColor;\n}\n`;const nh=`#version 300 es\nuniform mat4 u_matrix;\nuniform vec3 u_cpColor;\nin vec2 v_position;\nout vec3 blend_color;\nvoid main () {\n\tgl_Position = u_matrix * vec4(v_position, 0, 1);\n\tblend_color = u_cpColor;\n}\n`;const sh=(e,t={},n=undefined)=>{const s=e_(e,th,X_);return{program:s,vertexArrays:H_(e,s,t),elementArrays:J_(e,1,t),flags:[],makeUniforms:Z_}};const rh=(e,t={},n=undefined)=>{const s=e_(e,eh,X_);return{program:s,vertexArrays:q_(e,s,t,n),elementArrays:W_(e,1,t),flags:[],makeUniforms:Z_}};const oh=(e,t={},n=undefined)=>{const s=e_(e,nh,Y_);return{program:s,vertexArrays:H_(e,s,t),elementArrays:J_(e,2,t),flags:[],makeUniforms:Z_}};const ch=(e,t={},n=undefined)=>{const s=e_(e,K_,Y_);return{program:s,vertexArrays:q_(e,s,t,n),elementArrays:W_(e,2,t),flags:[],makeUniforms:Z_}};const ah=Object.freeze({__proto__:null,cpEdgesV1:rh,cpEdgesV2:ch,cpFacesV1:sh,cpFacesV2:oh});const ih=(e,t=1,n={},s=undefined)=>{switch(t){case 1:return[sh(e,n,s),rh(e,n,s)];case 2:default:return[oh(e,n,s),ch(e,n,s)]}};const fh=Object.assign(Object.create(null),{createProgram:e_,initialize:t_,foldedForm:I_,creasePattern:ih},o_,f_,y_,p_,B_,Q_,D_,ah);const lh=({vertices_coords:e,edges_vertices:t})=>{const n=t.map((t=>t.map((t=>e[t])))).map((e=>I(...e)));const s=n.reduce(((e,t)=>Math.min(e,t)),Infinity);return s===Infinity?undefined:s};const dh=({vertices_coords:e,edges_vertices:t})=>{const n=lh({vertices_coords:e,edges_vertices:t});if(n){return Math.max(n*1e-4,1e-10)}const s=Uo({vertices_coords:e});return s&&s.span?Math.max(1e-6*Math.max(...s.span),1e-10):1e-6};const uh=e=>nr(nr(e).reverse());const mh=(e,t)=>{const n=[];const s=El(e);const r=e.edges_faces?e.edges_faces:ws(e);r.forEach(((e,r)=>{if(e.length===1){n[r]="B"}if(e.length===2){const o=e.map((e=>s[e]));if(o[0]===o[1]){n[r]="F";return}const c=e.map((e=>t[e]));const a=c[0]<c[1];const i=o[0]?a:!a;n[r]=i?"V":"M"}}));return n};const gh=e=>{const t=[];e.forEach((e=>{t[e[0]]=undefined;t[e[1]]=undefined}));const n=t.map((()=>[]));e.forEach((([e,t,s])=>{n[e][t]=s;n[t][e]=-s}));return n};const ph=Object.freeze({__proto__:null,faceOrdersToMatrix:gh,facesLayerToEdgesAssignments:mh,flipFacesLayer:uh,makeEpsilon:dh});const _h={taco_taco:e=>[[e[0],e[2]],[e[1],e[3]],[e[1],e[2]],[e[0],e[3]],[e[0],e[1]],[e[2],e[3]]],taco_tortilla:e=>[[e[0],e[2]],[e[0],e[1]],[e[1],e[2]]],tortilla_tortilla:e=>[[e[0],e[2]],[e[1],e[3]]],transitivity:e=>[[e[0],e[1]],[e[1],e[2]],[e[2],e[0]]]};const hh=e=>e[0]<e[1]?`${e[0]} ${e[1]}`:`${e[1]} ${e[0]}`;const vh={taco_taco:e=>[hh([e[0],e[2]]),hh([e[1],e[3]]),hh([e[1],e[2]]),hh([e[0],e[3]]),hh([e[0],e[1]]),hh([e[2],e[3]])],taco_tortilla:e=>[hh([e[0],e[2]]),hh([e[0],e[1]]),hh([e[1],e[2]])],tortilla_tortilla:e=>[hh([e[0],e[2]]),hh([e[1],e[3]])],transitivity:e=>[hh([e[0],e[1]]),hh([e[1],e[2]]),hh([e[2],e[0]])]};const bh={0:0,1:1,2:-1};const yh=(e,t)=>{const n=Object.keys(e);const s=n.map((e=>e.split(" ").map((e=>parseInt(e,10)))));s.forEach(((s,r)=>{const o=bh[e[n[r]]];const c=!t[s[1]]?-o:o;s.push(c)}));return s};const Eh=Object.freeze({__proto__:null,constraintToFacePairs:_h,constraintToFacePairsStrings:vh,solverSolutionToFaceOrders:yh});const Ah=({taco_taco:e,taco_tortilla:t,tortilla_tortilla:n,transitivity:s})=>{const r={};r.taco_taco=e.map((e=>[e[0][0],e[1][0],e[0][1],e[1][1]]));r.taco_tortilla=t.map((e=>[e.taco[0],e.tortilla,e.taco[1]]));r.tortilla_tortilla=n.map((e=>[e[0][0],e[0][1],e[1][0],e[1][1]]));r.transitivity=s.map((e=>[e[0],e[1],e[2]]));return r};const xh=e=>{const t={};Object.keys(e).forEach((e=>{t[e]={}}));Object.keys(e).forEach((n=>{e[n].forEach(((e,s)=>vh[n](e).forEach((e=>{if(t[n][e]===undefined){t[n][e]=[]}t[n][e].push(s)}))))}));return t};const Mh=({vertices_coords:e,edges_vertices:t,edges_faces:n,faces_center:s})=>{const r=t.map((t=>e[t[0]]));const o=t.map((t=>O(e[t[1]],e[t[0]])));return n.map(((e,t)=>e.map((e=>L(O(s[e],r[t]),o[t]))).map((e=>Math.sign(e)))))};const kh=({vertices_coords:e,edges_vertices:t,faces_center:n},s,r)=>{const o=s.map((n=>t[n[0]].map((t=>e[t]))));const c=o.map((e=>e[0]));const a=o.map((e=>O(e[1],e[0])));const i=r.map((e=>e.map((e=>e.map((e=>n[e]))))));return i.map(((e,t)=>e.map((e=>e.map((e=>L(O(e,c[t]),a[t]))).map((e=>Math.sign(e)))))))};const wh=e=>{if(e[0]===1&&e[1]===-1||e[0]===-1&&e[1]===1){return"both"}if(e[0]===1&&e[1]===1){return"right"}if(e[0]===-1&&e[1]===-1){return"left"}return undefined};const Oh=e=>e[0]===e[1]&&e[0]!=="both";const jh=e=>e[0]===e[1]&&e[0]==="both";const Fh=e=>e[0]!==e[1]&&(e[0]==="both"||e[1]==="both");const Ch=(e,t,n)=>{const s=t[0]==="left"||t[1]==="left"?-1:1;const r=t[0]==="both"?[...e[1]]:[...e[0]];const o=t[0]==="both"?0:1;const c=n[o][0]===s?e[o][0]:e[o][1];return{taco:r,tortilla:c}};const Sh=(e,t)=>{if(e===undefined){return undefined}return t[0][0]===t[1][0]?e:[e[0],[e[1][1],e[1][0]]]};const Ph=(e,t,n)=>{const s=t.map((e=>e.length===2&&e[0]!==e[1])).map(((e,t)=>e?t:undefined)).filter((e=>e!==undefined));const r=[];s.forEach((e=>{r[e]=n[e]}));const o=r.map(((t,n)=>t.map((t=>[e[n],[t,t]])))).reduce(((e,t)=>e.concat(t)),[]);return o};const Nh=({vertices_coords:e,edges_vertices:t,edges_faces:n,faces_vertices:s,faces_center:r,edges_vector:o},c=a)=>{if(!r){r=Ds({vertices_coords:e,faces_vertices:s})}const i=Mh({vertices_coords:e,edges_vertices:t,edges_faces:n,faces_center:r});const f=Zr({vertices_coords:e,edges_vertices:t,edges_vector:o},c);const l=hp({vertices_coords:e,edges_vertices:t,edges_faces:n,faces_vertices:s},c);const d=sn(f).filter((e=>e.map((e=>n[e].length>1)).reduce(((e,t)=>e&&t),true)));const u=d.map((e=>e.map((e=>n[e]))));const m=kh({vertices_coords:e,edges_vertices:t,faces_center:r},d,u);const g=m.map((e=>e.map(wh)));const p=g.map(((e,t)=>Oh(e)?u[t]:undefined)).filter((e=>e!==undefined));const _=g.map(((e,t)=>jh(e)?u[t]:undefined)).map(((e,t)=>Sh(e,m[t]))).filter((e=>e!==undefined));const h=Ph(n,i,l);const v=_.concat(h);const b=g.map(((e,t)=>Fh(e)?Ch(u[t],g[t],m[t]):undefined)).filter((e=>e!==undefined));const y=l.map(((e,t)=>i[t].length>1&&i[t][0]===i[t][1]?e:[]));const E=y.map(((e,t)=>({taco:n[t],tortillas:e}))).filter((e=>e.tortillas.length));const A=E.flatMap((e=>e.tortillas.map((t=>({taco:[...e.taco],tortilla:t})))));const x=b.concat(A);return{taco_taco:p,tortilla_tortilla:v,taco_tortilla:x}};const Vh=({faces_polygon:e},t,n=a)=>{const s=t.map((()=>[]));t.forEach(((e,t)=>e.forEach((e=>{s[t][e]=true;s[e][t]=true}))));const r=[];t.forEach(((t,s)=>t.forEach((t=>{const o=pd(e[s],e[t],n);if(o){if(!r[s]){r[s]=[]}if(!r[t]){r[t]=[]}r[s][t]=o;r[t][s]=o}}))));const o=[];for(let t=0;t<r.length-1;t+=1){if(!r[t]){continue}for(let c=t+1;c<r.length;c+=1){if(!r[t][c]){continue}for(let a=c+1;a<r.length;a+=1){if(t===a||c===a){continue}if(!s[t][a]||!s[c][a]){continue}const i=pd(r[t][c],e[a],n);if(i){o.push([t,c,a].sort(((e,t)=>e-t)))}}}}return o};const zh=(e,{taco_taco:t,taco_tortilla:n})=>{const s={};t.map((e=>[e[0][0],e[0][1],e[1][0],e[1][1]].sort(((e,t)=>e-t)))).forEach((e=>[`${e[0]} ${e[1]} ${e[2]}`,`${e[0]} ${e[1]} ${e[3]}`,`${e[0]} ${e[2]} ${e[3]}`,`${e[1]} ${e[2]} ${e[3]}`].forEach((e=>{s[e]=true}))));n.map((e=>[e.taco[0],e.taco[1],e.tortilla].sort(((e,t)=>e-t)).join(" "))).forEach((e=>{s[e]=true}));return e.filter((e=>s[e.join(" ")]===undefined))};const $h=({vertices_coords:e,edges_vertices:t,edges_faces:n,faces_vertices:s,faces_edges:r,edges_vector:o},c=a)=>{const i=El({vertices_coords:e,faces_vertices:s});const f=Is({vertices_coords:e,faces_vertices:s},c);i.map(((e,t)=>e?undefined:t)).filter((e=>e!==undefined)).forEach((e=>f[e].reverse()));const l=bp({vertices_coords:e,faces_vertices:s},c);const{taco_taco:d,taco_tortilla:u,tortilla_tortilla:m}=Nh({vertices_coords:e,edges_vertices:t,edges_faces:n,faces_vertices:s,faces_edges:r,edges_vector:o},c);const g=Vh({faces_polygon:f},l,c);const p=zh(g,{taco_taco:d,taco_tortilla:u});const _=sn(l).map((e=>e.join(" ")));const h=Ah({taco_taco:d,taco_tortilla:u,tortilla_tortilla:m,transitivity:p});const v=xh(h);return{constraints:h,lookup:v,facePairs:_,faces_winding:i}};const Th=Object.freeze({__proto__:null,setup:$h});const Lh=({edges_faces:e,edges_assignment:t},n,s)=>{const r={0:0,1:2,2:1};const o={M:1,m:1,V:2,v:2};const c={};n.forEach((e=>{c[e]=true}));const a={};e.forEach(((e,n)=>{const i=t[n];const f=o[i];if(e.length<2||f===undefined){return}const l=s[e[0]];const d=l?f:r[f];const u=`${e[0]} ${e[1]}`;const m=`${e[1]} ${e[0]}`;if(u in c){a[u]=d}if(m in c){a[m]=r[d]}}));return a};const Bh=["111112","111121","111222","112111","121112","121222","122111","122212","211121","211222","212111","212221","221222","222111","222212","222221"];const Ih=["112","121","212","221"];const Uh=["11","22"];const Rh=["112","121","122","211","212","221"];const Dh=(e,t,n)=>{const s=Array.from(n).map((e=>parseInt(e,10)));if(s.filter((e=>e===0)).length!==t){return}e[t][n]=false;let r=false;for(let n=0;n<s.length;n+=1){const o=[];if(s[n]!==0){continue}for(let r=1;r<=2;r+=1){s[n]=r;if(e[t-1][s.join("")]!==false){o.push([n,r])}}s[n]=0;if(o.length>0&&r===false){r=[]}if(o.length===1){r.push(o[0])}}if(r!==false&&r.length===0){r=true}e[t][n]=r};const qh=e=>{const t=e[0].length;const n=Array.from(Array(t+1)).map((()=>({})));Array.from(Array(2**t)).map(((e,t)=>t.toString(2))).map((e=>Array.from(e).map((e=>parseInt(e,10)+1)).join(""))).map((e=>`11111${e}`.slice(-t))).forEach((e=>{n[0][e]=false}));e.forEach((e=>{n[0][e]=true}));Array.from(Array(t)).map(((e,t)=>t+1)).map((e=>Array.from(Array(3**t)).map(((e,t)=>t.toString(3))).map((e=>`000000${e}`.slice(-t))).forEach((t=>Dh(n,e,t)))));let s=[];Array.from(Array(t+1)).map(((e,n)=>t-n)).forEach((e=>{const t=[];Object.keys(n[e]).forEach((s=>{let r=n[e][s];if(r.constructor===Array){r=r[0]}t.push([s,r])}));s=s.concat(t)}));s.sort(((e,t)=>parseInt(e[0],10)-parseInt(t[0],10)));const r={};s.forEach((e=>{r[e[0]]=Object.freeze(e[1])}));return Object.freeze(r)};const Wh={taco_taco:qh(Bh),taco_tortilla:qh(Ih),tortilla_tortilla:qh(Uh),transitivity:qh(Rh)};const Gh=Object.freeze(Object.keys(Wh));const Hh=(e,t,...n)=>{const s={0:0,1:2,2:1};const r=_h[e](t);const o=r.map((e=>e[1]<e[0]));const c=r.map(((e,t)=>o[t]?`${e[1]} ${e[0]}`:`${e[0]} ${e[1]}`));const a=c.map(((e,t)=>{for(let r=0;r<n.length;r+=1){if(n[r][e]){return o[t]?s[n[r][e]]:n[r][e]}}return 0})).join("");if(Wh[e][a]===true||Wh[e][a]===false){return Wh[e][a]}const i=Wh[e][a];const f=c[i[0]];const l=o[i[0]]?s[i[1]]:i[1];return[f,l]};const Jh=(e,t,n)=>{const s={};Gh.forEach((r=>{const o=n.flatMap((e=>t[r][e]));s[r]=Xt(o).filter((t=>e[r][t]))}));return s};const Qh=(e,t,n,...s)=>{let r=n;const o={};do{const n=Jh(e,t,r);const c={};for(let t=0;t<Gh.length;t+=1){const r=Gh[t];const a=n[r];for(let t=0;t<a.length;t+=1){const n=Hh(r,e[r][a[t]],...s,o);if(n===true){continue}if(n===false){throw new Error(`invalid ${r} ${a[t]}:${e[r][a[t]]}`)}if(o[n[0]]){if(o[n[0]]!==n[1]){throw new Error(`conflict ${r} ${a[t]}:${e[r][a[t]]}`)}}else{const[e,t]=n;c[e]=true;o[n[0]]=t}}}r=Object.keys(c)}while(r.length);return o};const Zh=(e,t,n)=>{const s=Object.keys(t);const r={};e.forEach((e=>{r[e]=true}));let o=0;const c=[];while(o<e.length){if(!r[e[o]]){o+=1;continue}const a=[];const i=[e[o]];const f={[e[o]]:true};do{const e=i.pop();delete r[e];a.push(e);const o={};s.forEach((s=>{const r=n[s][e];if(!r){return}r.map((e=>t[s][e])).map((e=>vh[s](e).forEach((e=>{o[e]=true}))))}));const c=Object.keys(o).filter((e=>r[e])).filter((e=>!f[e]));i.push(...c);c.forEach((e=>{f[e]=true}))}while(i.length);o+=1;c.push(a)}return c};const Yh=(e,t,n,...s)=>{if(!n.length){return[]}const r=n[0];const o=[];const c=[];[1,2].forEach((a=>{let i;try{i=Qh(e,t,[r],...s,{[r]:a})}catch(e){return}i[r]=a;if(Object.keys(i).length===n.length){o.push(i)}else{c.push(i)}}));const a=c.map((r=>Yh(e,t,n.filter((e=>!(e in r))),...s,r)));return o.map((e=>[...s,e])).concat(...a)};const Xh=({constraints:e,lookup:t,facePairs:s,orders:r})=>{let o;try{o=Qh(e,t,Object.keys(r),r)}catch(e){throw new Error(n.noLayerSolution,{cause:e})}const c=s.filter((e=>!(e in r))).filter((e=>!(e in o)));let a;try{a=Zh(c,e,t).map((n=>Yh(e,t,n,r,o)))}catch(e){throw new Error(n.noLayerSolution,{cause:e})}const i={...r,...o};const f=a.map((e=>e.map((e=>Object.assign({},...e)))));return{root:i,branches:f}};const Kh=e=>{const t=e.reduce(((e,t)=>e*t),1);const n=e.slice();for(let e=n.length-2;e>=0;e-=1){n[e]*=n[e+1]}n.push(1);n.shift();return Array.from(Array(t)).map(((t,s)=>e.map(((e,t)=>Math.floor(s/n[t])%e))))};const ev={count:function(){return this.branches.map((e=>e.length))},faceOrders:function(...e){return yh(this.compile(...e),this.faces_winding)},facesLayer:function(...e){return nr(this.linearize(...e).reverse())},compile:function(...e){const t=Array(this.branches.length).fill(0).map(((t,n)=>e[n]!=null?e[n]:t));const n=this.branches?this.branches.map(((e,n)=>e[t[n]])):[];return Object.assign({},this.root,...n)},directedPairs:function(...e){const t=this.compile(...e);return Object.keys(t).map((e=>t[e]===1?e.split(" "):e.split(" ").reverse())).map((e=>e.map((e=>parseInt(e,10)))))},linearize:function(...e){return xl(this.directedPairs(...e))},allSolutions:function(){return Kh(this.count()).map((e=>this.compile(...e)))},allFacesLayers:function(){return Kh(this.count()).map((e=>this.facesLayer(...e)))}};const tv=()=>({root:{},branches:[],faces_winding:[]});const nv=({vertices_coords:e,edges_vertices:t,edges_faces:n,edges_assignment:s,faces_vertices:r,faces_edges:o,edges_vector:c},a)=>{if(!e||!t||!r){return Object.assign(Object.create(ev),tv())}if(!o){o=Ls({edges_vertices:t,faces_vertices:r})}if(!n){n=ks({edges_vertices:t,faces_edges:o})}if(a===undefined){a=dh({vertices_coords:e,edges_vertices:t})}const{constraints:i,lookup:f,facePairs:l,faces_winding:d}=$h({vertices_coords:e,edges_vertices:t,edges_faces:n,faces_vertices:r,faces_edges:o,edges_vector:c},a);const u=Lh({edges_faces:n,edges_assignment:s},l,d);const{root:m,branches:g}=Xh({constraints:i,lookup:f,facePairs:l,orders:u});return Object.assign(Object.create(ev),{root:m,branches:g,faces_winding:d})};const sv=(e,t,n=1e-6)=>{const s=e[0]<e[1]?e:[e[1],e[0]];const r=t[0]<t[1]?t:[t[1],t[0]];const o=Math.min(s[1],r[1])-Math.max(s[0],r[0]);return o>n};const rv={taco_taco:e=>[[e[0],e[2]],[e[1],e[3]],[e[1],e[2]],[e[0],e[3]],[e[0],e[1]],[e[2],e[3]]],taco_tortilla:e=>[[e[0],e[2]],[e[0],e[1]],[e[1],e[2]]],tortilla_tortilla:e=>[[e[0],e[2]],[e[1],e[3]]],transitivity:e=>[[e[0],e[1]],[e[1],e[2]],[e[2],e[0]]]};const ov=e=>e[0]<e[1]?`${e[0]} ${e[1]}`:`${e[1]} ${e[0]}`;const cv={taco_taco:e=>[ov([e[0],e[2]]),ov([e[1],e[3]]),ov([e[1],e[2]]),ov([e[0],e[3]]),ov([e[0],e[1]]),ov([e[2],e[3]])],taco_tortilla:e=>[ov([e[0],e[2]]),ov([e[0],e[1]]),ov([e[1],e[2]])],tortilla_tortilla:e=>[ov([e[0],e[2]]),ov([e[1],e[3]])],transitivity:e=>[ov([e[0],e[1]]),ov([e[1],e[2]]),ov([e[2],e[0]])]};const av={0:0,1:1,2:-1};const iv=(e,t)=>{const n=Object.keys(e);const s=n.map((e=>e.split(" ").map((e=>parseInt(e,10)))));s.forEach(((s,r)=>{const o=av[e[n[r]]];const c=(o===1^t[s[1]])*-2+1;s.push(c)}));return s};const fv=(e,t)=>{if(e.orders){e.orders=e.orders.flatMap((e=>iv(e,t)))}if(e.leaves){e.leaves=e.leaves.map((e=>iv(e,t)))}if(e.partitions){e.partitions.forEach((e=>fv(e,t)))}if(e.node){e.node.forEach((e=>fv(e,t)))}return e};const lv=Object.freeze({__proto__:null,constraintToFacePairs:rv,constraintToFacePairsStrings:cv,pairArrayToSortedPairString:ov,rangesOverlapExclusive:sv,reformatSolution:fv});const dv=({vertices_coords:e,edges_vertices:t},n,s,r=a)=>{const o=n.map((n=>t[n].map((t=>e[t]))));const c=o.map((e=>e.map((e=>F(e,s)))));const i=sv(...c,r);return i};const uv=({vertices_coords:e,edges_vertices:t},n,s=a)=>{const r=n.map((e=>e.join(" ")));const o={};r.forEach(((e,t)=>{if(o[e]===undefined){o[e]=[]}o[e].push(t)}));Object.keys(o).filter((e=>o[e].length<2)).forEach((e=>delete o[e]));const c={};Object.keys(o).forEach((e=>{c[e]=cn(o[e])}));const i={};Object.keys(c).forEach((n=>{const r=c[n][0][0];const o=t[r].map((t=>e[t]));const a=h(w(o[1],o[0]));i[n]=c[n].map((n=>dv({vertices_coords:e,edges_vertices:t},n,a,s)))}));const f={};Object.keys(c).forEach((e=>{f[e]=c[e].filter(((t,n)=>i[e][n]))}));return Object.keys(f).flatMap((e=>f[e]))};const mv=({vertices_coords:e,edges_vertices:t,edges_faces:n},s,r,o=1e-6)=>{const c=uv({vertices_coords:e,edges_vertices:t},r,o);const a=c.map((e=>e.map((e=>n[e]))));a.forEach(((e,t)=>{if(s[e[0][0]]!==s[e[1][0]]){a[t][1].reverse()}}));return a};const gv=(e,t,n)=>{const s=e.map((e=>yr(t,e,rt,n))).reduce(((e,t)=>e||t),false);if(s){return true}const r=Gr(t,{vector:O(e[1],e[0]),origin:e[0]},lt,lt,n);if(r){return true}return false};const pv=({vertices_coords:e,edges_vertices:t,edges_faces:n,edges_foldAngle:s},r,o,c,i,f,l=a)=>{if(r.length<2){return[]}const d=r.map((e=>e.map((e=>e.split(" ").map((e=>parseInt(e,10)))))));const u=d.map((e=>e.flat().sort(((e,t)=>e-t))));const m=u.map((e=>[...new Set(e)]));const g=n.map((e=>{const t={};e.forEach((e=>{t[e]={}}));return t}));const p=f.map(((e,t)=>e.flatMap((e=>m[e])).filter((e=>!g[t][e]))));const _=f.map(((e,t)=>e.flatMap((e=>m[e])).filter((e=>g[t][e]))));p.map(((e,t)=>jt(s[t])?t:undefined)).filter((e=>e!==undefined)).forEach((e=>{delete p[e];delete _[e]}));const h=p.map(((n,s)=>t[s].map((t=>e[t]))));const v=p.map(((e,t)=>e.map((e=>gv(h[t].map((t=>Dg(o[c[e]],t))),i[e],l)))));const b=v.flatMap(((e,t)=>e.map(((e,n)=>e?{edge:t,face:p[t][n],otherFace:_[t][n]}:undefined)).filter((e=>e!==undefined))));return b};const _v=(e,t,n)=>{const s=(e,t)=>{const n=Dg(e,t);return[n[0],n[1]]};const r=e.vertices_coords.map((e=>Z(3,e)));const o=t.map((t=>To(e,t)));n.forEach(((e,t)=>{o[t].vertices_coords=o[t].vertices_coords.map(((t,n)=>s(e,r[n])))}));const c=e.edges_foldAngle.map(jt).map(((e,t)=>!e?t:undefined)).filter((e=>e!==undefined));const a=St(e,"edges");o.forEach((e=>c.forEach((t=>a.forEach((n=>{delete e[n][t]}))))));return o};const hv=({edges_vertices:e,faces_edges:t},n)=>{const s=e.map((()=>({})));n.forEach(((e,n)=>t[n].forEach((t=>{s[t][e]=true}))));const r=s.map((e=>Object.keys(e).map((e=>parseInt(e,10))).sort(((e,t)=>e-t))));return r};const vv=({vertices_coords:e,edges_vertices:t,edges_faces:n,edges_foldAngle:s,faces_edges:r,faces_winding:o},c,a,i,f,l,d)=>{const u=l.map((e=>c[e[0]]));const m=nr(u).map((e=>e.constructor===Array?e:[e]));const g=m.map((e=>e.map((e=>f[e]))));const p=hv({edges_vertices:t,faces_edges:r},c);p.map(((e,t)=>e.length!==2?t:undefined)).filter((e=>e!==undefined)).forEach((e=>delete p[e]));const _=mv({vertices_coords:e,edges_vertices:t,edges_faces:n},c,p,d).map((e=>[...e[0],...e[1]]));const h=pv({vertices_coords:e,edges_vertices:t,edges_faces:n,edges_foldAngle:s},g,i,c,a,p,d);h.map((e=>[e.face,e.otherFace].map((e=>o[e]))));const v=h.map((e=>e.face<e.otherFace));const b=h.map(((e,t)=>v[t]?[e.face,e.otherFace]:[e.otherFace,e.face])).map((e=>e.join(" ")));const y={"-1":2,1:1,0:0};const E=h.map((e=>Math.sign(s[e.edge]))).map((e=>y[e]));const A={};b.forEach(((e,t)=>{A[e]=E[t]}));return{tortillas3D:_,orders:A}};const bv=({vertices_coords:e,edges_vertices:t,edges_faces:n,edges_assignment:s,edges_foldAngle:r,faces_vertices:o,faces_edges:c,faces_faces:i},f=a)=>{const{sets_faces:l,sets_transformXY:d,faces_set:u,faces_winding:m}=mp({vertices_coords:e,faces_vertices:o,faces_faces:i},f);const g=_v({vertices_coords:e,edges_vertices:t,edges_faces:n,edges_assignment:s,edges_foldAngle:r,faces_vertices:o,faces_edges:c,faces_faces:i},l,d);const p=tn(...g.map((e=>Is(e,f))));m.map(((e,t)=>e?undefined:t)).filter((e=>e!==undefined)).forEach((e=>p[e].reverse()));const _=tn(...g.map((e=>bp(e,f))));const h=p.map((e=>$(...e)));g.forEach((e=>{e.faces_center=e.faces_vertices.map(((e,t)=>h[t]))}));const v=g.map((e=>Nh(e,f)));const b=v.flatMap((e=>e.taco_taco));const y=v.flatMap((e=>e.taco_tortilla));const E=v.flatMap((e=>e.tortilla_tortilla));const A=Vh({faces_polygon:p},_,f);const x=zh(A,{taco_taco:b,taco_tortilla:y});const M=sn(_);const k=M.map((e=>e.join(" ")));const{tortillas3D:w,orders:O}=vv({vertices_coords:e,edges_vertices:t,edges_faces:n,edges_foldAngle:r,faces_edges:c,faces_winding:m},u,p,d,k,M,f);E.push(...w);const j=Ah({taco_taco:b,taco_tortilla:y,tortilla_tortilla:E,transitivity:x});const F=xh(j);g.map((e=>Lh(e,k,m))).forEach((e=>Object.assign(O,e)));return{constraints:j,lookup:F,facePairs:k,faces_winding:m,orders:O}};const yv=Object.freeze({__proto__:null,setup:bv});const Ev=()=>({root:{},branches:[],faces_winding:[]});const Av=({vertices_coords:e,edges_vertices:t,edges_faces:n,edges_assignment:s,edges_foldAngle:r,faces_vertices:o,faces_edges:c,faces_faces:a},i)=>{if(!e||!t||!o){return Object.assign(Object.create(ev),Ev())}if(!c){c=Ls({edges_vertices:t,faces_vertices:o})}if(!n){n=ks({edges_vertices:t,faces_edges:c})}if(!a){a=Bs({faces_vertices:o})}if(!r&&s){r=Cs({edges_assignment:s})}if(!s){s=js({edges_foldAngle:r})}if(i===undefined){i=dh({vertices_coords:e,edges_vertices:t})}const{constraints:f,lookup:l,facePairs:d,faces_winding:u,orders:m}=bv({vertices_coords:e,edges_vertices:t,edges_faces:n,edges_assignment:s,edges_foldAngle:r,faces_vertices:o,faces_edges:c,faces_faces:a},i);const{root:g,branches:p}=Xh({constraints:f,lookup:l,facePairs:d,orders:m});return Object.assign(Object.create(ev),{root:g,branches:p,faces_winding:u})};const xv=(e,t,n)=>{const s=e.map((e=>e?(e[0]+e[1])/2:undefined));const r=[];e.forEach(((o,c)=>{if(!o){return}if(!t&&c===e.length-1){return}const a=o[1];const i=a-n*2;const f=a+n*2;const l=[c,(c+1)%e.length];const d=l.map((e=>s[e])).map((e=>e>a));const u=(!d[0]&&!d[1])*1+(d[0]&&d[1])*2;const m=r.filter((e=>e.min<a&&e.max>a)).shift();const g={faces:l,taco_type:u};if(m){m.pairs.push(g)}else{r.push({min:i,max:f,pairs:[g]})}}));return r.map((e=>e.pairs)).filter((e=>e.length>1)).map((e=>({both:e.filter((e=>e.taco_type===0)).map((e=>e.faces)),left:e.filter((e=>e.taco_type===1)).map((e=>e.faces)),right:e.filter((e=>e.taco_type===2)).map((e=>e.faces))})))};const Mv=(e,t,n)=>t<n?e.slice(t+1,n):e.slice(n+1,t);const kv=(e,t,n=true,s=a)=>{const r=nr(t);const o=e.map((e=>e?e[1]:undefined));const c=e.map((e=>e?Math.min(...e):undefined)).map((e=>e+s));const i=e.map((e=>e?Math.max(...e):undefined)).map((e=>e-s));const f=r.length+(n?0:-1);for(let e=0;e<f;e+=1){const n=(e+1)%r.length;if(r[e]===r[n]){continue}const s=Mv(t,r[e],r[n]).flat();const a=s.map((t=>o[e]<c[t])).reduce(((e,t)=>e&&t),true);const f=s.map((t=>o[e]>i[t])).reduce(((e,t)=>e&&t),true);if(!a&&!f){return false}}return true};const wv=e=>{const t=Kt(e);const n={};let s=0;for(let e=0;e<t.length;e+=1){if(n[t[e]]===undefined){s+=1;n[t[e]]=s}else if(n[t[e]]!==undefined){if(n[t[e]]!==s){return false}s-=1;n[t[e]]=undefined}}return true};const Ov=(e,t)=>e.map((e=>t[e])).filter((e=>e!==undefined));const jv=(e,t,n,s,r)=>{const o=Pe(t);if(!kv(e,t,s,r)){return false}for(let e=0;e<n.length;e+=1){const t=Ov(o,n[e]);if(!wv(t)){return false}}return true};const Fv={V:true,v:true,M:true,m:true};const Cv=e=>{let t=0;const n=e.slice(1);return[false].concat(n.map((e=>Fv[e]?++t:t)).map((e=>e%2===1)))};const Sv={V:1,v:1,M:-1,m:-1};const Pv=(e,t)=>t%2===0?Sv[e]||0:-(Sv[e]||0);const Nv=e=>{let t=0;return e.slice(1).concat([e[0]]).map((e=>{const n=Pv(e,t);t+=Sv[e]===undefined?0:1;return n}))};const Vv=(e,t)=>{const n=Cv(t).map(((t,n)=>e[n]*(t?-1:1)));const s=e.map((()=>undefined));s[0]=[0,n[0]];for(let r=1;r<e.length;r+=1){if(t[r]==="B"||t[r]==="b"){break}const o=(r-1+e.length)%e.length;const c=s[o][1];s[r]=[c,c+n[r]]}return s};const zv={B:true,b:true};const $v=(e,t,n=a)=>{const s=Vv(e,t);const r=Nv(t);const o=t.map((e=>!zv[e])).reduce(((e,t)=>e&&t),true);if(o){const e=s[0][0];const t=s[s.length-1][1];if(Math.abs(e-t)>n){return[]}}const c=xv(s,o,n).map((e=>[e.left,e.right].map(nr).filter((e=>e.length>1)))).reduce(((e,t)=>e.concat(t)),[]);const i=(t=[0],a=0,f=0)=>{const l=a+1;const d=r[a];const u=a>=e.length-1;const m=o&&u;if(!jv(s,t,c,m,n)){return[]}if(m){const e=nr(t);const n=e[0];const s=e[a];if(d>0&&s>n){return[]}if(d<0&&s<n){return[]}}if(u){return[t]}if(d===0){t[f]=[l].concat(t[f]);return i(t,l,f)}const g=d===1?Array.from(Array(t.length-f)).map(((e,t)=>f+t+1)):Array.from(Array(f+1)).map(((e,t)=>t));const p=g.map((()=>cr(t)));p.forEach(((e,t)=>e.splice(g[t],0,l)));return p.map(((e,t)=>i(e,l,g[t]))).reduce(((e,t)=>e.concat(t)),[])};return i().map(nr)};const Tv=(e,t,n)=>{if(t==null){t=e.map((()=>"U"))}const s=Qp(t);const r=s.map((t=>$v(e,t,n)));return s.map(((e,t)=>t)).filter((e=>r[e].length>0)).map((e=>({assignment:s[e],layer:r[e]})))};Object.assign(nv,{table:Wh,...ph,...Eh,...Th,layer3d:Av,...yv,...lv,singleVertexSolver:$v,singleVertexAssignmentSolver:Tv,foldStripWithAssignments:Vv});Object.assign(ju,Mp);const Lv={graph:ju,cp:Fu,origami:Cu,axiom:um,convert:dg,math:Dp,singleVertex:Yp,svg:Qf,webgl:fh,layer:nv};Rf.ear=Lv;Object.defineProperty(Lv,"window",{enumerable:false,set:e=>{Qf.window=o(e)}});export{Lv as default};